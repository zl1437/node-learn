v8-version,13,6,233,10,-node.21,0
v8-platform,macos,macos
shared-library,/opt/homebrew/Cellar/node/24.5.0/bin/node,0x100fe8000,0x10244f7b4,16646144
shared-library,/opt/homebrew/Cellar/libuv/1.51.0/lib/libuv.1.dylib,0x106230de8,0x1062491a4,4397924352
shared-library,/opt/homebrew/Cellar/simdjson/3.13.0/lib/libsimdjson.26.0.0.dylib,0x1062111b8,0x1062191c0,4397793280
shared-library,/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlidec.1.1.0.dylib,0x106270380,0x106276338,4398170112
shared-library,/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlienc.1.1.0.dylib,0x1063211f4,0x10635a8a0,4398907392
shared-library,/opt/homebrew/Cellar/c-ares/1.34.5/lib/libcares.2.19.4.dylib,0x1062c11b0,0x1062dead4,4398514176
shared-library,/opt/homebrew/Cellar/libnghttp2/1.66.0/lib/libnghttp2.14.dylib,0x1063bcda0,0x1063ce510,4399546368
shared-library,/opt/homebrew/Cellar/libnghttp3/1.11.0/lib/libnghttp3.9.3.0.dylib,0x1063f0d30,0x1064028fc,4399759360
shared-library,/opt/homebrew/Cellar/libngtcp2/1.14.0/lib/libngtcp2.16.dylib,0x106478da0,0x1064a1974,4400316416
shared-library,/opt/homebrew/Cellar/sqlite/3.50.4/lib/libsqlite3.3.50.4.dylib,0x106699258,0x1067828c8,4402544640
shared-library,/opt/homebrew/Cellar/zstd/1.5.7/lib/libzstd.1.5.7.dylib,0x1065742c8,0x1065f5590,4401332224
shared-library,/opt/homebrew/Cellar/openssl@3/3.5.1/lib/libcrypto.3.dylib,0x106c48f00,0x106e4d940,4408508416
shared-library,/opt/homebrew/Cellar/openssl@3/3.5.1/lib/libssl.3.dylib,0x1068a51f0,0x106921b3c,4404690944
shared-library,/opt/homebrew/Cellar/icu4c@77/77.1/lib/libicui18n.77.1.dylib,0x1073d9a60,0x107553958,4416421888
shared-library,/opt/homebrew/Cellar/icu4c@77/77.1/lib/libicuuc.77.1.dylib,0x1070cefa0,0x1071a22c8,4413243392
shared-library,/usr/lib/libz.1.dylib,0x1a1ad9640,0x1a1ae4fe0,323747840
shared-library,/usr/lib/libSystem.B.dylib,0x1a1b90158,0x1a1b9076c,323747840
shared-library,/usr/lib/system/libcache.dylib,0x1a1b89840,0x1a1b8c414,323747840
shared-library,/usr/lib/system/libcommonCrypto.dylib,0x1a1b44a50,0x1a1b4fec4,323747840
shared-library,/usr/lib/system/libcompiler_rt.dylib,0x1a1b6f720,0x1a1b722d8,323747840
shared-library,/usr/lib/system/libcopyfile.dylib,0x1a1b649a8,0x1a1b6c244,323747840
shared-library,/usr/lib/system/libcorecrypto.dylib,0x193693c80,0x193710c70,323747840
shared-library,/usr/lib/system/libdispatch.dylib,0x19377b120,0x1937b6f40,323747840
shared-library,/usr/lib/system/libdyld.dylib,0x19393abe0,0x1939644a8,323747840
shared-library,/usr/lib/system/libkeymgr.dylib,0x1a1b7f680,0x1a1b7fd64,323747840
shared-library,/usr/lib/system/libmacho.dylib,0x1a1b27688,0x1a1b29ee0,323747840
shared-library,/usr/lib/system/libquarantine.dylib,0x1a0f53898,0x1a0f55afc,323747840
shared-library,/usr/lib/system/libremovefile.dylib,0x1a1b7c728,0x1a1b7e740,323747840
shared-library,/usr/lib/system/libsystem_asl.dylib,0x199934ca8,0x199949ff4,323747840
shared-library,/usr/lib/system/libsystem_blocks.dylib,0x193628ba8,0x19362aa38,323747840
shared-library,/usr/lib/system/libsystem_c.dylib,0x1937c4eb8,0x19383d394,323747840
shared-library,/usr/lib/system/libsystem_collections.dylib,0x1a1b73730,0x1a1b77370,323747840
shared-library,/usr/lib/system/libsystem_configuration.dylib,0x19ff439c8,0x19ff46cd0,323747840
shared-library,/usr/lib/system/libsystem_containermanager.dylib,0x19ecdeca0,0x19ed061e8,323747840
shared-library,/usr/lib/system/libsystem_coreservices.dylib,0x1a1669be0,0x1a166ee34,323747840
shared-library,/usr/lib/system/libsystem_darwin.dylib,0x197438b20,0x19743f4bc,323747840
shared-library,/usr/lib/system/libsystem_darwindirectory.dylib,0x27c49ba58,0x27c49df5c,323747840
shared-library,/usr/lib/system/libsystem_dnssd.dylib,0x1a1b80a50,0x1a1b86c3c,323747840
shared-library,/usr/lib/system/libsystem_eligibility.dylib,0x27c49f858,0x27c4a30c8,323747840
shared-library,/usr/lib/system/libsystem_featureflags.dylib,0x1937c1970,0x1937c3728,323747840
shared-library,/usr/lib/system/libsystem_info.dylib,0x193972de0,0x19399c674,323747840
shared-library,/usr/lib/system/libsystem_m.dylib,0x1a1ae85c0,0x1a1b159ac,323747840
shared-library,/usr/lib/system/libsystem_malloc.dylib,0x193732ca8,0x19376d870,323747840
shared-library,/usr/lib/system/libsystem_networkextension.dylib,0x19989dcb8,0x1998b3058,323747840
shared-library,/usr/lib/system/libsystem_notify.dylib,0x19789ab38,0x1978aa5d4,323747840
shared-library,/usr/lib/system/libsystem_sandbox.dylib,0x19ff488e8,0x19ff4d098,323747840
shared-library,/usr/lib/system/libsystem_sanitizers.dylib,0x27c4a78a0,0x27c4ab99c,323747840
shared-library,/usr/lib/system/libsystem_secinit.dylib,0x1a1b78a60,0x1a1b7a32c,323747840
shared-library,/usr/lib/system/libsystem_kernel.dylib,0x1938f17c0,0x193925308,323747840
shared-library,/usr/lib/system/libsystem_platform.dylib,0x19396a860,0x193970f98,323747840
shared-library,/usr/lib/system/libsystem_pthread.dylib,0x19392d908,0x1939383a0,323747840
shared-library,/usr/lib/system/libsystem_symptoms.dylib,0x19b491a40,0x19b497658,323747840
shared-library,/usr/lib/system/libsystem_trace.dylib,0x1936783d0,0x19368ef98,323747840
shared-library,/usr/lib/system/libunwind.dylib,0x1a1b54438,0x1a1b5adec,323747840
shared-library,/usr/lib/system/libxpc.dylib,0x19362d428,0x19366996c,323747840
shared-library,/usr/lib/libobjc.A.dylib,0x193539400,0x19357aa40,323747840
shared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x1939a3ba0,0x193b9fca0,323747840
shared-library,/usr/lib/swift/libswiftCore.dylib,0x1a50d3250,0x1a5542444,323747840
shared-library,/usr/lib/libc++abi.dylib,0x1938d7b00,0x1938ed3ac,323747840
shared-library,/usr/lib/libRosetta.dylib,0x27b070740,0x27b075e4c,323747840
shared-library,/usr/lib/libc++.1.dylib,0x193847988,0x1938aafc8,323747840
shared-library,/System/Library/Frameworks/Foundation.framework/Versions/C/Foundation,0x194f95560,0x19597fd78,323747840
shared-library,/usr/lib/swift/libswiftObjectiveC.dylib,0x1add38080,0x1add39bd8,323747840
shared-library,/System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal,0x197736f20,0x19776dc50,323747840
shared-library,/usr/lib/liboah.dylib,0x1a1b5c740,0x1a1b61e4c,323747840
shared-library,/usr/lib/libfakelink.dylib,0x1a1b91638,0x1a1b92ba0,323747840
shared-library,/usr/lib/libicucore.A.dylib,0x19716c938,0x1973ca11c,323747840
shared-library,/System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking,0x1a1b945d0,0x1a1b948a0,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices,0x1a95bc950,0x1a95bc950,323747840
shared-library,/System/Library/Frameworks/Security.framework/Versions/A/Security,0x196d63918,0x1970a7630,323747840
shared-library,/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit,0x1977b8128,0x19786ec48,323747840
shared-library,/System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages,0x1ad231280,0x1ad2bedd0,323747840
shared-library,/System/Library/Frameworks/NetFS.framework/Versions/A/NetFS,0x1b9739dd8,0x1b9745494,323747840
shared-library,/System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork,0x1994d4c18,0x19974a250,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents,0x19d1628e0,0x19d16d368,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore,0x1974441c0,0x197530278,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata,0x19c5d82c0,0x19c64aa5c,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices,0x1a1672020,0x1a169c29c,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit,0x1a1cdeb30,0x1a1d348dc,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE,0x19b40cec0,0x19b470800,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices,0x193ee2838,0x194106938,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices,0x1a30f5fc8,0x1a313ca0c,323747840
shared-library,/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList,0x19d171340,0x19d18dbec,323747840
shared-library,/System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration,0x194bf6b70,0x194c7a1e0,323747840
shared-library,/usr/lib/libapple_nghttp2.dylib,0x1a1d74720,0x1a1d85b54,323747840
shared-library,/usr/lib/libcompression.dylib,0x1a1dbd7c0,0x1a1e15e10,323747840
shared-library,/usr/lib/libsqlite3.dylib,0x19b06d998,0x19b20b340,323747840
shared-library,/System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics,0x19c5443a0,0x19c5693e4,323747840
shared-library,/System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics,0x199e980c8,0x19a385e9c,323747840
shared-library,/System/Library/Frameworks/GSS.framework/Versions/A/GSS,0x1a5db4b88,0x1a5dff430,323747840
shared-library,/System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices,0x19b3a42e0,0x19b3ecf74,323747840
shared-library,/usr/lib/libenergytrace.dylib,0x1998b86d8,0x1998b8d6c,323747840
shared-library,/System/Library/Frameworks/Network.framework/Versions/A/Network,0x19b49c548,0x19c1f4488,323747840
shared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x19c5746e8,0x19c57537c,323747840
shared-library,/usr/lib/libbsm.0.dylib,0x1a0f7a680,0x1a0f88f84,323747840
shared-library,/usr/lib/system/libkxld.dylib,0x1a1b2b680,0x1a1b4287c,323747840
shared-library,/System/Library/PrivateFrameworks/AppleKeyStore.framework/Versions/A/AppleKeyStore,0x23d7d2340,0x23d81a7c8,323747840
shared-library,/usr/lib/libCoreEntitlements.dylib,0x27aec8918,0x27aed0774,323747840
shared-library,/System/Library/PrivateFrameworks/MessageSecurity.framework/Versions/A/MessageSecurity,0x25889d738,0x2588deb98,323747840
shared-library,/System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer,0x19b052ed8,0x19b0651b8,323747840
shared-library,/usr/lib/libMobileGestalt.dylib,0x1998bb240,0x199915fe8,323747840
shared-library,/System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression,0x1a1650910,0x1a16583fc,323747840
shared-library,/usr/lib/libcoretls.dylib,0x1a0f628f8,0x1a0f74808,323747840
shared-library,/usr/lib/libcoretls_cfhelpers.dylib,0x1a316b610,0x1a316c45c,323747840
shared-library,/usr/lib/libpam.2.dylib,0x1a1db7720,0x1a1dbabb4,323747840
shared-library,/usr/lib/libxar.1.dylib,0x1a31df7c0,0x1a31ebd98,323747840
shared-library,/System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout,0x19d19ee58,0x19d1d1c28,323747840
shared-library,/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration,0x19c662a58,0x19c66964c,323747840
shared-library,/usr/lib/libarchive.2.dylib,0x1a1be6910,0x1a1cc881c,323747840
shared-library,/usr/lib/libxml2.2.dylib,0x19d1e8970,0x19d2b25e4,323747840
shared-library,/usr/lib/liblangid.dylib,0x19ff565e8,0x19ff57110,323747840
shared-library,/System/Library/Frameworks/Combine.framework/Versions/A/Combine,0x1a74b8218,0x1a75a98e0,323747840
shared-library,/System/Library/PrivateFrameworks/CollectionsInternal.framework/Versions/A/CollectionsInternal,0x241a4ad28,0x241b74388,323747840
shared-library,/System/Library/PrivateFrameworks/ReflectionInternal.framework/Versions/A/ReflectionInternal,0x2618fcea8,0x261902ef0,323747840
shared-library,/System/Library/PrivateFrameworks/RuntimeInternal.framework/Versions/A/RuntimeInternal,0x2625d3fd0,0x2625e048c,323747840
shared-library,/usr/lib/swift/libswiftCoreFoundation.dylib,0x1bc8a89e4,0x1bc8acf98,323747840
shared-library,/usr/lib/swift/libswiftDarwin.dylib,0x1b9c10c58,0x1b9c118a8,323747840
shared-library,/usr/lib/swift/libswiftDispatch.dylib,0x1ab0b62f0,0x1ab0c5db0,323747840
shared-library,/usr/lib/swift/libswiftIOKit.dylib,0x1bc902840,0x1bc902aac,323747840
shared-library,/usr/lib/swift/libswiftSystem.dylib,0x27c0f7ea8,0x27c10bb44,323747840
shared-library,/usr/lib/swift/libswiftXPC.dylib,0x1bc8ba208,0x1bc8f31ac,323747840
shared-library,/usr/lib/swift/libswift_Builtin_float.dylib,0x27c168370,0x27c168594,323747840
shared-library,/usr/lib/swift/libswift_Concurrency.dylib,0x27c16c060,0x27c1d744c,323747840
shared-library,/usr/lib/swift/libswift_StringProcessing.dylib,0x27c2cb2c8,0x27c348954,323747840
shared-library,/usr/lib/swift/libswift_errno.dylib,0x27c35b950,0x27c35c21c,323747840
shared-library,/usr/lib/swift/libswift_math.dylib,0x27c35d720,0x27c35f18c,323747840
shared-library,/usr/lib/swift/libswift_signal.dylib,0x27c3604f8,0x27c360518,323747840
shared-library,/usr/lib/swift/libswift_stdio.dylib,0x27c3616c0,0x27c361c70,323747840
shared-library,/usr/lib/swift/libswift_time.dylib,0x27c362670,0x27c3626f4,323747840
shared-library,/usr/lib/swift/libswiftos.dylib,0x1add3c2c0,0x1add4fb10,323747840
shared-library,/usr/lib/swift/libswiftsys_time.dylib,0x27c3635e0,0x27c363668,323747840
shared-library,/usr/lib/swift/libswiftunistd.dylib,0x27c3647d0,0x27c364888,323747840
shared-library,/System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo,0x19ff518b8,0x19ff54884,323747840
shared-library,/System/Library/PrivateFrameworks/LoggingSupport.framework/Versions/A/LoggingSupport,0x1bc7930e8,0x1bc7f7898,323747840
shared-library,/System/Library/PrivateFrameworks/PowerLog.framework/Versions/A/PowerLog,0x1aa5770d0,0x1aa5953bc,323747840
shared-library,/System/Library/Frameworks/SwiftData.framework/Versions/A/SwiftData,0x1fa30f600,0x1fa41db18,323747840
shared-library,/System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers,0x198f4b0d0,0x198f57d1c,323747840
shared-library,/System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement,0x19d373fa0,0x19d38f2d4,323747840
shared-library,/usr/lib/libboringssl.dylib,0x1994021a0,0x1994a211c,323747840
shared-library,/usr/lib/libdns_services.dylib,0x19b480c28,0x19b48da4c,323747840
shared-library,/usr/lib/libquic.dylib,0x1bb941e80,0x1bba10d90,323747840
shared-library,/usr/lib/libusrtcp.dylib,0x1a505f940,0x1a50be0b4,323747840
shared-library,/System/Library/PrivateFrameworks/InternalSwiftProtobuf.framework/Versions/A/InternalSwiftProtobuf,0x1e0283320,0x1e0362648,323747840
shared-library,/usr/lib/swift/libswiftDistributed.dylib,0x27c059970,0x27c064f54,323747840
shared-library,/usr/lib/swift/libswiftObservation.dylib,0x27c083278,0x27c08c798,323747840
shared-library,/usr/lib/swift/libswiftSynchronization.dylib,0x27c0f1fb0,0x27c0f4ea8,323747840
shared-library,/usr/lib/libnetwork.dylib,0x1994d2390,0x1994d2390,323747840
shared-library,/System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics,0x1cd443318,0x1cd4851d4,323747840
shared-library,/System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce,0x1a1d4f790,0x1a1d6fcdc,323747840
shared-library,/System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication,0x1ab84bb38,0x1ab93bee4,323747840
shared-library,/System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication,0x1dbf4c480,0x1dc003ee0,323747840
shared-library,/System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols,0x1ab828540,0x1ab844370,323747840
shared-library,/usr/lib/libAppleArchive.dylib,0x27ad93998,0x27ae16290,323747840
shared-library,/usr/lib/libbz2.1.0.dylib,0x1a165c688,0x1a1667494,323747840
shared-library,/usr/lib/liblzma.5.dylib,0x1a314c5f0,0x1a3163ab8,323747840
shared-library,/System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer,0x1a0c4e9c8,0x1a0c5c0cc,323747840
shared-library,/System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface,0x19ed0ff90,0x19ed21920,323747840
shared-library,/System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging,0x1bc81bae8,0x1bc824c48,323747840
shared-library,/System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport,0x1a333b028,0x1a3348434,323747840
shared-library,/System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon,0x1949ee060,0x194acc38c,323747840
shared-library,/System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation,0x1a0e8b0c8,0x1a0ece67c,323747840
shared-library,/usr/lib/libgermantok.dylib,0x1a0fec730,0x1a0fee17c,323747840
shared-library,/System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData,0x1a0075bd8,0x1a0079d90,323747840
shared-library,/System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard,0x19b2bf608,0x19b36411c,323747840
shared-library,/System/Library/PrivateFrameworks/BoardServices.framework/Versions/A/BoardServices,0x1ab41b1a8,0x1ab46c8f8,323747840
shared-library,/System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices,0x1a0e7be58,0x1a0e83f20,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO,0x19f75a838,0x19fa488b0,323747840
shared-library,/System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight,0x1999716a0,0x199dd3688,323747840
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib,0x19f12aa38,0x19f33b6d4,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate,0x1a9868418,0x1a9868418,323747840
shared-library,/System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC,0x19994ce80,0x199967c98,323747840
shared-library,/System/Library/PrivateFrameworks/IOSurfaceAccelerator.framework/Versions/A/IOSurfaceAccelerator,0x1b0a62968,0x1b0a653ec,323747840
shared-library,/System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient,0x1a3c256c0,0x1a3c2694c,323747840
shared-library,/System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay,0x195f39500,0x19601fba4,323747840
shared-library,/System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia,0x19efce588,0x19f102d20,323747840
shared-library,/System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator,0x19ed28f38,0x19ed30310,323747840
shared-library,/System/Library/Frameworks/Metal.framework/Versions/A/Metal,0x19ed33578,0x19eed8da8,323747840
shared-library,/System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo,0x19d2d3110,0x19d31b1d0,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders,0x1a1db5e38,0x1a1db61f8,323747840
shared-library,/System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport,0x1a3c27ef0,0x1a3c44dac,323747840
shared-library,/System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore,0x19ca7ca68,0x19cdc1c58,323747840
shared-library,/System/Library/PrivateFrameworks/ProDisplayLibrary.framework/Versions/A/ProDisplayLibrary,0x260c3b968,0x260cade30,323747840
shared-library,/System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox,0x1a3c6e7d0,0x1a40b9bb0,323747840
shared-library,/usr/lib/swift/libswiftMetal.dylib,0x1c946d2f0,0x1c946f598,323747840
shared-library,/usr/lib/swift/libswiftOSLog.dylib,0x1d840e0b8,0x1d840e834,323747840
shared-library,/usr/lib/swift/libswiftQuartzCore.dylib,0x1ce80c078,0x1ce80c998,323747840
shared-library,/usr/lib/swift/libswiftUniformTypeIdentifiers.dylib,0x1d2e67388,0x1d2e720e0,323747840
shared-library,/usr/lib/swift/libswiftsimd.dylib,0x1c015bc98,0x1c0170840,323747840
shared-library,/System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag,0x1a0e5f180,0x1a0e70dc8,323747840
shared-library,/System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary,0x19ff4faf8,0x19ff4ff38,323747840
shared-library,/System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS,0x1a316da60,0x1a31c4c58,323747840
shared-library,/usr/lib/libutil.dylib,0x1a31ee7a8,0x1a31f0e10,323747840
shared-library,/System/Library/PrivateFrameworks/SwiftASN1Internal.framework/Versions/A/SwiftASN1Internal,0x26bb5fcd8,0x26bb83384,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage,0x19c66bc80,0x19c9d25ac,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib,0x1a9597870,0x1a9597870,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib,0x1a3226770,0x1a329a864,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib,0x1943599e0,0x1949d81c4,323747840
shared-library,/System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync,0x19a5c7b50,0x19a640258,323747840
shared-library,/System/Library/Frameworks/CoreText.framework/Versions/A/CoreText,0x196413198,0x196585674,323747840
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/Versions/A/FontServices,0x247ca1680,0x247ca1688,323747840
shared-library,/System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG,0x1a3773dc0,0x1a37ac550,323747840
shared-library,/System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib,0x19ce50328,0x19ce8f278,323747840
shared-library,/usr/lib/libhvf.dylib,0x27b455f70,0x27b46a7c4,323747840
shared-library,/System/Library/PrivateFrameworks/ParsingInternal.framework/Versions/A/ParsingInternal,0x25cb40ea0,0x25cc49c48,323747840
shared-library,/usr/lib/swift/libswiftRegexBuilder.dylib,0x27c0a00b0,0x27c0a7bec,323747840
shared-library,/usr/lib/swift/libswift_RegexParser.dylib,0x27c227958,0x27c2b104c,323747840
shared-library,/System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG,0x1a3aee920,0x1a3b28138,323747840
shared-library,/usr/lib/libexpat.1.dylib,0x1a358f5f0,0x1a35a7784,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib,0x1a411a7c8,0x1a4140700,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib,0x1a4145898,0x1a41829b0,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib,0x1a422f668,0x1a4234218,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib,0x1a3b34850,0x1a3beca78,323747840
shared-library,/usr/lib/libate.dylib,0x1a32a0c88,0x1a32dcc50,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib,0x1a41d6670,0x1a41fdf30,323747840
shared-library,/System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib,0x1a41cd640,0x1a41cf5a8,323747840
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libllvm-flatbuffers.dylib,0x24c9713d8,0x24c9ad80c,323747840
shared-library,/System/Library/PrivateFrameworks/FramePacing.framework/Versions/A/FramePacing,0x247d6cd10,0x247d72f1c,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib,0x1f3dfc720,0x1f3e02188,323747840
shared-library,/System/Library/PrivateFrameworks/GPUCompiler.framework/Versions/32023/Libraries/libGPUCompilerUtils.dylib,0x2488e2168,0x2488e65b8,323747840
shared-library,/System/Library/PrivateFrameworks/FontServices.framework/libXTFontStaticRegistryData.dylib,0x247ca2918,0x247ca2918,323747840
shared-library,/System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage,0x19fad98c8,0x19fd8dbd4,323747840
shared-library,/System/Library/PrivateFrameworks/ASEProcessing.framework/Versions/A/ASEProcessing,0x1aee7ae78,0x1aee8d10c,323747840
shared-library,/System/Library/PrivateFrameworks/PhotosensitivityProcessing.framework/Versions/A/PhotosensitivityProcessing,0x25fda8a40,0x25fdb5d60,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL,0x1f3e0ac70,0x1f3e17fd8,323747840
shared-library,/System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer,0x1a3767c90,0x1a377003c,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib,0x1f3e5a760,0x1f3e8ee98,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib,0x1f3e1ea58,0x1f3e24ea0,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib,0x1f3fe6430,0x1f3fefb08,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib,0x1f3e277c0,0x1f3e5936c,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib,0x1f3e1b870,0x1f3e1d42c,323747840
shared-library,/System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib,0x1f3e04798,0x1f3e08554,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore,0x19fe94250,0x19ff21698,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage,0x1a15bc170,0x1a1602400,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork,0x1a10051a8,0x1a11daa24,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix,0x1a143c050,0x1a145f300,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector,0x1a12510c0,0x1a1293e1c,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray,0x1a146e198,0x1a1550aa4,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSFunctions.framework/Versions/A/MPSFunctions,0x1f76fcf70,0x1f770af14,323747840
shared-library,/System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSBenchmarkLoop.framework/Versions/A/MPSBenchmarkLoop,0x1f76df3c8,0x1f76e91f8,323747840
shared-library,/System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools,0x1941d5028,0x1942cb9e8,323747840
shared-library,/System/Library/PrivateFrameworks/IOAccelMemoryInfo.framework/Versions/A/IOAccelMemoryInfo,0x1c1504cc0,0x1c150a6b8,323747840
shared-library,/System/Library/PrivateFrameworks/kperf.framework/Versions/A/kperf,0x1cec007e8,0x1cec04f88,323747840
shared-library,/System/Library/PrivateFrameworks/GPURawCounter.framework/Versions/A/GPURawCounter,0x1bc882d08,0x1bc883dd0,323747840
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos,0x1a5da3a40,0x1a5db150c,323747840
shared-library,/usr/lib/libresolv.9.dylib,0x1a5a09728,0x1a5a21edc,323747840
shared-library,/usr/lib/libiconv.2.dylib,0x1a1bcb7a8,0x1a1bd197c,323747840
shared-library,/System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal,0x1a37c5e50,0x1a387291c,323747840
shared-library,/System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib,0x1adc8e3f8,0x1adc8e3f8,323747840
shared-library,/usr/lib/libheimdal-asn1.dylib,0x1a35aa688,0x1a35b36e0,323747840
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory,0x19d135f00,0x19d13cbe8,323747840
shared-library,/System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth,0x1a5e067c8,0x1a5e15d30,323747840
shared-library,/System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory,0x19d143ac0,0x19d159464,323747840
shared-library,/usr/lib/libcharset.1.dylib,0x1a1b265e8,0x1a1b269ec,323747840
shared-library,/System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox,0x1a573c4b0,0x1a58a098c,323747840
shared-library,/System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio,0x1966316d0,0x196c02a64,323747840
shared-library,/usr/lib/libAudioStatistics.dylib,0x1a5945500,0x1a5954404,323747840
shared-library,/System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk,0x19efa5b60,0x19efc331c,323747840
shared-library,/System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore,0x19605a7a0,0x196373590,323747840
shared-library,/System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI,0x1aff850b8,0x1b0020204,323747840
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession,0x1a58e7530,0x1a59264a4,323747840
shared-library,/System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience,0x1a3695150,0x1a3715f64,323747840
shared-library,/System/Library/PrivateFrameworks/FeatureFlags.framework/Versions/A/FeatureFlags,0x1e75b8718,0x1e75b8b10,323747840
shared-library,/System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport,0x1a37b4cd0,0x1a37ba92c,323747840
shared-library,/System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata,0x1a5d87e08,0x1a5d8feb4,323747840
shared-library,/System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy,0x1bba3b130,0x1bba53500,323747840
shared-library,/usr/lib/libSMC.dylib,0x1a5c28838,0x1a5c2e168,323747840
shared-library,/usr/lib/libAudioToolboxUtility.dylib,0x1a40e4e00,0x1a41121ec,323747840
shared-library,/usr/lib/libperfcheck.dylib,0x1a5d95b70,0x1a5da05e4,323747840
shared-library,/System/Library/PrivateFrameworks/AudioAnalytics.framework/Versions/A/AudioAnalytics,0x23e350778,0x23e376694,323747840
shared-library,/System/Library/Frameworks/OSLog.framework/Versions/A/OSLog,0x1e0049f30,0x1e005566c,323747840
shared-library,/usr/lib/libmis.dylib,0x1bc84e7a8,0x1bc8755c0,323747840
shared-library,/System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib,0x1a56f4f90,0x1a5730bac,323747840
shared-library,/System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore,0x1a4235ee0,0x1a4237c68,323747840
shared-library,/usr/lib/libspindump.dylib,0x1a37bead8,0x1a37c2ec8,323747840
shared-library,/System/Library/Frameworks/ExtensionFoundation.framework/Versions/A/ExtensionFoundation,0x1f5a2cf60,0x1f5ac5c70,323747840
shared-library,/System/Library/PrivateFrameworks/CoreTime.framework/Versions/A/CoreTime,0x1ab958f10,0x1ab95f72c,323747840
shared-library,/System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit,0x1a348f098,0x1a34b9e0c,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib,0x1a0b29b00,0x1a0c13ed4,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib,0x1a1e93938,0x1a30de7f4,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib,0x1a0fefc98,0x1a1001590,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib,0x1a1d8e8c8,0x1a1db3f78,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib,0x1a1e8e570,0x1a1e91390,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib,0x1a007cb00,0x1a0a9f30c,323747840
shared-library,/System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib,0x194afab60,0x194beda24,323747840
shared-library,/System/Library/PrivateFrameworks/MIL.framework/Versions/A/MIL,0x255c8c588,0x256226c74,323747840
shared-library,/System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler,0x1a41c8948,0x1a41cbe08,323747840
shared-library,/System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment,0x1a41a8ae0,0x1a41c3708,323747840
shared-library,/System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay,0x1a41d0798,0x1a41d42b0,323747840
shared-library,/System/Library/PrivateFrameworks/HIDDisplay.framework/Versions/A/HIDDisplay,0x1e0450f08,0x1e045887c,323747840
shared-library,/System/Library/PrivateFrameworks/HID.framework/Versions/A/HID,0x1b5448e48,0x1b5450430,323747840
shared-library,/System/Library/PrivateFrameworks/VideoToolboxParavirtualizationSupport.framework/Versions/A/VideoToolboxParavirtualizationSupport,0x271e657c8,0x271e65ea4,323747840
shared-library,/System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA,0x1a3546a88,0x1a358856c,323747840
shared-library,/System/Library/Frameworks/CoreData.framework/Versions/A/CoreData,0x19abf89e0,0x19af5c9d0,323747840
shared-library,/System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit,0x1aa6679b0,0x1aa69459c,323747840
shared-library,/System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording,0x1aa5b31c8,0x1aa63e708,323747840
shared-library,/System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth,0x1a5d688a8,0x1a5d73e98,323747840
shared-library,/System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport,0x19d333a20,0x19d335484,323747840
shared-library,/System/Library/PrivateFrameworks/AppleMobileFileIntegrity.framework/Versions/A/AppleMobileFileIntegrity,0x23df5ffe8,0x23df70d6c,323747840
shared-library,/usr/lib/libTLE.dylib,0x27b0d3c60,0x27b0d9f20,323747840
shared-library,/System/Library/PrivateFrameworks/ConfigProfileHelper.framework/Versions/A/ConfigProfileHelper,0x1f0e58a18,0x1f0e59da8,323747840
shared-library,/usr/lib/libmecab.dylib,0x1a0f8c918,0x1a0fde768,323747840
shared-library,/usr/lib/libCRFSuite.dylib,0x194c8a8f0,0x194cb95f0,323747840
shared-library,/System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP,0x19ff592e0,0x1a004e894,323747840
shared-library,/usr/lib/libThaiTokenizer.dylib,0x1a1d466e8,0x1a1d4b518,323747840
shared-library,/usr/lib/libCheckFix.dylib,0x1a0f565a8,0x1a0f5f03c,323747840
shared-library,/System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities,0x19c577270,0x19c5c756c,323747840
shared-library,/System/Library/PrivateFrameworks/InstalledContentLibrary.framework/Versions/A/InstalledContentLibrary,0x2514c12d0,0x2515708a4,323747840
shared-library,/System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore,0x1977770a8,0x1977a80f4,323747840
shared-library,/usr/lib/libapp_launch_measurement.dylib,0x19d19a840,0x19d19c7bc,323747840
shared-library,/System/Library/PrivateFrameworks/MobileSystemServices.framework/Versions/A/MobileSystemServices,0x1ced0acf8,0x1ced0d118,323747840
shared-library,/usr/lib/libxslt.1.dylib,0x1a31f2848,0x1a3215198,323747840
shared-library,/System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement,0x1a0f19f70,0x1a0f39c0c,323747840
shared-library,/usr/lib/libcurl.4.dylib,0x1ad3eeaf8,0x1ad45a9a4,323747840
shared-library,/usr/lib/libcrypto.46.dylib,0x27b3078e0,0x27b3d8df4,323747840
shared-library,/usr/lib/libssl.48.dylib,0x27be31790,0x27be61db0,323747840
shared-library,/System/Library/Frameworks/LDAP.framework/Versions/A/LDAP,0x1ad0c6af0,0x1ad0f78d0,323747840
shared-library,/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent,0x1ad102638,0x1ad1033f4,323747840
shared-library,/usr/lib/libsasl2.2.dylib,0x1a5a267d0,0x1a5a35a8c,323747840
shared-library,/opt/homebrew/Cellar/brotli/1.1.0/lib/libbrotlicommon.1.1.0.dylib,0x106424f58,0x1064254b0,4399972352
shared-library,/opt/homebrew/Cellar/icu4c@77/77.1/lib/libicudata.77.1.dylib,0x10958d0b0,0x10958d0b0,4451778560
shared-library-end
tick,0x193541f7c,1291,0,0x0,6
profiler,begin,1000
new,CodeRange,0x148000000,0
new,MemoryChunk,0x292e57c40000,262144
new,MemoryChunk,0x2104a3080000,262144
new,MemoryChunk,0x25e8b4900000,262144
new,MemoryChunk,0x27238e140000,262144
new,MemoryChunk,0x3b49280c0000,262144
new,MemoryChunk,0x3b92ef7c0000,262144
heap-capacity,1048512
heap-available,4497342336
new,MemoryChunk,0x70dc6c40000,262144
new,MemoryChunk,0x2347af040000,262144
new,MemoryChunk,0x2bf7581c0000,278528
new,MemoryChunk,0x3699125c0000,262144
tick,0x101732084,2541,0,0x0,6
new,MemoryChunk,0xb1c4a400000,262144
new,MemoryChunk,0x621fa640000,262144
new,MemoryChunk,0x3231531c0000,262144
new,MemoryChunk,0x1f2675700000,262144
code-creation,Builtin,2,3458,0x101b20000,792,DeoptimizationEntry_Eager
code-creation,Builtin,2,3458,0x101b20320,792,DeoptimizationEntry_Lazy
code-creation,Builtin,2,3500,0x101b20640,2036,RecordWriteSaveFP
code-creation,Builtin,2,3500,0x101b20e40,1364,RecordWriteIgnoreFP
code-creation,Builtin,2,3500,0x101b213a0,268,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,3500,0x101b214c0,172,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,3500,0x101b21580,8,DummyBuiltin
code-creation,Builtin,2,3500,0x101b215a0,44,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,3500,0x101b215e0,44,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,3500,0x101b21620,44,AdaptorWithBuiltinExitFrame0
code-creation,Builtin,2,3500,0x101b21660,64,AdaptorWithBuiltinExitFrame1
code-creation,Builtin,2,3500,0x101b216c0,64,AdaptorWithBuiltinExitFrame2
code-creation,Builtin,2,3500,0x101b21720,64,AdaptorWithBuiltinExitFrame3
code-creation,Builtin,2,3500,0x101b21780,64,AdaptorWithBuiltinExitFrame4
code-creation,Builtin,2,3500,0x101b217e0,64,AdaptorWithBuiltinExitFrame5
code-creation,Builtin,2,3500,0x101b21840,360,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,3500,0x101b219c0,436,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,3500,0x101b21b80,476,CallFunction_ReceiverIsAny
code-creation,Builtin,2,3500,0x101b21d60,232,CallBoundFunction
code-creation,Builtin,2,3500,0x101b21e60,968,CallWrappedFunction
code-creation,Builtin,2,3500,0x101b22240,192,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,3500,0x101b22320,192,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,3500,0x101b22400,192,Call_ReceiverIsAny
code-creation,Builtin,2,3500,0x101b224e0,800,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,3541,0x101b22820,796,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,3541,0x101b22b40,944,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,3541,0x101b22f00,940,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,3541,0x101b232c0,944,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,3541,0x101b23680,940,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,3541,0x101b23a40,776,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,3541,0x101b23d60,776,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,3541,0x101b24080,776,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,3541,0x101b243a0,760,CallProxy
code-creation,Builtin,2,3541,0x101b246a0,172,CallVarargs
code-creation,Builtin,2,3541,0x101b24760,1152,CallWithSpread
code-creation,Builtin,2,3541,0x101b24c00,1868,CallWithSpread_Baseline
code-creation,Builtin,2,3541,0x101b25360,1944,CallWithSpread_WithFeedback
code-creation,Builtin,2,3541,0x101b25b00,1236,CallWithArrayLike
code-creation,Builtin,2,3541,0x101b25fe0,1996,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,3541,0x101b267c0,196,CallForwardVarargs
code-creation,Builtin,2,3541,0x101b268a0,196,CallFunctionForwardVarargs
code-creation,Builtin,2,3541,0x101b26980,388,CallFunctionTemplate_Generic
code-creation,Builtin,2,3541,0x101b26b20,192,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,3541,0x101b26c00,280,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,3541,0x101b26d20,372,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,3541,0x101b26ea0,24,ConstructFunction
code-creation,Builtin,2,3583,0x101b26ec0,236,ConstructBoundFunction
code-creation,Builtin,2,3583,0x101b26fc0,44,ConstructedNonConstructable
code-creation,Builtin,2,3583,0x101b27000,88,Construct
code-creation,Builtin,2,3583,0x101b27060,172,ConstructVarargs
code-creation,Builtin,2,3583,0x101b27120,1180,ConstructWithSpread
code-creation,Builtin,2,3583,0x101b275c0,1904,ConstructWithSpread_Baseline
code-creation,Builtin,2,3583,0x101b27d40,1900,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,3583,0x101b284c0,1372,ConstructWithArrayLike
code-creation,Builtin,2,3583,0x101b28a20,248,ConstructForwardVarargs
code-creation,Builtin,2,3583,0x101b28b20,120,ConstructForwardAllArgs
code-creation,Builtin,2,3583,0x101b28ba0,704,ConstructForwardAllArgs_Baseline
code-creation,Builtin,2,3583,0x101b28e80,692,ConstructForwardAllArgs_WithFeedback
code-creation,Builtin,2,3583,0x101b29140,248,ConstructFunctionForwardVarargs
code-creation,Builtin,2,3583,0x101b29240,716,Construct_Baseline
code-creation,Builtin,2,3583,0x101b29520,728,Construct_WithFeedback
code-creation,Builtin,2,3583,0x101b29800,556,JSConstructStubGeneric
code-creation,Builtin,2,3583,0x101b29a40,464,JSBuiltinsConstructStub
code-creation,Builtin,2,3583,0x101b29c20,912,FastNewObject
code-creation,Builtin,2,3583,0x101b29fc0,428,FastNewClosure
code-creation,Builtin,2,3583,0x101b2a180,804,ConstructProxy
code-creation,Builtin,2,3583,0x101b2a4c0,284,JSEntry
code-creation,Builtin,2,3583,0x101b2a5e0,284,JSConstructEntry
code-creation,Builtin,2,3625,0x101b2a700,284,JSRunMicrotasksEntry
code-creation,Builtin,2,3625,0x101b2a820,184,JSEntryTrampoline
code-creation,Builtin,2,3625,0x101b2a8e0,184,JSConstructEntryTrampoline
code-creation,Builtin,2,3625,0x101b2a9a0,364,ResumeGeneratorTrampoline
code-creation,Builtin,2,3625,0x101b2ab20,1296,StringFromCodePointAt
code-creation,Builtin,2,3625,0x101b2b040,916,StringEqual
code-creation,Builtin,2,3625,0x101b2b3e0,404,StringGreaterThan
code-creation,Builtin,2,3625,0x101b2b580,404,StringGreaterThanOrEqual
code-creation,Builtin,2,3625,0x101b2b720,404,StringLessThan
code-creation,Builtin,2,3625,0x101b2b8c0,404,StringLessThanOrEqual
code-creation,Builtin,2,3625,0x101b2ba60,404,StringCompare
code-creation,Builtin,2,3625,0x101b2bc00,3616,StringSubstring
code-creation,Builtin,2,3625,0x101b2ca40,144,OrderedHashTableHealIndex
code-creation,Builtin,2,3625,0x101b2cae0,636,InterpreterEntryTrampoline
code-creation,Builtin,2,3625,0x101b2cd60,652,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,3625,0x101b2d000,120,InterpreterForwardAllArgsThenConstruct
code-creation,Builtin,2,3625,0x101b2d080,88,InterpreterPushArgsThenCall
code-creation,Builtin,2,3625,0x101b2d0e0,96,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,3666,0x101b2d160,96,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,3666,0x101b2d1e0,96,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,3666,0x101b2d260,848,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,3666,0x101b2d5c0,96,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,3666,0x101b2d640,104,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,3666,0x101b2d6c0,88,InterpreterEnterAtBytecode
code-creation,Builtin,2,3666,0x101b2d720,212,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,3666,0x101b2d800,188,InterpreterOnStackReplacement
code-creation,Builtin,2,3666,0x101b2d8c0,136,BaselineOutOfLinePrologue
code-creation,Builtin,2,3666,0x101b2d960,24,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,3666,0x101b2d980,184,BaselineOnStackReplacement
code-creation,Builtin,2,3666,0x101b2da40,96,BaselineLeaveFrame
code-creation,Builtin,2,3666,0x101b2dac0,204,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,3666,0x101b2dba0,44,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,3666,0x101b2dbe0,52,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,3666,0x101b2dc20,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,3666,0x101b2dc40,932,CompileLazy
code-creation,Builtin,2,3666,0x101b2e000,316,InstantiateAsmJs
code-creation,Builtin,2,3666,0x101b2e140,44,NotifyDeoptimized
code-creation,Builtin,2,3666,0x101b2e180,152,StartMaglevOptimizeJob
code-creation,Builtin,2,3666,0x101b2e220,152,OptimizeMaglevEager
code-creation,Builtin,2,3666,0x101b2e2c0,152,StartTurbofanOptimizeJob
code-creation,Builtin,2,3708,0x101b2e360,152,OptimizeTurbofanEager
code-creation,Builtin,2,3708,0x101b2e400,152,FunctionLogNextExecution
code-creation,Builtin,2,3708,0x101b2e4a0,152,MarkReoptimizeLazyDeoptimized
code-creation,Builtin,2,3708,0x101b2e540,152,MarkLazyDeoptimized
code-creation,Builtin,2,3708,0x101b2e5e0,88,ContinueToCodeStubBuiltin
code-creation,Builtin,2,3708,0x101b2e640,92,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,3708,0x101b2e6a0,92,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,3708,0x101b2e700,108,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,3708,0x101b2e780,312,CallApiCallbackGeneric
code-creation,Builtin,2,3708,0x101b2e8c0,280,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,3708,0x101b2e9e0,308,CallApiCallbackOptimized
code-creation,Builtin,2,3708,0x101b2eb20,280,CallApiGetter
code-creation,Builtin,2,3708,0x101b2ec40,40,HandleApiCallOrConstruct
code-creation,Builtin,2,3708,0x101b2ec80,8,HandleApiConstruct
code-creation,Builtin,2,3708,0x101b2eca0,8,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,3708,0x101b2ecc0,8,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,3708,0x101b2ece0,56,AllocateInYoungGeneration
code-creation,Builtin,2,3708,0x101b2ed20,56,AllocateInOldGeneration
code-creation,Builtin,2,3708,0x101b2ed60,56,WasmAllocateInYoungGeneration
code-creation,Builtin,2,3708,0x101b2eda0,56,WasmAllocateInOldGeneration
code-creation,Builtin,2,3708,0x101b2ede0,140,NewHeapNumber
code-creation,Builtin,2,3750,0x101b2ee80,668,CopyFastSmiOrObjectElements
code-creation,Builtin,2,3750,0x101b2f120,620,GrowFastDoubleElements
code-creation,Builtin,2,3750,0x101b2f3a0,556,GrowFastSmiOrObjectElements
code-creation,Builtin,2,3750,0x101b2f5e0,492,DebugBreakTrampoline
code-creation,Builtin,2,3750,0x101b2f7e0,148,RestartFrameTrampoline
code-creation,Builtin,2,3750,0x101b2f880,216,ToNumber
code-creation,Builtin,2,3750,0x101b2f960,128,ToBigInt
code-creation,Builtin,2,3750,0x101b2fa00,312,ToNumber_Baseline
code-creation,Builtin,2,3750,0x101b2fb40,380,ToNumeric_Baseline
code-creation,Builtin,2,3750,0x101b2fcc0,184,PlainPrimitiveToNumber
code-creation,Builtin,2,3750,0x101b2fd80,256,ToNumberConvertBigInt
code-creation,Builtin,2,3750,0x101b2fea0,100,ToBigIntConvertNumber
code-creation,Builtin,2,3750,0x101b2ff20,212,Typeof
code-creation,Builtin,2,3750,0x101b30000,540,Typeof_Baseline
code-creation,Builtin,2,3750,0x101b30220,144,BigIntToI64
code-creation,Builtin,2,3750,0x101b302c0,12,BigIntToI32Pair
code-creation,Builtin,2,3750,0x101b302e0,268,I64ToBigInt
code-creation,Builtin,2,3750,0x101b30400,12,I32PairToBigInt
code-creation,Builtin,2,3750,0x101b30420,204,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,3750,0x101b30500,176,MathCeilContinuation
code-creation,Builtin,2,3750,0x101b305c0,176,MathFloorContinuation
code-creation,Builtin,2,3750,0x101b30680,200,MathRoundContinuation
code-creation,Builtin,2,3750,0x101b30760,4332,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,3791,0x101b31860,23600,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,3791,0x101b374a0,13756,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,3791,0x101b3aa60,1300,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,3791,0x101b3af80,84,LoadIC_FunctionPrototype
code-creation,Builtin,2,3791,0x101b3afe0,16,LoadIC_StringLength
code-creation,Builtin,2,3791,0x101b3b000,20,LoadIC_StringWrapperLength
code-creation,Builtin,2,3791,0x101b3b020,4212,LoadIC_NoFeedback
code-creation,Builtin,2,3791,0x101b3c0a0,44,StoreGlobalIC_Slow
code-creation,Builtin,2,3791,0x101b3c0e0,8892,StoreIC_NoFeedback
code-creation,Builtin,2,3791,0x101b3e3a0,4348,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,3791,0x101b3f4a0,224,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,3791,0x101b3f5a0,68,LoadIndexedInterceptorIC
code-creation,Builtin,2,3791,0x101b3f600,352,KeyedStoreIC_SloppyArguments_InBounds
code-creation,Builtin,2,3791,0x101b3f780,352,KeyedStoreIC_SloppyArguments_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,3791,0x101b3f900,352,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,3791,0x101b3fa80,352,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,3833,0x101b3fc00,16316,StoreFastElementIC_InBounds
code-creation,Builtin,2,3833,0x101b43bc0,12592,StoreFastElementIC_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,3833,0x101b46d00,15296,StoreFastElementIC_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,3833,0x101b4a8e0,7240,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,3833,0x101b4c540,9912,ElementsTransitionAndStore_InBounds
code-creation,Builtin,2,3833,0x101b4ec00,23200,ElementsTransitionAndStore_NoTransitionGrowAndHandleCOW
code-creation,Builtin,2,3833,0x101b546c0,9912,ElementsTransitionAndStore_NoTransitionIgnoreTypedArrayOOB
code-creation,Builtin,2,3833,0x101b56d80,13336,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,3833,0x101b5a1a0,1136,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,3833,0x101b5a620,216,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,3875,0x101b5a700,68,HasIndexedInterceptorIC
code-creation,Builtin,2,3875,0x101b5a760,152,EnqueueMicrotask
code-creation,Builtin,2,3875,0x101b5a800,8,RunMicrotasksTrampoline
code-creation,Builtin,2,3875,0x101b5a820,3336,RunMicrotasks
code-creation,Builtin,2,3875,0x101b5b540,4544,HasProperty
code-creation,Builtin,2,3875,0x101b5c720,1276,DeleteProperty
code-creation,Builtin,2,3875,0x101b5cc20,2644,CopyDataProperties
code-creation,Builtin,2,3875,0x101b5d680,10796,SetDataProperties
code-creation,Builtin,2,3875,0x101b600c0,3676,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,3875,0x101b60f20,76,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,3875,0x101b60f80,32,Abort
code-creation,Builtin,2,3875,0x101b60fc0,32,AbortCSADcheck
code-creation,Builtin,2,3875,0x101b61000,8,EmptyFunction
code-creation,Builtin,2,3875,0x101b61020,8,EmptyFunction1
code-creation,Builtin,2,3875,0x101b61040,8,Illegal
code-creation,Builtin,2,3916,0x101b61060,8,IllegalInvocationThrower
code-creation,Builtin,2,3916,0x101b61080,8,StrictPoisonPillThrower
code-creation,Builtin,2,3916,0x101b610a0,8,UnsupportedThrower
code-creation,Builtin,2,3916,0x101b610c0,84,ReturnReceiver
code-creation,Builtin,2,3916,0x101b61120,8,AbstractModuleSourceToStringTag
code-creation,Builtin,2,3916,0x101b61140,24,ArrayConstructor
code-creation,Builtin,2,3916,0x101b61160,472,ArrayConstructorImpl
code-creation,Builtin,2,3916,0x101b61340,236,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,3916,0x101b61440,236,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,3916,0x101b61540,196,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,3916,0x101b61620,196,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,3916,0x101b61700,196,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,3916,0x101b617e0,196,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,3916,0x101b618c0,200,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b619a0,200,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b61a80,872,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,3958,0x101b61e00,856,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,3958,0x101b62160,756,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b62460,740,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b62760,756,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b62a60,740,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b62d60,852,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b630c0,836,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,3958,0x101b63420,56,ArrayNArgumentsConstructor
code-creation,Builtin,2,3958,0x101b63460,8,ArrayConcat
code-creation,Builtin,2,4000,0x101b63480,8,ArrayPrototypeFill
code-creation,Builtin,2,4000,0x101b634a0,1640,ArrayIncludesSmi
code-creation,Builtin,2,4000,0x101b63b20,1552,ArrayIncludesSmiOrObject
code-creation,Builtin,2,4000,0x101b64140,284,ArrayIncludesPackedDoubles
code-creation,Builtin,2,4000,0x101b64260,384,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,4000,0x101b64400,768,ArrayIncludes
code-creation,Builtin,2,4000,0x101b64720,1504,ArrayIndexOfSmi
code-creation,Builtin,2,4000,0x101b64d20,1424,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,4000,0x101b652c0,224,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,4000,0x101b653c0,224,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,4000,0x101b654c0,768,ArrayIndexOf
code-creation,Builtin,2,4000,0x101b657e0,8,ArrayPop
code-creation,Builtin,2,4000,0x101b65800,624,ArrayPrototypePop
code-creation,Builtin,2,4000,0x101b65a80,8,ArrayPush
code-creation,Builtin,2,4000,0x101b65aa0,2624,ArrayPrototypePush
code-creation,Builtin,2,4041,0x101b66500,8,ArrayShift
code-creation,Builtin,2,4041,0x101b66520,8,ArrayUnshift
code-creation,Builtin,2,4041,0x101b66540,1300,CloneFastJSArray
code-creation,Builtin,2,4041,0x101b66a60,2848,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,4041,0x101b675a0,1484,ExtractFastJSArray
code-creation,Builtin,2,4041,0x101b67b80,176,CreateArrayFromSlowBoilerplate
code-creation,Builtin,2,4041,0x101b67c40,176,CreateObjectFromSlowBoilerplate
code-creation,Builtin,2,4041,0x101b67d00,2292,CreateArrayFromSlowBoilerplateHelper
code-creation,Builtin,2,4041,0x101b68600,3264,CreateObjectFromSlowBoilerplateHelper
code-creation,Builtin,2,4041,0x101b692e0,264,ArrayPrototypeEntries
code-creation,Builtin,2,4041,0x101b69400,260,ArrayPrototypeKeys
code-creation,Builtin,2,4041,0x101b69520,264,ArrayPrototypeValues
code-creation,Builtin,2,4041,0x101b69640,4228,ArrayIteratorPrototypeNext
code-creation,Builtin,2,4041,0x101b6a6e0,8,ArrayBufferConstructor
code-creation,Builtin,2,4041,0x101b6a700,8,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,4083,0x101b6a720,8,ArrayBufferPrototypeSlice
code-creation,Builtin,2,4083,0x101b6a740,8,ArrayBufferPrototypeResize
code-creation,Builtin,2,4083,0x101b6a760,8,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,4083,0x101b6a780,8,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,4083,0x101b6a7a0,1340,AsyncFunctionEnter
code-creation,Builtin,2,4083,0x101b6ace0,52,AsyncFunctionReject
code-creation,Builtin,2,4083,0x101b6ad20,48,AsyncFunctionResolve
code-creation,Builtin,2,4083,0x101b6ad60,16,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,4083,0x101b6ad80,1988,AsyncFunctionAwait
code-creation,Builtin,2,4083,0x101b6b560,140,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,4083,0x101b6b600,144,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,4083,0x101b6b6a0,8,BigIntConstructor
code-creation,Builtin,2,4083,0x101b6b6c0,8,BigIntAsUintN
code-creation,Builtin,2,4083,0x101b6b6e0,8,BigIntAsIntN
code-creation,Builtin,2,4125,0x101b6b700,8,BigIntPrototypeToLocaleString
code-creation,Builtin,2,4125,0x101b6b720,8,BigIntPrototypeToString
code-creation,Builtin,2,4125,0x101b6b740,8,BigIntPrototypeValueOf
code-creation,Builtin,2,4125,0x101b6b760,8,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,4125,0x101b6b780,8,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,4125,0x101b6b7a0,8,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,4125,0x101b6b7c0,8,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,4125,0x101b6b7e0,8,CallSitePrototypeGetFileName
code-creation,Builtin,2,4125,0x101b6b800,8,CallSitePrototypeGetFunction
code-creation,Builtin,2,4125,0x101b6b820,8,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,4125,0x101b6b840,8,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,4125,0x101b6b860,8,CallSitePrototypeGetMethodName
code-creation,Builtin,2,4125,0x101b6b880,8,CallSitePrototypeGetPosition
code-creation,Builtin,2,4125,0x101b6b8a0,8,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,4166,0x101b6b8c0,8,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,4166,0x101b6b8e0,8,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,4166,0x101b6b900,8,CallSitePrototypeGetThis
code-creation,Builtin,2,4166,0x101b6b920,8,CallSitePrototypeGetTypeName
code-creation,Builtin,2,4166,0x101b6b940,8,CallSitePrototypeIsAsync
code-creation,Builtin,2,4166,0x101b6b960,8,CallSitePrototypeIsConstructor
code-creation,Builtin,2,4166,0x101b6b980,8,CallSitePrototypeIsEval
code-creation,Builtin,2,4166,0x101b6b9a0,8,CallSitePrototypeIsNative
code-creation,Builtin,2,4166,0x101b6b9c0,8,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,4166,0x101b6b9e0,8,CallSitePrototypeIsToplevel
code-creation,Builtin,2,4166,0x101b6ba00,8,CallSitePrototypeToString
code-creation,Builtin,2,4166,0x101b6ba20,8,ConsoleDebug
code-creation,Builtin,2,4166,0x101b6ba40,8,ConsoleError
code-creation,Builtin,2,4166,0x101b6ba60,8,ConsoleInfo
code-creation,Builtin,2,4208,0x101b6ba80,8,ConsoleLog
code-creation,Builtin,2,4208,0x101b6baa0,8,ConsoleWarn
code-creation,Builtin,2,4208,0x101b6bac0,8,ConsoleDir
code-creation,Builtin,2,4208,0x101b6bae0,8,ConsoleDirXml
code-creation,Builtin,2,4208,0x101b6bb00,8,ConsoleTable
code-creation,Builtin,2,4208,0x101b6bb20,8,ConsoleTrace
code-creation,Builtin,2,4208,0x101b6bb40,8,ConsoleGroup
code-creation,Builtin,2,4208,0x101b6bb60,8,ConsoleGroupCollapsed
code-creation,Builtin,2,4208,0x101b6bb80,8,ConsoleGroupEnd
code-creation,Builtin,2,4208,0x101b6bba0,8,ConsoleClear
code-creation,Builtin,2,4208,0x101b6bbc0,8,ConsoleCount
code-creation,Builtin,2,4208,0x101b6bbe0,8,ConsoleCountReset
code-creation,Builtin,2,4208,0x101b6bc00,8,ConsoleAssert
code-creation,Builtin,2,4208,0x101b6bc20,8,ConsoleProfile
code-creation,Builtin,2,4208,0x101b6bc40,8,ConsoleProfileEnd
code-creation,Builtin,2,4208,0x101b6bc60,8,ConsoleTime
code-creation,Builtin,2,4208,0x101b6bc80,8,ConsoleTimeLog
code-creation,Builtin,2,4250,0x101b6bca0,8,ConsoleTimeEnd
code-creation,Builtin,2,4250,0x101b6bcc0,8,ConsoleTimeStamp
code-creation,Builtin,2,4250,0x101b6bce0,8,ConsoleContext
code-creation,Builtin,2,4250,0x101b6bd00,8,DataViewConstructor
code-creation,Builtin,2,4250,0x101b6bd20,8,DateConstructor
code-creation,Builtin,2,4250,0x101b6bd40,200,DatePrototypeGetDate
code-creation,Builtin,2,4250,0x101b6be20,200,DatePrototypeGetDay
code-creation,Builtin,2,4250,0x101b6bf00,200,DatePrototypeGetFullYear
code-creation,Builtin,2,4250,0x101b6bfe0,200,DatePrototypeGetHours
code-creation,Builtin,2,4250,0x101b6c0c0,172,DatePrototypeGetMilliseconds
code-creation,Builtin,2,4250,0x101b6c180,200,DatePrototypeGetMinutes
code-creation,Builtin,2,4250,0x101b6c260,200,DatePrototypeGetMonth
code-creation,Builtin,2,4250,0x101b6c340,200,DatePrototypeGetSeconds
code-creation,Builtin,2,4250,0x101b6c420,256,DatePrototypeGetTime
code-creation,Builtin,2,4250,0x101b6c540,172,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,4250,0x101b6c600,172,DatePrototypeGetUTCDate
code-creation,Builtin,2,4291,0x101b6c6c0,172,DatePrototypeGetUTCDay
code-creation,Builtin,2,4291,0x101b6c780,172,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,4291,0x101b6c840,172,DatePrototypeGetUTCHours
code-creation,Builtin,2,4291,0x101b6c900,172,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,4291,0x101b6c9c0,172,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,4291,0x101b6ca80,172,DatePrototypeGetUTCMonth
code-creation,Builtin,2,4291,0x101b6cb40,172,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,4291,0x101b6cc00,256,DatePrototypeValueOf
code-creation,Builtin,2,4291,0x101b6cd20,500,DatePrototypeToPrimitive
code-creation,Builtin,2,4291,0x101b6cf20,8,DatePrototypeGetYear
code-creation,Builtin,2,4291,0x101b6cf40,8,DatePrototypeSetYear
code-creation,Builtin,2,4291,0x101b6cf60,8,DateNow
code-creation,Builtin,2,4291,0x101b6cf80,8,DateParse
code-creation,Builtin,2,4291,0x101b6cfa0,8,DatePrototypeSetDate
code-creation,Builtin,2,4291,0x101b6cfc0,8,DatePrototypeSetFullYear
code-creation,Builtin,2,4291,0x101b6cfe0,8,DatePrototypeSetHours
code-creation,Builtin,2,4291,0x101b6d000,8,DatePrototypeSetMilliseconds
code-creation,Builtin,2,4333,0x101b6d020,8,DatePrototypeSetMinutes
code-creation,Builtin,2,4333,0x101b6d040,8,DatePrototypeSetMonth
code-creation,Builtin,2,4333,0x101b6d060,8,DatePrototypeSetSeconds
code-creation,Builtin,2,4333,0x101b6d080,8,DatePrototypeSetTime
code-creation,Builtin,2,4333,0x101b6d0a0,8,DatePrototypeSetUTCDate
code-creation,Builtin,2,4333,0x101b6d0c0,8,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,4333,0x101b6d0e0,8,DatePrototypeSetUTCHours
code-creation,Builtin,2,4333,0x101b6d100,8,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,4333,0x101b6d120,8,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,4333,0x101b6d140,8,DatePrototypeSetUTCMonth
code-creation,Builtin,2,4333,0x101b6d160,8,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,4333,0x101b6d180,8,DatePrototypeToDateString
code-creation,Builtin,2,4333,0x101b6d1a0,8,DatePrototypeToISOString
code-creation,Builtin,2,4333,0x101b6d1c0,8,DatePrototypeToUTCString
code-creation,Builtin,2,4333,0x101b6d1e0,8,DatePrototypeToString
code-creation,Builtin,2,4333,0x101b6d200,8,DatePrototypeToTimeString
code-creation,Builtin,2,4375,0x101b6d220,8,DatePrototypeToJson
code-creation,Builtin,2,4375,0x101b6d240,8,DateUTC
code-creation,Builtin,2,4375,0x101b6d260,8,DisposableStackConstructor
code-creation,Builtin,2,4375,0x101b6d280,8,DisposableStackPrototypeUse
code-creation,Builtin,2,4375,0x101b6d2a0,8,DisposableStackPrototypeDispose
code-creation,Builtin,2,4375,0x101b6d2c0,8,DisposableStackPrototypeGetDisposed
code-creation,Builtin,2,4375,0x101b6d2e0,8,DisposableStackPrototypeAdopt
code-creation,Builtin,2,4375,0x101b6d300,8,DisposableStackPrototypeDefer
code-creation,Builtin,2,4375,0x101b6d320,8,DisposableStackPrototypeMove
code-creation,Builtin,2,4375,0x101b6d340,8,AsyncDisposableStackOnFulfilled
code-creation,Builtin,2,4375,0x101b6d360,8,AsyncDisposableStackOnRejected
code-creation,Builtin,2,4375,0x101b6d380,8,AsyncDisposeFromSyncDispose
code-creation,Builtin,2,4375,0x101b6d3a0,8,AsyncDisposableStackConstructor
code-creation,Builtin,2,4375,0x101b6d3c0,8,AsyncDisposableStackPrototypeUse
code-creation,Builtin,2,4375,0x101b6d3e0,8,AsyncDisposableStackPrototypeDisposeAsync
code-creation,Builtin,2,4375,0x101b6d400,8,AsyncDisposableStackPrototypeGetDisposed
code-creation,Builtin,2,4416,0x101b6d420,8,AsyncDisposableStackPrototypeAdopt
code-creation,Builtin,2,4416,0x101b6d440,8,AsyncDisposableStackPrototypeDefer
code-creation,Builtin,2,4416,0x101b6d460,8,AsyncDisposableStackPrototypeMove
code-creation,Builtin,2,4416,0x101b6d480,8,ErrorConstructor
code-creation,Builtin,2,4416,0x101b6d4a0,8,ErrorCaptureStackTrace
code-creation,Builtin,2,4416,0x101b6d4c0,8,ErrorPrototypeToString
code-creation,Builtin,2,4416,0x101b6d4e0,8,ErrorIsError
code-creation,Builtin,2,4416,0x101b6d500,8,FunctionConstructor
code-creation,Builtin,2,4416,0x101b6d520,80,FunctionPrototypeApply
code-creation,Builtin,2,4416,0x101b6d580,8,FunctionPrototypeBind
code-creation,Builtin,2,4416,0x101b6d5a0,8,WebAssemblyFunctionPrototypeBind
code-creation,Builtin,2,4416,0x101b6d5c0,152,FunctionPrototypeCall
code-creation,Builtin,2,4416,0x101b6d660,8,FunctionPrototypeToString
code-creation,Builtin,2,4416,0x101b6d680,320,CreateIterResultObject
code-creation,Builtin,2,4416,0x101b6d7e0,1108,CreateGeneratorObject
code-creation,Builtin,2,4416,0x101b6dc40,8,GeneratorFunctionConstructor
code-creation,Builtin,2,4416,0x101b6dc60,440,GeneratorPrototypeNext
code-creation,Builtin,2,4458,0x101b6de20,440,GeneratorPrototypeReturn
code-creation,Builtin,2,4458,0x101b6dfe0,452,GeneratorPrototypeThrow
code-creation,Builtin,2,4458,0x101b6e1c0,8,AsyncFunctionConstructor
code-creation,Builtin,2,4458,0x101b6e1e0,368,SuspendGeneratorBaseline
code-creation,Builtin,2,4458,0x101b6e360,116,ResumeGeneratorBaseline
code-creation,Builtin,2,4458,0x101b6e3e0,56,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,4458,0x101b6e420,120,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,4458,0x101b6e4a0,8,GlobalDecodeURI
code-creation,Builtin,2,4458,0x101b6e4c0,8,GlobalDecodeURIComponent
code-creation,Builtin,2,4458,0x101b6e4e0,8,GlobalEncodeURI
code-creation,Builtin,2,4458,0x101b6e500,8,GlobalEncodeURIComponent
code-creation,Builtin,2,4458,0x101b6e520,8,GlobalEscape
code-creation,Builtin,2,4458,0x101b6e540,8,GlobalUnescape
code-creation,Builtin,2,4458,0x101b6e560,8,GlobalEval
code-creation,Builtin,2,4500,0x101b6e580,172,GlobalIsFinite
code-creation,Builtin,2,4500,0x101b6e640,168,GlobalIsNaN
code-creation,Builtin,2,4500,0x101b6e700,8,JsonParse
code-creation,Builtin,2,4500,0x101b6e720,8,JsonStringify
code-creation,Builtin,2,4500,0x101b6e740,8,JsonRawJson
code-creation,Builtin,2,4500,0x101b6e760,8,JsonIsRawJson
code-creation,Builtin,2,4500,0x101b6e780,4936,LoadIC
code-creation,Builtin,2,4500,0x101b6fae0,4556,LoadIC_Megamorphic
code-creation,Builtin,2,4500,0x101b70cc0,4800,LoadIC_Noninlined
code-creation,Builtin,2,4500,0x101b71fa0,48,LoadICTrampoline
code-creation,Builtin,2,4500,0x101b71fe0,20,LoadICBaseline
code-creation,Builtin,2,4500,0x101b72000,48,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,4500,0x101b72040,9592,LoadSuperIC
code-creation,Builtin,2,4500,0x101b745c0,20,LoadSuperICBaseline
code-creation,Builtin,2,4500,0x101b745e0,9292,KeyedLoadIC
code-creation,Builtin,2,4500,0x101b76a40,9708,EnumeratedKeyedLoadIC
code-creation,Builtin,2,4500,0x101b79040,17620,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,4500,0x101b7d520,48,KeyedLoadICTrampoline
code-creation,Builtin,2,4541,0x101b7d560,20,KeyedLoadICBaseline
code-creation,Builtin,2,4541,0x101b7d580,32,EnumeratedKeyedLoadICBaseline
code-creation,Builtin,2,4541,0x101b7d5c0,48,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,4541,0x101b7d600,8580,StoreGlobalIC
code-creation,Builtin,2,4541,0x101b7f7a0,48,StoreGlobalICTrampoline
code-creation,Builtin,2,4541,0x101b7f7e0,20,StoreGlobalICBaseline
code-creation,Builtin,2,4541,0x101b7f800,6092,StoreIC
code-creation,Builtin,2,4541,0x101b80fe0,5880,StoreIC_Megamorphic
code-creation,Builtin,2,4541,0x101b826e0,48,StoreICTrampoline
code-creation,Builtin,2,4541,0x101b82720,48,StoreICTrampoline_Megamorphic
code-creation,Builtin,2,4541,0x101b82760,20,StoreICBaseline
code-creation,Builtin,2,4541,0x101b82780,5940,DefineNamedOwnIC
code-creation,Builtin,2,4541,0x101b83ec0,48,DefineNamedOwnICTrampoline
code-creation,Builtin,2,4541,0x101b83f00,20,DefineNamedOwnICBaseline
code-creation,Builtin,2,4541,0x101b83f20,6700,KeyedStoreIC
code-creation,Builtin,2,4541,0x101b85960,48,KeyedStoreICTrampoline
code-creation,Builtin,2,4541,0x101b859a0,48,KeyedStoreICTrampoline_Megamorphic
code-creation,Builtin,2,4583,0x101b859e0,20,KeyedStoreICBaseline
code-creation,Builtin,2,4583,0x101b85a00,6152,DefineKeyedOwnIC
code-creation,Builtin,2,4583,0x101b87220,56,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,4583,0x101b87260,32,DefineKeyedOwnICBaseline
code-creation,Builtin,2,4583,0x101b872a0,368,StoreInArrayLiteralIC
code-creation,Builtin,2,4583,0x101b87420,20,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,4583,0x101b87440,180,LookupContextTrampoline
code-creation,Builtin,2,4583,0x101b87500,656,LookupScriptContextTrampoline
code-creation,Builtin,2,4583,0x101b877a0,188,LookupContextBaseline
code-creation,Builtin,2,4583,0x101b87860,664,LookupScriptContextBaseline
code-creation,Builtin,2,4583,0x101b87b00,180,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,4583,0x101b87bc0,656,LookupScriptContextInsideTypeofTrampoline
code-creation,Builtin,2,4583,0x101b87e60,188,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,4583,0x101b87f20,664,LookupScriptContextInsideTypeofBaseline
code-creation,Builtin,2,4583,0x101b881c0,3412,LoadGlobalIC
code-creation,Builtin,2,4583,0x101b88f20,3392,LoadGlobalICInsideTypeof
code-creation,Builtin,2,4625,0x101b89c80,48,LoadGlobalICTrampoline
code-creation,Builtin,2,4625,0x101b89cc0,20,LoadGlobalICBaseline
code-creation,Builtin,2,4625,0x101b89ce0,48,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,4625,0x101b89d20,20,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,4625,0x101b89d40,156,LookupGlobalIC
code-creation,Builtin,2,4625,0x101b89de0,192,LookupGlobalICTrampoline
code-creation,Builtin,2,4625,0x101b89ec0,168,LookupGlobalICBaseline
code-creation,Builtin,2,4625,0x101b89f80,156,LookupGlobalICInsideTypeof
code-creation,Builtin,2,4625,0x101b8a020,192,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,4625,0x101b8a100,168,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,4625,0x101b8a1c0,3580,CloneObjectIC
code-creation,Builtin,2,4625,0x101b8afc0,20,CloneObjectICBaseline
code-creation,Builtin,2,4625,0x101b8afe0,2972,CloneObjectIC_Slow
code-creation,Builtin,2,4625,0x101b8bb80,3132,KeyedHasIC
code-creation,Builtin,2,4625,0x101b8c7c0,20,KeyedHasICBaseline
code-creation,Builtin,2,4625,0x101b8c7e0,4544,KeyedHasIC_Megamorphic
code-creation,Builtin,2,4666,0x101b8d9c0,1848,IterableToList
code-creation,Builtin,2,4666,0x101b8e100,1584,IterableToFixedArray
code-creation,Builtin,2,4666,0x101b8e740,1020,IterableToListWithSymbolLookup
code-creation,Builtin,2,4666,0x101b8eb40,64,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,4666,0x101b8eba0,136,IterableToListMayPreserveHoles
code-creation,Builtin,2,4666,0x101b8ec40,136,IterableToListConvertHoles
code-creation,Builtin,2,4666,0x101b8ece0,1856,IterableToFixedArrayForWasm
code-creation,Builtin,2,4666,0x101b8f440,1704,StringListFromIterable
code-creation,Builtin,2,4666,0x101b8fb00,1268,FindOrderedHashMapEntry
code-creation,Builtin,2,4666,0x101b90000,4880,MapConstructor
code-creation,Builtin,2,4666,0x101b91320,1968,MapPrototypeSet
code-creation,Builtin,2,4666,0x101b91ae0,1588,MapPrototypeDelete
code-creation,Builtin,2,4666,0x101b92120,244,MapPrototypeGet
code-creation,Builtin,2,4666,0x101b92220,196,MapPrototypeHas
code-creation,Builtin,2,4666,0x101b92300,8,MapPrototypeClear
code-creation,Builtin,2,4666,0x101b92320,300,MapPrototypeEntries
code-creation,Builtin,2,4666,0x101b92460,164,MapPrototypeGetSize
code-creation,Builtin,2,4708,0x101b92520,528,MapPrototypeForEach
code-creation,Builtin,2,4708,0x101b92740,300,MapPrototypeKeys
code-creation,Builtin,2,4708,0x101b92880,300,MapPrototypeValues
code-creation,Builtin,2,4708,0x101b929c0,892,MapIteratorPrototypeNext
code-creation,Builtin,2,4708,0x101b92d40,1176,MapIteratorToList
code-creation,Builtin,2,4708,0x101b931e0,8,NumberPrototypeToExponential
code-creation,Builtin,2,4708,0x101b93200,8,NumberPrototypeToFixed
code-creation,Builtin,2,4708,0x101b93220,8,NumberPrototypeToLocaleString
code-creation,Builtin,2,4708,0x101b93240,8,NumberPrototypeToPrecision
code-creation,Builtin,2,4708,0x101b93260,480,SameValue
code-creation,Builtin,2,4708,0x101b93460,252,SameValueNumbersOnly
code-creation,Builtin,2,4708,0x101b93560,2012,Add_Baseline
code-creation,Builtin,2,4708,0x101b93d40,1336,AddSmi_Baseline
code-creation,Builtin,2,4708,0x101b94280,1420,Subtract_Baseline
code-creation,Builtin,2,4708,0x101b94820,1224,SubtractSmi_Baseline
code-creation,Builtin,2,4708,0x101b94d00,1504,Multiply_Baseline
code-creation,Builtin,2,4708,0x101b95300,1324,MultiplySmi_Baseline
code-creation,Builtin,2,4708,0x101b95840,1580,Divide_Baseline
code-creation,Builtin,2,4750,0x101b95e80,1472,DivideSmi_Baseline
code-creation,Builtin,2,4750,0x101b96460,1460,Modulus_Baseline
code-creation,Builtin,2,4750,0x101b96a20,1296,ModulusSmi_Baseline
code-creation,Builtin,2,4750,0x101b96f40,676,Exponentiate_Baseline
code-creation,Builtin,2,4750,0x101b97200,584,ExponentiateSmi_Baseline
code-creation,Builtin,2,4750,0x101b97460,1448,BitwiseAnd_Baseline
code-creation,Builtin,2,4750,0x101b97a20,444,BitwiseAndSmi_Baseline
code-creation,Builtin,2,4750,0x101b97be0,1448,BitwiseOr_Baseline
code-creation,Builtin,2,4750,0x101b981a0,444,BitwiseOrSmi_Baseline
code-creation,Builtin,2,4750,0x101b98360,1448,BitwiseXor_Baseline
code-creation,Builtin,2,4750,0x101b98920,444,BitwiseXorSmi_Baseline
code-creation,Builtin,2,4750,0x101b98ae0,972,ShiftLeft_Baseline
code-creation,Builtin,2,4750,0x101b98ec0,468,ShiftLeftSmi_Baseline
code-creation,Builtin,2,4750,0x101b990a0,972,ShiftRight_Baseline
code-creation,Builtin,2,4750,0x101b99480,456,ShiftRightSmi_Baseline
code-creation,Builtin,2,4750,0x101b99660,1048,ShiftRightLogical_Baseline
code-creation,Builtin,2,4750,0x101b99a80,696,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,4791,0x101b99d40,1920,Add_WithFeedback
code-creation,Builtin,2,4791,0x101b9a4e0,1352,Subtract_WithFeedback
code-creation,Builtin,2,4791,0x101b9aa40,1432,Multiply_WithFeedback
code-creation,Builtin,2,4791,0x101b9afe0,1504,Divide_WithFeedback
code-creation,Builtin,2,4791,0x101b9b5e0,1376,Modulus_WithFeedback
code-creation,Builtin,2,4791,0x101b9bb60,632,Exponentiate_WithFeedback
code-creation,Builtin,2,4791,0x101b9bde0,1428,BitwiseAnd_WithFeedback
code-creation,Builtin,2,4791,0x101b9c380,1428,BitwiseOr_WithFeedback
code-creation,Builtin,2,4791,0x101b9c920,1428,BitwiseXor_WithFeedback
code-creation,Builtin,2,4791,0x101b9cec0,944,ShiftLeft_WithFeedback
code-creation,Builtin,2,4791,0x101b9d280,944,ShiftRight_WithFeedback
code-creation,Builtin,2,4791,0x101b9d640,1024,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,4791,0x101b9da60,2072,Equal_Baseline
code-creation,Builtin,2,4791,0x101b9e280,988,StrictEqual_Baseline
code-creation,Builtin,2,4791,0x101b9e660,1416,LessThan_Baseline
code-creation,Builtin,2,4791,0x101b9ec00,1416,GreaterThan_Baseline
code-creation,Builtin,2,4833,0x101b9f1a0,1416,LessThanOrEqual_Baseline
code-creation,Builtin,2,4833,0x101b9f740,1416,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,4833,0x101b9fce0,2016,Equal_WithFeedback
code-creation,Builtin,2,4833,0x101ba04e0,972,StrictEqual_WithFeedback
code-creation,Builtin,2,4833,0x101ba08c0,1404,LessThan_WithFeedback
code-creation,Builtin,2,4833,0x101ba0e40,1404,GreaterThan_WithFeedback
code-creation,Builtin,2,4833,0x101ba13c0,1404,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,4833,0x101ba1940,1404,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,4833,0x101ba1ec0,388,BitwiseNot_Baseline
code-creation,Builtin,2,4833,0x101ba2060,528,Decrement_Baseline
code-creation,Builtin,2,4833,0x101ba2280,528,Increment_Baseline
code-creation,Builtin,2,4833,0x101ba24a0,544,Negate_Baseline
code-creation,Builtin,2,4833,0x101ba26e0,376,BitwiseNot_WithFeedback
code-creation,Builtin,2,4833,0x101ba2860,516,Decrement_WithFeedback
code-creation,Builtin,2,4833,0x101ba2a80,516,Increment_WithFeedback
code-creation,Builtin,2,4833,0x101ba2ca0,532,Negate_WithFeedback
code-creation,Builtin,2,4833,0x101ba2ec0,4204,ObjectAssign
code-creation,Builtin,2,4875,0x101ba3f40,1484,ObjectCreate
code-creation,Builtin,2,4875,0x101ba4520,8,ObjectDefineGetter
code-creation,Builtin,2,4875,0x101ba4540,8,ObjectDefineProperties
code-creation,Builtin,2,4875,0x101ba4560,8,ObjectDefineProperty
code-creation,Builtin,2,4875,0x101ba4580,8,ObjectDefineSetter
code-creation,Builtin,2,4875,0x101ba45a0,1656,ObjectEntries
code-creation,Builtin,2,4875,0x101ba4c20,8,ObjectFreeze
code-creation,Builtin,2,4875,0x101ba4c40,4520,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,4875,0x101ba5e00,8,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,4875,0x101ba5e20,932,ObjectGetOwnPropertyNames
code-creation,Builtin,2,4875,0x101ba61e0,8,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,4875,0x101ba6200,200,ObjectHasOwn
code-creation,Builtin,2,4875,0x101ba62e0,516,ObjectIs
code-creation,Builtin,2,4875,0x101ba6500,8,ObjectIsFrozen
code-creation,Builtin,2,4875,0x101ba6520,8,ObjectIsSealed
code-creation,Builtin,2,4875,0x101ba6540,868,ObjectKeys
code-creation,Builtin,2,4875,0x101ba68c0,8,ObjectLookupGetter
code-creation,Builtin,2,4916,0x101ba68e0,8,ObjectLookupSetter
code-creation,Builtin,2,4916,0x101ba6900,3420,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,4916,0x101ba7660,280,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,4916,0x101ba7780,8,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,4916,0x101ba77a0,8,ObjectPrototypeGetProto
code-creation,Builtin,2,4916,0x101ba77c0,8,ObjectPrototypeSetProto
code-creation,Builtin,2,4916,0x101ba77e0,8,ObjectSeal
code-creation,Builtin,2,4916,0x101ba7800,1328,ObjectToString
code-creation,Builtin,2,4916,0x101ba7d40,1404,ObjectValues
code-creation,Builtin,2,4916,0x101ba82c0,432,OrdinaryHasInstance
code-creation,Builtin,2,4916,0x101ba8480,468,InstanceOf
code-creation,Builtin,2,4916,0x101ba8660,868,InstanceOf_WithFeedback
code-creation,Builtin,2,4916,0x101ba89e0,876,InstanceOf_Baseline
code-creation,Builtin,2,4916,0x101ba8d60,300,ForInEnumerate
code-creation,Builtin,2,4916,0x101ba8ea0,140,ForInPrepare
code-creation,Builtin,2,4916,0x101ba8f40,4524,ForInFilter
code-creation,Builtin,2,4916,0x101baa100,68,ReflectApply
code-creation,Builtin,2,4958,0x101baa160,72,ReflectConstruct
code-creation,Builtin,2,4958,0x101baa1c0,8,ReflectDefineProperty
code-creation,Builtin,2,4958,0x101baa1e0,8,ReflectOwnKeys
code-creation,Builtin,2,4958,0x101baa200,8,ReflectSet
code-creation,Builtin,2,4958,0x101baa220,8,RegExpCapture1Getter
code-creation,Builtin,2,4958,0x101baa240,8,RegExpCapture2Getter
code-creation,Builtin,2,4958,0x101baa260,8,RegExpCapture3Getter
code-creation,Builtin,2,4958,0x101baa280,8,RegExpCapture4Getter
code-creation,Builtin,2,4958,0x101baa2a0,8,RegExpCapture5Getter
code-creation,Builtin,2,4958,0x101baa2c0,8,RegExpCapture6Getter
code-creation,Builtin,2,4958,0x101baa2e0,8,RegExpCapture7Getter
code-creation,Builtin,2,4958,0x101baa300,8,RegExpCapture8Getter
code-creation,Builtin,2,4958,0x101baa320,8,RegExpCapture9Getter
code-creation,Builtin,2,4958,0x101baa340,2452,RegExpConstructor
code-creation,Builtin,2,4958,0x101baace0,8,RegExpInputGetter
code-creation,Builtin,2,4958,0x101baad00,8,RegExpInputSetter
code-creation,Builtin,2,4958,0x101baad20,8,RegExpLastMatchGetter
code-creation,Builtin,2,5000,0x101baad40,8,RegExpLastParenGetter
code-creation,Builtin,2,5000,0x101baad60,8,RegExpLeftContextGetter
code-creation,Builtin,2,5000,0x101baad80,896,RegExpPrototypeCompile
code-creation,Builtin,2,5000,0x101bab120,8,RegExpPrototypeToString
code-creation,Builtin,2,5000,0x101bab140,8,RegExpRightContextGetter
code-creation,Builtin,2,5000,0x101bab160,8,RegExpEscape
code-creation,Builtin,2,5000,0x101bab180,240,RegExpExecAtom
code-creation,Builtin,2,5000,0x101bab280,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,5000,0x101bab2a0,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,5000,0x101bab2c0,1248,FindOrderedHashSetEntry
code-creation,Builtin,2,5000,0x101bab7c0,5428,SetConstructor
code-creation,Builtin,2,5000,0x101bacd00,196,SetPrototypeHas
code-creation,Builtin,2,5000,0x101bacde0,1768,SetPrototypeAdd
code-creation,Builtin,2,5000,0x101bad4e0,1580,SetPrototypeDelete
code-creation,Builtin,2,5000,0x101badb20,8,SetPrototypeClear
code-creation,Builtin,2,5000,0x101badb40,300,SetPrototypeEntries
code-creation,Builtin,2,5041,0x101badc80,164,SetPrototypeGetSize
code-creation,Builtin,2,5041,0x101badd40,492,SetPrototypeForEach
code-creation,Builtin,2,5041,0x101badf40,300,SetPrototypeValues
code-creation,Builtin,2,5041,0x101bae080,824,SetIteratorPrototypeNext
code-creation,Builtin,2,5041,0x101bae3c0,1052,SetOrSetIteratorToList
code-creation,Builtin,2,5041,0x101bae7e0,8,ShadowRealmConstructor
code-creation,Builtin,2,5041,0x101bae800,884,ShadowRealmGetWrappedValue
code-creation,Builtin,2,5041,0x101baeb80,8,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,5041,0x101baeba0,1124,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,5041,0x101baf020,300,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,5041,0x101baf160,92,ShadowRealmImportValueRejected
code-creation,Builtin,2,5041,0x101baf1c0,8,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,5041,0x101baf1e0,8,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,5083,0x101baf200,8,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,5083,0x101baf220,2108,AtomicsLoad
code-creation,Builtin,2,5083,0x101bafa60,2276,AtomicsStore
code-creation,Builtin,2,5083,0x101bb0360,2836,AtomicsExchange
code-creation,Builtin,2,5083,0x101bb0e80,3188,AtomicsCompareExchange
code-creation,Builtin,2,5083,0x101bb1b00,2692,AtomicsAdd
code-creation,Builtin,2,5083,0x101bb25a0,2724,AtomicsSub
code-creation,Builtin,2,5083,0x101bb3060,2724,AtomicsAnd
code-creation,Builtin,2,5083,0x101bb3b20,2692,AtomicsOr
code-creation,Builtin,2,5083,0x101bb45c0,2692,AtomicsXor
code-creation,Builtin,2,5083,0x101bb5060,8,AtomicsNotify
code-creation,Builtin,2,5083,0x101bb5080,8,AtomicsIsLockFree
code-creation,Builtin,2,5083,0x101bb50a0,8,AtomicsWait
code-creation,Builtin,2,5083,0x101bb50c0,8,AtomicsWaitAsync
code-creation,Builtin,2,5083,0x101bb50e0,8,AtomicsPause
code-creation,Builtin,2,5125,0x101bb5100,8,StringFromCodePoint
code-creation,Builtin,2,5125,0x101bb5120,1368,StringFromCharCode
code-creation,Builtin,2,5125,0x101bb5680,8,StringPrototypeLastIndexOf
code-creation,Builtin,2,5125,0x101bb56a0,4932,StringPrototypeMatchAll
code-creation,Builtin,2,5125,0x101bb6a00,1316,StringPrototypeReplace
code-creation,Builtin,2,5125,0x101bb6f40,2872,StringPrototypeSplit
code-creation,Builtin,2,5125,0x101bb7a80,8,StringRaw
code-creation,Builtin,2,5125,0x101bb7aa0,8,SymbolConstructor
code-creation,Builtin,2,5125,0x101bb7ac0,8,SymbolFor
code-creation,Builtin,2,5125,0x101bb7ae0,8,SymbolKeyFor
code-creation,Builtin,2,5125,0x101bb7b00,100,TypedArrayBaseConstructor
code-creation,Builtin,2,5125,0x101bb7b80,300,TypedArrayConstructor
code-creation,Builtin,2,5125,0x101bb7cc0,8,TypedArrayPrototypeBuffer
code-creation,Builtin,2,5125,0x101bb7ce0,892,TypedArrayPrototypeByteLength
code-creation,Builtin,2,5125,0x101bb8060,344,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,5166,0x101bb81c0,620,TypedArrayPrototypeLength
code-creation,Builtin,2,5166,0x101bb8440,8,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,5166,0x101bb8460,8,TypedArrayPrototypeFill
code-creation,Builtin,2,5166,0x101bb8480,8,TypedArrayPrototypeIncludes
code-creation,Builtin,2,5166,0x101bb84a0,8,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,5166,0x101bb84c0,8,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,5166,0x101bb84e0,8,TypedArrayPrototypeReverse
code-creation,Builtin,2,5166,0x101bb8500,580,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,5166,0x101bb8760,29704,TypedArrayPrototypeMap
code-creation,Builtin,2,5166,0x101bbfb80,8,Uint8ArrayFromBase64
code-creation,Builtin,2,5166,0x101bbfba0,8,Uint8ArrayFromHex
code-creation,Builtin,2,5166,0x101bbfbc0,8,Uint8ArrayPrototypeToBase64
code-creation,Builtin,2,5166,0x101bbfbe0,8,Uint8ArrayPrototypeToHex
code-creation,Builtin,2,5166,0x101bbfc00,252,JSToWasmWrapperAsm
code-creation,Builtin,2,5166,0x101bbfd00,808,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,5208,0x101bc0040,580,JSToWasmStressSwitchStacksAsm
code-creation,Builtin,2,5208,0x101bc02a0,36,WasmToJsWrapperAsm
code-creation,Builtin,2,5208,0x101bc02e0,4512,WasmToJsWrapperCSA
code-creation,Builtin,2,5208,0x101bc14a0,44,WasmToJsWrapperInvalidSig
code-creation,Builtin,2,5208,0x101bc14e0,192,WasmSuspend
code-creation,Builtin,2,5208,0x101bc15c0,292,WasmResume
code-creation,Builtin,2,5208,0x101bc1700,308,WasmReject
code-creation,Builtin,2,5208,0x101bc1840,8,WasmTrapHandlerLandingPad
code-creation,Builtin,2,5208,0x101bc1860,132,WasmCompileLazy
code-creation,Builtin,2,5208,0x101bc1900,144,WasmLiftoffFrameSetup
code-creation,Builtin,2,5208,0x101bc19a0,252,WasmDebugBreak
code-creation,Builtin,2,5208,0x101bc1aa0,4,WasmOnStackReplace
code-creation,Builtin,2,5208,0x101bc1ac0,164,WasmHandleStackOverflow
code-creation,Builtin,2,5208,0x101bc1b80,152,WasmFloat32ToNumber
code-creation,Builtin,2,5208,0x101bc1c20,140,WasmFloat64ToNumber
code-creation,Builtin,2,5250,0x101bc1cc0,1572,WasmFloat64ToString
code-creation,Builtin,2,5250,0x101bc2300,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,5250,0x101bc2320,5280,WeakMapConstructor
code-creation,Builtin,2,5250,0x101bc37e0,340,WeakMapLookupHashIndex
code-creation,Builtin,2,5250,0x101bc3940,252,WeakMapGet
code-creation,Builtin,2,5250,0x101bc3a40,208,WeakMapPrototypeHas
code-creation,Builtin,2,5250,0x101bc3b20,276,WeakMapPrototypeSet
code-creation,Builtin,2,5250,0x101bc3c40,220,WeakMapPrototypeDelete
code-creation,Builtin,2,5250,0x101bc3d20,3876,WeakSetConstructor
code-creation,Builtin,2,5250,0x101bc4c60,208,WeakSetPrototypeHas
code-creation,Builtin,2,5250,0x101bc4d40,276,WeakSetPrototypeAdd
code-creation,Builtin,2,5250,0x101bc4e60,220,WeakSetPrototypeDelete
code-creation,Builtin,2,5250,0x101bc4f40,556,WeakCollectionDelete
code-creation,Builtin,2,5250,0x101bc5180,852,WeakCollectionSet
code-creation,Builtin,2,5250,0x101bc54e0,8,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,5291,0x101bc5500,8,SharedStructTypeConstructor
code-creation,Builtin,2,5291,0x101bc5520,8,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,5291,0x101bc5540,8,SharedStructConstructor
code-creation,Builtin,2,5291,0x101bc5560,8,SharedArrayConstructor
code-creation,Builtin,2,5291,0x101bc5580,8,SharedArrayIsSharedArray
code-creation,Builtin,2,5291,0x101bc55a0,8,AtomicsMutexConstructor
code-creation,Builtin,2,5291,0x101bc55c0,8,AtomicsMutexIsMutex
code-creation,Builtin,2,5291,0x101bc55e0,8,AtomicsMutexLock
code-creation,Builtin,2,5291,0x101bc5600,8,AtomicsMutexLockAsync
code-creation,Builtin,2,5291,0x101bc5620,8,AtomicsMutexLockWithTimeout
code-creation,Builtin,2,5291,0x101bc5640,8,AtomicsMutexTryLock
code-creation,Builtin,2,5291,0x101bc5660,8,AtomicsMutexAsyncUnlockResolveHandler
code-creation,Builtin,2,5291,0x101bc5680,8,AtomicsMutexAsyncUnlockRejectHandler
code-creation,Builtin,2,5291,0x101bc56a0,8,AtomicsConditionConstructor
code-creation,Builtin,2,5291,0x101bc56c0,8,AtomicsConditionAcquireLock
code-creation,Builtin,2,5333,0x101bc56e0,8,AtomicsConditionIsCondition
code-creation,Builtin,2,5333,0x101bc5700,8,AtomicsConditionWait
code-creation,Builtin,2,5333,0x101bc5720,8,AtomicsConditionNotify
code-creation,Builtin,2,5333,0x101bc5740,8,AtomicsConditionWaitAsync
code-creation,Builtin,2,5333,0x101bc5760,356,AsyncGeneratorResolve
code-creation,Builtin,2,5333,0x101bc58e0,108,AsyncGeneratorReject
code-creation,Builtin,2,5333,0x101bc5960,2044,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,5333,0x101bc6160,2332,AsyncGeneratorReturn
code-creation,Builtin,2,5333,0x101bc6a80,264,AsyncGeneratorResumeNext
code-creation,Builtin,2,5333,0x101bc6ba0,8,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,5333,0x101bc6bc0,1120,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,5333,0x101bc7040,1108,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,5333,0x101bc74a0,1108,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,5333,0x101bc7900,2044,AsyncGeneratorAwait
code-creation,Builtin,2,5333,0x101bc8100,136,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,5375,0x101bc81a0,140,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,5375,0x101bc8240,136,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,5375,0x101bc82e0,136,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,5375,0x101bc8380,132,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,5375,0x101bc8420,140,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,5375,0x101bc84c0,1904,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,5375,0x101bc8c40,2240,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,5375,0x101bc9520,1640,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,5375,0x101bc9ba0,296,AsyncFromSyncIteratorCloseSyncAndRethrow
code-creation,Builtin,2,5375,0x101bc9ce0,132,AsyncIteratorValueUnwrap
code-creation,Builtin,2,5375,0x101bc9d80,188,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,5375,0x101bc9e40,216,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5375,0x101bc9f20,216,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5416,0x101bca000,188,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,5416,0x101bca0c0,216,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,5416,0x101bca1a0,216,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,5416,0x101bca280,316,WasmCEntry
code-creation,Builtin,2,5416,0x101bca3c0,16,DirectCEntry
code-creation,Builtin,2,5416,0x101bca3e0,1412,StringAdd_CheckNone
code-creation,Builtin,2,5416,0x101bca980,3588,SubString
code-creation,Builtin,2,5416,0x101bcb7a0,80,DoubleToI
code-creation,Builtin,2,5416,0x101bcb800,3540,GetProperty
code-creation,Builtin,2,5416,0x101bcc5e0,3920,GetPropertyWithReceiver
code-creation,Builtin,2,5458,0x101bcd540,17996,SetProperty
code-creation,Builtin,2,5458,0x101bd1ba0,14960,CreateDataProperty
code-creation,Builtin,2,5458,0x101bd5620,48,GetOwnPropertyDescriptor
code-creation,Builtin,2,5458,0x101bd5660,4,MemCopyUint8Uint8
code-creation,Builtin,2,5458,0x101bd5680,4,MemMove
code-creation,Builtin,2,5458,0x101bd56a0,260,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,5458,0x101bd57c0,2644,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,5458,0x101bd6220,8,IsTraceCategoryEnabled
code-creation,Builtin,2,5458,0x101bd6240,8,Trace
code-creation,Builtin,2,5458,0x101bd6260,8,FinalizationRegistryUnregister
code-creation,Builtin,2,5458,0x101bd6280,444,AsyncModuleEvaluate
code-creation,Builtin,2,5458,0x101bd6440,8,CallAsyncModuleFulfilled
code-creation,Builtin,2,5458,0x101bd6460,8,CallAsyncModuleRejected
code-creation,Builtin,2,5458,0x101bd6480,8,TemporalNowTimeZone
code-creation,Builtin,2,5458,0x101bd64a0,8,TemporalNowInstant
code-creation,Builtin,2,5500,0x101bd64c0,8,TemporalNowPlainDateTime
code-creation,Builtin,2,5500,0x101bd64e0,8,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,5500,0x101bd6500,8,TemporalNowZonedDateTime
code-creation,Builtin,2,5500,0x101bd6520,8,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,5500,0x101bd6540,8,TemporalNowPlainDate
code-creation,Builtin,2,5500,0x101bd6560,8,TemporalNowPlainDateISO
code-creation,Builtin,2,5500,0x101bd6580,8,TemporalNowPlainTimeISO
code-creation,Builtin,2,5500,0x101bd65a0,8,TemporalPlainDateConstructor
code-creation,Builtin,2,5500,0x101bd65c0,8,TemporalPlainDateFrom
code-creation,Builtin,2,5500,0x101bd65e0,8,TemporalPlainDateCompare
code-creation,Builtin,2,5500,0x101bd6600,8,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,5500,0x101bd6620,8,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,5500,0x101bd6640,8,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,5500,0x101bd6660,8,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,5500,0x101bd6680,8,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,5541,0x101bd66a0,8,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,5541,0x101bd66c0,8,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,5541,0x101bd66e0,8,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,5541,0x101bd6700,8,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,5541,0x101bd6720,8,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,5541,0x101bd6740,8,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,5541,0x101bd6760,8,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,5541,0x101bd6780,8,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,5541,0x101bd67a0,8,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,5541,0x101bd67c0,8,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,5541,0x101bd67e0,8,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,5541,0x101bd6800,8,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,5541,0x101bd6820,8,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,5541,0x101bd6840,8,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,5541,0x101bd6860,8,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,5541,0x101bd6880,8,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,5583,0x101bd68a0,8,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,5583,0x101bd68c0,8,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,5583,0x101bd68e0,8,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,5583,0x101bd6900,8,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,5583,0x101bd6920,8,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,5583,0x101bd6940,8,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,5583,0x101bd6960,8,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,5583,0x101bd6980,8,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,5583,0x101bd69a0,8,TemporalPlainTimeConstructor
code-creation,Builtin,2,5583,0x101bd69c0,8,TemporalPlainTimeFrom
code-creation,Builtin,2,5583,0x101bd69e0,8,TemporalPlainTimeCompare
code-creation,Builtin,2,5583,0x101bd6a00,8,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,5583,0x101bd6a20,8,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,5583,0x101bd6a40,8,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,5625,0x101bd6a60,8,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,5625,0x101bd6a80,8,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,5625,0x101bd6aa0,8,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,5625,0x101bd6ac0,8,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,5625,0x101bd6ae0,8,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,5625,0x101bd6b00,8,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,5625,0x101bd6b20,8,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,5625,0x101bd6b40,8,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,5625,0x101bd6b60,8,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,5625,0x101bd6b80,8,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,5625,0x101bd6ba0,8,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,5625,0x101bd6bc0,8,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,5625,0x101bd6be0,8,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,5625,0x101bd6c00,8,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,5625,0x101bd6c20,8,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,5625,0x101bd6c40,8,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,5666,0x101bd6c60,8,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,5666,0x101bd6c80,8,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,5666,0x101bd6ca0,8,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,5666,0x101bd6cc0,8,TemporalPlainDateTimeFrom
code-creation,Builtin,2,5666,0x101bd6ce0,8,TemporalPlainDateTimeCompare
code-creation,Builtin,2,5666,0x101bd6d00,8,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,5666,0x101bd6d20,8,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,5666,0x101bd6d40,8,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,5666,0x101bd6d60,8,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,5666,0x101bd6d80,8,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,5666,0x101bd6da0,8,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,5666,0x101bd6dc0,8,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,5666,0x101bd6de0,8,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,5666,0x101bd6e00,8,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,5666,0x101bd6e20,8,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,5708,0x101bd6e40,8,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,5708,0x101bd6e60,8,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,5708,0x101bd6e80,8,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,5708,0x101bd6ea0,8,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,5708,0x101bd6ec0,8,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,5708,0x101bd6ee0,8,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,5708,0x101bd6f00,8,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,5708,0x101bd6f20,8,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,5708,0x101bd6f40,8,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,5708,0x101bd6f60,8,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,5708,0x101bd6f80,8,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,5708,0x101bd6fa0,8,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,5708,0x101bd6fc0,8,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,5708,0x101bd6fe0,8,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,5708,0x101bd7000,8,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,5708,0x101bd7020,8,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,5750,0x101bd7040,8,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,5750,0x101bd7060,8,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,5750,0x101bd7080,8,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,5750,0x101bd70a0,8,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,5750,0x101bd70c0,8,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,5750,0x101bd70e0,8,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,5750,0x101bd7100,8,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,5750,0x101bd7120,8,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,5750,0x101bd7140,8,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,5750,0x101bd7160,8,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,5750,0x101bd7180,8,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,5750,0x101bd71a0,8,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,5750,0x101bd71c0,8,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,5750,0x101bd71e0,8,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,5791,0x101bd7200,8,TemporalZonedDateTimeFrom
code-creation,Builtin,2,5791,0x101bd7220,8,TemporalZonedDateTimeCompare
code-creation,Builtin,2,5791,0x101bd7240,8,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,5791,0x101bd7260,8,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,5791,0x101bd7280,8,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,5791,0x101bd72a0,8,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,5791,0x101bd72c0,8,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,5791,0x101bd72e0,8,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,5791,0x101bd7300,8,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,5791,0x101bd7320,8,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,5791,0x101bd7340,8,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,5791,0x101bd7360,8,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,5791,0x101bd7380,8,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,5791,0x101bd73a0,8,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,5791,0x101bd73c0,8,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,5833,0x101bd73e0,8,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,5833,0x101bd7400,8,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,5833,0x101bd7420,8,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,5833,0x101bd7440,8,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,5833,0x101bd7460,8,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,5833,0x101bd7480,8,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,5833,0x101bd74a0,8,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,5833,0x101bd74c0,8,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,5833,0x101bd74e0,8,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,5833,0x101bd7500,8,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,5833,0x101bd7520,8,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,5833,0x101bd7540,8,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,5833,0x101bd7560,8,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,5833,0x101bd7580,8,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,5833,0x101bd75a0,8,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,5875,0x101bd75c0,8,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,5875,0x101bd75e0,8,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,5875,0x101bd7600,8,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,5875,0x101bd7620,8,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,5875,0x101bd7640,8,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,5875,0x101bd7660,8,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,5875,0x101bd7680,8,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,5875,0x101bd76a0,8,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,5875,0x101bd76c0,8,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,5875,0x101bd76e0,8,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,5875,0x101bd7700,8,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,5875,0x101bd7720,8,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,5875,0x101bd7740,8,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,5875,0x101bd7760,8,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,5916,0x101bd7780,8,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,5916,0x101bd77a0,8,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,5916,0x101bd77c0,8,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,5916,0x101bd77e0,8,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,5916,0x101bd7800,8,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,5916,0x101bd7820,8,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,5916,0x101bd7840,8,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,5916,0x101bd7860,8,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,5916,0x101bd7880,8,TemporalDurationConstructor
code-creation,Builtin,2,5916,0x101bd78a0,8,TemporalDurationFrom
code-creation,Builtin,2,5916,0x101bd78c0,8,TemporalDurationCompare
code-creation,Builtin,2,5916,0x101bd78e0,8,TemporalDurationPrototypeYears
code-creation,Builtin,2,5916,0x101bd7900,8,TemporalDurationPrototypeMonths
code-creation,Builtin,2,5916,0x101bd7920,8,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,5916,0x101bd7940,8,TemporalDurationPrototypeDays
code-creation,Builtin,2,5916,0x101bd7960,8,TemporalDurationPrototypeHours
code-creation,Builtin,2,5958,0x101bd7980,8,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,5958,0x101bd79a0,8,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,5958,0x101bd79c0,8,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,5958,0x101bd79e0,8,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,5958,0x101bd7a00,8,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,5958,0x101bd7a20,8,TemporalDurationPrototypeSign
code-creation,Builtin,2,5958,0x101bd7a40,8,TemporalDurationPrototypeBlank
code-creation,Builtin,2,5958,0x101bd7a60,8,TemporalDurationPrototypeWith
code-creation,Builtin,2,5958,0x101bd7a80,8,TemporalDurationPrototypeNegated
code-creation,Builtin,2,5958,0x101bd7aa0,8,TemporalDurationPrototypeAbs
code-creation,Builtin,2,5958,0x101bd7ac0,8,TemporalDurationPrototypeAdd
code-creation,Builtin,2,5958,0x101bd7ae0,8,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,5958,0x101bd7b00,8,TemporalDurationPrototypeRound
code-creation,Builtin,2,5958,0x101bd7b20,8,TemporalDurationPrototypeTotal
code-creation,Builtin,2,5958,0x101bd7b40,8,TemporalDurationPrototypeToString
code-creation,Builtin,2,6000,0x101bd7b60,8,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,6000,0x101bd7b80,8,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,6000,0x101bd7ba0,8,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,6000,0x101bd7bc0,8,TemporalInstantConstructor
code-creation,Builtin,2,6000,0x101bd7be0,8,TemporalInstantFrom
code-creation,Builtin,2,6000,0x101bd7c00,8,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,6000,0x101bd7c20,8,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,6000,0x101bd7c40,8,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,6000,0x101bd7c60,8,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,6000,0x101bd7c80,8,TemporalInstantCompare
code-creation,Builtin,2,6000,0x101bd7ca0,8,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,6000,0x101bd7cc0,8,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,6000,0x101bd7ce0,8,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,6000,0x101bd7d00,8,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,6000,0x101bd7d20,8,TemporalInstantPrototypeAdd
code-creation,Builtin,2,6000,0x101bd7d40,8,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,6041,0x101bd7d60,8,TemporalInstantPrototypeUntil
code-creation,Builtin,2,6041,0x101bd7d80,8,TemporalInstantPrototypeSince
code-creation,Builtin,2,6041,0x101bd7da0,8,TemporalInstantPrototypeRound
code-creation,Builtin,2,6041,0x101bd7dc0,8,TemporalInstantPrototypeEquals
code-creation,Builtin,2,6041,0x101bd7de0,8,TemporalInstantPrototypeToString
code-creation,Builtin,2,6041,0x101bd7e00,8,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,6041,0x101bd7e20,8,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,6041,0x101bd7e40,8,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,6041,0x101bd7e60,8,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,6041,0x101bd7e80,8,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,6041,0x101bd7ea0,8,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,6041,0x101bd7ec0,8,TemporalPlainYearMonthFrom
code-creation,Builtin,2,6041,0x101bd7ee0,8,TemporalPlainYearMonthCompare
code-creation,Builtin,2,6041,0x101bd7f00,8,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,6041,0x101bd7f20,8,TemporalPlainYearMonthPrototypeYear
tick,0x1938f5aa4,6083,0,0x0,9
tick,0x1938f681c,6083,0,0x0,9
code-creation,Builtin,2,6083,0x101bd7f40,8,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,6083,0x101bd7f60,8,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,6083,0x101bd7f80,8,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,6083,0x101bd7fa0,8,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,6083,0x101bd7fc0,8,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,6083,0x101bd7fe0,8,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,6083,0x101bd8000,8,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,6083,0x101bd8020,8,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,6083,0x101bd8040,8,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,6083,0x101bd8060,8,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,6083,0x101bd8080,8,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,6083,0x101bd80a0,8,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,6083,0x101bd80c0,8,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,6083,0x101bd80e0,8,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,6083,0x101bd8100,8,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,6083,0x101bd8120,8,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,6125,0x101bd8140,8,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,6125,0x101bd8160,8,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,6125,0x101bd8180,8,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,6125,0x101bd81a0,8,TemporalPlainMonthDayFrom
code-creation,Builtin,2,6125,0x101bd81c0,8,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,6125,0x101bd81e0,8,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,6125,0x101bd8200,8,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,6125,0x101bd8220,8,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,6125,0x101bd8240,8,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,6125,0x101bd8260,8,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,6125,0x101bd8280,8,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,6125,0x101bd82a0,8,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,6125,0x101bd82c0,8,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,6125,0x101bd82e0,8,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,6125,0x101bd8300,8,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,6125,0x101bd8320,8,TemporalTimeZoneConstructor
code-creation,Builtin,2,6125,0x101bd8340,8,TemporalTimeZoneFrom
code-creation,Builtin,2,6125,0x101bd8360,8,TemporalTimeZonePrototypeId
code-creation,Builtin,2,6125,0x101bd8380,8,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,6125,0x101bd83a0,8,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,6166,0x101bd83c0,8,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,6166,0x101bd83e0,8,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,6166,0x101bd8400,8,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,6166,0x101bd8420,8,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,6166,0x101bd8440,8,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,6166,0x101bd8460,8,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,6166,0x101bd8480,8,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,6166,0x101bd84a0,8,TemporalCalendarConstructor
code-creation,Builtin,2,6166,0x101bd84c0,8,TemporalCalendarFrom
code-creation,Builtin,2,6166,0x101bd84e0,8,TemporalCalendarPrototypeId
code-creation,Builtin,2,6166,0x101bd8500,8,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,6166,0x101bd8520,8,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,6166,0x101bd8540,8,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,6166,0x101bd8560,8,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,6166,0x101bd8580,8,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,6166,0x101bd85a0,8,TemporalCalendarPrototypeYear
code-creation,Builtin,2,6166,0x101bd85c0,8,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,6166,0x101bd85e0,8,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,6166,0x101bd8600,8,TemporalCalendarPrototypeDay
code-creation,Builtin,2,6166,0x101bd8620,8,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,6208,0x101bd8640,8,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,6208,0x101bd8660,8,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,6208,0x101bd8680,8,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,6208,0x101bd86a0,8,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,6208,0x101bd86c0,8,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,6208,0x101bd86e0,8,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,6208,0x101bd8700,8,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,6208,0x101bd8720,3732,TemporalCalendarPrototypeFields
code-creation,Builtin,2,6208,0x101bd95c0,8,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,6208,0x101bd95e0,8,TemporalCalendarPrototypeToString
code-creation,Builtin,2,6208,0x101bd9600,8,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,6208,0x101bd9620,8,DatePrototypeToTemporalInstant
code-creation,Builtin,2,6208,0x101bd9640,1768,StringFixedArrayFromIterable
code-creation,Builtin,2,6208,0x101bd9d40,1768,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,6208,0x101bda440,292,AggregateErrorConstructor
code-creation,Builtin,2,6208,0x101bda580,844,ArrayPrototypeAt
code-creation,Builtin,2,6208,0x101bda8e0,572,ArrayPrototypeConcat
code-creation,Builtin,2,6208,0x101bdab20,4260,ArrayPrototypeCopyWithin
code-creation,Builtin,2,6208,0x101bdbbe0,292,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,6208,0x101bdbd20,600,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,6208,0x101bdbf80,4208,ArrayEveryLoopContinuation
code-creation,Builtin,2,6250,0x101bdd000,1712,ArrayEvery
code-creation,Builtin,2,6250,0x101bdd6c0,352,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,6250,0x101bdd840,892,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,6250,0x101bddbc0,4412,ArrayFilterLoopContinuation
code-creation,Builtin,2,6250,0x101bded00,3936,ArrayFilter
code-creation,Builtin,2,6250,0x101bdfc80,276,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,6250,0x101bdfda0,56,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,6250,0x101bdfde0,548,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,6250,0x101be0020,556,ArrayFindLoopContinuation
code-creation,Builtin,2,6250,0x101be0260,1692,ArrayPrototypeFind
code-creation,Builtin,2,6250,0x101be0900,276,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,6250,0x101be0a20,56,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,6250,0x101be0a60,548,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,6250,0x101be0ca0,548,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,6250,0x101be0ee0,1688,ArrayPrototypeFindIndex
code-creation,Builtin,2,6250,0x101be1580,504,ArrayFindLastLoopContinuation
code-creation,Builtin,2,6250,0x101be1780,1764,ArrayPrototypeFindLast
code-creation,Builtin,2,6250,0x101be1e80,496,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,6291,0x101be2080,1780,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,6291,0x101be2780,2960,FlattenIntoArrayWithoutMapFn
code-creation,Builtin,2,6291,0x101be3320,2928,FlattenIntoArrayWithMapFn
code-creation,Builtin,2,6291,0x101be3ea0,820,ArrayPrototypeFlat
code-creation,Builtin,2,6291,0x101be41e0,792,ArrayPrototypeFlatMap
code-creation,Builtin,2,6291,0x101be4500,292,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,6291,0x101be4640,292,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,6291,0x101be4780,4104,ArrayForEachLoopContinuation
code-creation,Builtin,2,6291,0x101be57a0,1544,ArrayForEach
code-creation,Builtin,2,6291,0x101be5dc0,6200,ArrayFromAsyncIterableOnFulfilled
code-creation,Builtin,2,6291,0x101be7600,6232,ArrayFromAsyncIterableOnRejected
code-creation,Builtin,2,6291,0x101be8e60,3200,ArrayFromAsyncArrayLikeOnFulfilled
code-creation,Builtin,2,6291,0x101be9b00,3236,ArrayFromAsyncArrayLikeOnRejected
code-creation,Builtin,2,6291,0x101bea7c0,14544,ArrayFromAsync
code-creation,Builtin,2,6291,0x101bee0a0,5296,ArrayFrom
code-creation,Builtin,2,6291,0x101bef560,184,ArrayIsArray
code-creation,Builtin,2,6291,0x101bef620,388,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,6291,0x101bef7c0,68,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,6333,0x101bef820,168,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,6333,0x101bef8e0,232,ConvertToLocaleString
code-creation,Builtin,2,6333,0x101bef9e0,860,JoinStackPush
code-creation,Builtin,2,6333,0x101befd40,316,JoinStackPop
code-creation,Builtin,2,6333,0x101befe80,9004,ArrayPrototypeJoin
code-creation,Builtin,2,6333,0x101bf21c0,5640,ArrayPrototypeToLocaleString
code-creation,Builtin,2,6333,0x101bf37e0,304,ArrayPrototypeToString
code-creation,Builtin,2,6333,0x101bf3920,8944,TypedArrayPrototypeJoin
code-creation,Builtin,2,6333,0x101bf5c20,5544,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,6333,0x101bf71e0,3832,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,6333,0x101bf80e0,276,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,6333,0x101bf8200,304,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,6333,0x101bf8340,512,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,6333,0x101bf8560,4084,ArrayMapLoopContinuation
code-creation,Builtin,2,6375,0x101bf9560,4168,ArrayMap
code-creation,Builtin,2,6375,0x101bfa5c0,1780,ArrayOf
code-creation,Builtin,2,6375,0x101bfacc0,416,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,6375,0x101bfae80,276,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,6375,0x101bfafa0,276,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,6375,0x101bfb0c0,4104,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,6375,0x101bfc0e0,2044,ArrayReduceRight
code-creation,Builtin,2,6375,0x101bfc8e0,252,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,6375,0x101bfc9e0,276,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,6375,0x101bfcb00,276,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,6375,0x101bfcc20,4184,ArrayReduceLoopContinuation
code-creation,Builtin,2,6375,0x101bfdc80,1736,ArrayReduce
code-creation,Builtin,2,6375,0x101bfe360,3300,ArrayPrototypeReverse
code-creation,Builtin,2,6375,0x101bff060,3468,ArrayPrototypeShift
code-creation,Builtin,2,6416,0x101bffe00,6020,ArrayPrototypeSlice
code-creation,Builtin,2,6416,0x101c015a0,292,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,6416,0x101c016e0,620,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,6416,0x101c01960,4240,ArraySomeLoopContinuation
code-creation,Builtin,2,6416,0x101c02a00,1716,ArraySome
code-creation,Builtin,2,6416,0x101c030c0,12048,ArrayPrototypeSplice
code-creation,Builtin,2,6416,0x101c05fe0,1972,GenericArrayToReversed
code-creation,Builtin,2,6416,0x101c067a0,2904,ArrayPrototypeToReversed
code-creation,Builtin,2,6416,0x101c07300,5788,ArrayTimSortIntoCopy
code-creation,Builtin,2,6416,0x101c089a0,1692,ArrayPrototypeToSorted
code-creation,Builtin,2,6416,0x101c09040,8040,ArrayPrototypeToSpliced
code-creation,Builtin,2,6416,0x101c0afc0,2812,ArrayPrototypeUnshift
code-creation,Builtin,2,6416,0x101c0bac0,1356,GenericArrayWith
code-creation,Builtin,2,6416,0x101c0c020,1124,ArrayPrototypeWith
code-creation,Builtin,2,6416,0x101c0c4a0,316,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,6458,0x101c0c5e0,436,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,6458,0x101c0c7a0,236,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,6458,0x101c0c8a0,236,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,6458,0x101c0c9a0,316,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,6458,0x101c0cae0,236,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,6458,0x101c0cbe0,136,ArrayBufferIsView
code-creation,Builtin,2,6458,0x101c0cc80,224,ToInteger
code-creation,Builtin,2,6458,0x101c0cd80,3944,FastCreateDataProperty
code-creation,Builtin,2,6458,0x101c0dd00,1240,BooleanConstructor
code-creation,Builtin,2,6458,0x101c0e1e0,196,BooleanPrototypeToString
code-creation,Builtin,2,6458,0x101c0e2c0,192,BooleanPrototypeValueOf
code-creation,Builtin,2,6458,0x101c0e3a0,1020,BigIntAddNoThrow
code-creation,Builtin,2,6458,0x101c0e7a0,1064,BigIntAdd
code-creation,Builtin,2,6458,0x101c0ebe0,1020,BigIntSubtractNoThrow
code-creation,Builtin,2,6458,0x101c0efe0,1064,BigIntSubtract
code-creation,Builtin,2,6500,0x101c0f420,304,BigIntMultiplyNoThrow
code-creation,Builtin,2,6500,0x101c0f560,524,BigIntMultiply
code-creation,Builtin,2,6500,0x101c0f780,496,BigIntDivideNoThrow
code-creation,Builtin,2,6500,0x101c0f980,620,BigIntDivide
code-creation,Builtin,2,6500,0x101c0fc00,400,BigIntModulusNoThrow
code-creation,Builtin,2,6500,0x101c0fda0,528,BigIntModulus
code-creation,Builtin,2,6500,0x101c0ffc0,852,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,6500,0x101c10320,1052,BigIntBitwiseAnd
code-creation,Builtin,2,6500,0x101c10740,844,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,6500,0x101c10aa0,1012,BigIntBitwiseOr
code-creation,Builtin,2,6500,0x101c10ea0,884,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,6500,0x101c11220,1076,BigIntBitwiseXor
code-creation,Builtin,2,6500,0x101c11660,1160,BigIntShiftLeftNoThrow
code-creation,Builtin,2,6500,0x101c11b00,1188,BigIntShiftLeft
code-creation,Builtin,2,6500,0x101c11fc0,1168,BigIntShiftRightNoThrow
code-creation,Builtin,2,6541,0x101c12460,1196,BigIntShiftRight
code-creation,Builtin,2,6541,0x101c12920,132,BigIntEqual
code-creation,Builtin,2,6541,0x101c129c0,184,BigIntLessThan
code-creation,Builtin,2,6541,0x101c12a80,188,BigIntGreaterThan
code-creation,Builtin,2,6541,0x101c12b40,188,BigIntLessThanOrEqual
code-creation,Builtin,2,6541,0x101c12c00,184,BigIntGreaterThanOrEqual
code-creation,Builtin,2,6541,0x101c12cc0,320,BigIntUnaryMinus
code-creation,Builtin,2,6541,0x101c12e20,2096,ToString
code-creation,Builtin,2,6541,0x101c13660,2176,ToStringConvertSymbol
code-creation,Builtin,2,6541,0x101c13f00,188,StringPrototypeToString
code-creation,Builtin,2,6541,0x101c13fc0,188,StringPrototypeValueOf
code-creation,Builtin,2,6541,0x101c14080,2168,StringToList
code-creation,Builtin,2,6541,0x101c14900,748,StringPrototypeCharAt
code-creation,Builtin,2,6541,0x101c14c00,636,StringPrototypeCharCodeAt
code-creation,Builtin,2,6541,0x101c14e80,1140,StringPrototypeCodePointAt
code-creation,Builtin,2,6541,0x101c15300,412,StringPrototypeConcat
code-creation,Builtin,2,6583,0x101c154a0,1288,StringConstructor
code-creation,Builtin,2,6583,0x101c159c0,900,StringCreateLazyDeoptContinuation
code-creation,Builtin,2,6583,0x101c15d60,2200,StringAddConvertLeft
code-creation,Builtin,2,6583,0x101c16600,2236,StringAddConvertRight
code-creation,Builtin,2,6583,0x101c16ec0,588,StringCharAt
code-creation,Builtin,2,6583,0x101c17120,16,FastNewClosureBaseline
code-creation,Builtin,2,6583,0x101c17140,320,FastNewFunctionContextEval
code-creation,Builtin,2,6583,0x101c172a0,320,FastNewFunctionContextFunction
code-creation,Builtin,2,6583,0x101c17400,304,CreateRegExpLiteral
code-creation,Builtin,2,6583,0x101c17540,1432,CreateShallowArrayLiteral
code-creation,Builtin,2,6583,0x101c17ae0,500,CreateEmptyArrayLiteral
code-creation,Builtin,2,6583,0x101c17ce0,2312,CreateShallowObjectLiteral
code-creation,Builtin,2,6583,0x101c18600,536,ObjectConstructor
code-creation,Builtin,2,6583,0x101c18820,280,CreateEmptyLiteralObject
code-creation,Builtin,2,6625,0x101c18940,604,NumberConstructor
code-creation,Builtin,2,6625,0x101c18ba0,96,GenericLazyDeoptContinuation
code-creation,Builtin,2,6625,0x101c18c20,84,StringToNumber
code-creation,Builtin,2,6625,0x101c18c80,256,NonNumberToNumber
code-creation,Builtin,2,6625,0x101c18da0,304,NonNumberToNumeric
code-creation,Builtin,2,6625,0x101c18ee0,60,ToNumeric
code-creation,Builtin,2,6625,0x101c18f20,1440,NumberToString
code-creation,Builtin,2,6625,0x101c194e0,208,ToBoolean
code-creation,Builtin,2,6625,0x101c195c0,204,ToBooleanForBaselineJump
code-creation,Builtin,2,6625,0x101c196a0,520,ToLength
code-creation,Builtin,2,6625,0x101c198c0,1336,ToName
code-creation,Builtin,2,6625,0x101c19e00,1040,ToObject
code-creation,Builtin,2,6625,0x101c1a220,460,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,6625,0x101c1a400,460,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,6625,0x101c1a5e0,824,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,6625,0x101c1a920,36,OrdinaryToPrimitive_Number
code-creation,Builtin,2,6666,0x101c1a960,416,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,6666,0x101c1ab20,416,OrdinaryToPrimitive_String
code-creation,Builtin,2,6666,0x101c1ace0,392,FastConsoleAssert
code-creation,Builtin,2,6666,0x101c1ae80,224,DataViewPrototypeGetBuffer
code-creation,Builtin,2,6666,0x101c1af80,696,DataViewPrototypeGetByteLength
code-creation,Builtin,2,6666,0x101c1b240,428,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,6666,0x101c1b400,704,DataViewPrototypeGetUint8
code-creation,Builtin,2,6666,0x101c1b6e0,704,DataViewPrototypeGetInt8
code-creation,Builtin,2,6666,0x101c1b9c0,956,DataViewPrototypeGetUint16
code-creation,Builtin,2,6666,0x101c1bd80,948,DataViewPrototypeGetInt16
code-creation,Builtin,2,6666,0x101c1c140,1060,DataViewPrototypeGetUint32
code-creation,Builtin,2,6666,0x101c1c580,976,DataViewPrototypeGetInt32
code-creation,Builtin,2,6666,0x101c1c960,1160,DataViewPrototypeGetFloat16
code-creation,Builtin,2,6666,0x101c1ce00,1084,DataViewPrototypeGetFloat32
code-creation,Builtin,2,6708,0x101c1d240,1148,DataViewPrototypeGetFloat64
code-creation,Builtin,2,6708,0x101c1d6c0,1212,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,6708,0x101c1db80,1236,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,6708,0x101c1e060,1120,DataViewPrototypeSetUint8
code-creation,Builtin,2,6708,0x101c1e4e0,1120,DataViewPrototypeSetInt8
code-creation,Builtin,2,6708,0x101c1e960,1340,DataViewPrototypeSetUint16
code-creation,Builtin,2,6708,0x101c1eea0,1340,DataViewPrototypeSetInt16
code-creation,Builtin,2,6708,0x101c1f3e0,1380,DataViewPrototypeSetUint32
code-creation,Builtin,2,6708,0x101c1f960,1380,DataViewPrototypeSetInt32
code-creation,Builtin,2,6708,0x101c1fee0,1432,DataViewPrototypeSetFloat16
code-creation,Builtin,2,6708,0x101c20480,1384,DataViewPrototypeSetFloat32
code-creation,Builtin,2,6708,0x101c20a00,1460,DataViewPrototypeSetFloat64
code-creation,Builtin,2,6708,0x101c20fc0,1304,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,6708,0x101c214e0,1304,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,6708,0x101c21a00,1304,FinalizationRegistryConstructor
code-creation,Builtin,2,6750,0x101c21f20,1096,FinalizationRegistryRegister
code-creation,Builtin,2,6750,0x101c22380,364,FunctionPrototypeHasInstance
code-creation,Builtin,2,6750,0x101c22500,1048,FastFunctionPrototypeBind
code-creation,Builtin,2,6750,0x101c22920,156,IncBlockCounter
code-creation,Builtin,2,6750,0x101c229c0,308,GetTemplateObject
code-creation,Builtin,2,6750,0x101c22b00,144,ForInNext
code-creation,Builtin,2,6750,0x101c22ba0,188,GetImportMetaObjectBaseline
code-creation,Builtin,2,6750,0x101c22c60,156,GetIteratorWithFeedback
code-creation,Builtin,2,6750,0x101c22d00,116,GetIteratorBaseline
code-creation,Builtin,2,6750,0x101c22d80,320,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,6750,0x101c22ee0,1128,CallIteratorWithFeedback
code-creation,Builtin,2,6750,0x101c23360,1028,IteratorConstructor
code-creation,Builtin,2,6750,0x101c23780,84,IteratorPrototypeGetToStringTag
code-creation,Builtin,2,6750,0x101c237e0,384,IteratorPrototypeSetToStringTag
code-creation,Builtin,2,6750,0x101c23980,124,IteratorPrototypeGetConstructor
code-creation,Builtin,2,6791,0x101c23a00,384,IteratorPrototypeSetConstructor
code-creation,Builtin,2,6791,0x101c23ba0,232,IteratorPrototypeDispose
code-creation,Builtin,2,6791,0x101c23ca0,84,AsyncIteratorPrototypeAsyncDisposeResolveClosure
code-creation,Builtin,2,6791,0x101c23d00,1948,AsyncIteratorPrototypeAsyncDispose
code-creation,Builtin,2,6791,0x101c244a0,912,IteratorFrom
code-creation,Builtin,2,6791,0x101c24840,188,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,6791,0x101c24900,448,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,6791,0x101c24ae0,468,IteratorHelperPrototypeNext
code-creation,Builtin,2,6791,0x101c24cc0,1444,IteratorHelperPrototypeReturn
code-creation,Builtin,2,6791,0x101c25280,524,IteratorPrototypeMap
code-creation,Builtin,2,6791,0x101c254a0,1420,IteratorMapHelperNext
code-creation,Builtin,2,6791,0x101c25a40,524,IteratorPrototypeFilter
code-creation,Builtin,2,6791,0x101c25c60,1580,IteratorFilterHelperNext
code-creation,Builtin,2,6791,0x101c262a0,788,IteratorPrototypeTake
code-creation,Builtin,2,6791,0x101c265c0,1620,IteratorTakeHelperNext
code-creation,Builtin,2,6791,0x101c26c20,788,IteratorPrototypeDrop
code-creation,Builtin,2,6833,0x101c26f40,1872,IteratorDropHelperNext
code-creation,Builtin,2,6833,0x101c276a0,548,IteratorPrototypeFlatMap
code-creation,Builtin,2,6833,0x101c278e0,2636,IteratorFlatMapHelperNext
code-creation,Builtin,2,6833,0x101c28340,2196,IteratorPrototypeReduce
code-creation,Builtin,2,6833,0x101c28be0,1736,IteratorPrototypeToArray
code-creation,Builtin,2,6833,0x101c292c0,1312,IteratorPrototypeForEach
code-creation,Builtin,2,6833,0x101c29800,1616,IteratorPrototypeSome
code-creation,Builtin,2,6833,0x101c29e60,1596,IteratorPrototypeEvery
code-creation,Builtin,2,6833,0x101c2a4a0,1624,IteratorPrototypeFind
code-creation,Builtin,2,6833,0x101c2ab00,7860,MapGroupBy
code-creation,Builtin,2,6833,0x101c2c9c0,276,MathAbs
code-creation,Builtin,2,6833,0x101c2cae0,256,MathCeil
code-creation,Builtin,2,6833,0x101c2cc00,256,MathFloor
code-creation,Builtin,2,6875,0x101c2cd20,280,MathRound
code-creation,Builtin,2,6875,0x101c2ce40,256,MathTrunc
code-creation,Builtin,2,6875,0x101c2cf60,352,MathPow
code-creation,Builtin,2,6875,0x101c2d0e0,408,MathMax
code-creation,Builtin,2,6875,0x101c2d280,408,MathMin
code-creation,Builtin,2,6875,0x101c2d420,280,MathAcos
code-creation,Builtin,2,6875,0x101c2d540,280,MathAcosh
code-creation,Builtin,2,6875,0x101c2d660,280,MathAsin
code-creation,Builtin,2,6875,0x101c2d780,280,MathAsinh
code-creation,Builtin,2,6875,0x101c2d8a0,280,MathAtan
code-creation,Builtin,2,6875,0x101c2d9c0,356,MathAtan2
code-creation,Builtin,2,6875,0x101c2db40,280,MathAtanh
code-creation,Builtin,2,6875,0x101c2dc60,280,MathCbrt
code-creation,Builtin,2,6875,0x101c2dd80,164,MathClz32
code-creation,Builtin,2,6875,0x101c2de40,280,MathCos
code-creation,Builtin,2,6875,0x101c2df60,280,MathCosh
code-creation,Builtin,2,6875,0x101c2e080,280,MathExp
code-creation,Builtin,2,6875,0x101c2e1a0,280,MathExpm1
code-creation,Builtin,2,6875,0x101c2e2c0,264,MathFround
code-creation,Builtin,2,6916,0x101c2e3e0,508,MathF16round
code-creation,Builtin,2,6916,0x101c2e5e0,236,MathImul
code-creation,Builtin,2,6916,0x101c2e6e0,280,MathLog
code-creation,Builtin,2,6916,0x101c2e800,280,MathLog1p
code-creation,Builtin,2,6916,0x101c2e920,280,MathLog10
code-creation,Builtin,2,6916,0x101c2ea40,280,MathLog2
code-creation,Builtin,2,6916,0x101c2eb60,280,MathSin
code-creation,Builtin,2,6916,0x101c2ec80,180,MathSign
code-creation,Builtin,2,6916,0x101c2ed40,280,MathSinh
code-creation,Builtin,2,6916,0x101c2ee60,260,MathSqrt
code-creation,Builtin,2,6916,0x101c2ef80,280,MathTan
code-creation,Builtin,2,6916,0x101c2f0a0,280,MathTanh
code-creation,Builtin,2,6916,0x101c2f1c0,2188,MathHypot
code-creation,Builtin,2,6916,0x101c2fa60,336,MathRandom
code-creation,Builtin,2,6916,0x101c2fbc0,2508,NumberPrototypeToString
code-creation,Builtin,2,6916,0x101c305a0,156,NumberIsFinite
code-creation,Builtin,2,6916,0x101c30640,144,NumberIsInteger
code-creation,Builtin,2,6916,0x101c306e0,152,NumberIsNaN
code-creation,Builtin,2,6958,0x101c30780,176,NumberIsSafeInteger
code-creation,Builtin,2,6958,0x101c30840,200,NumberPrototypeValueOf
code-creation,Builtin,2,6958,0x101c30920,260,NumberParseFloat
code-creation,Builtin,2,6958,0x101c30a40,204,ParseInt
code-creation,Builtin,2,6958,0x101c30b20,120,NumberParseInt
code-creation,Builtin,2,6958,0x101c30ba0,1032,Add
code-creation,Builtin,2,6958,0x101c30fc0,512,Subtract
code-creation,Builtin,2,6958,0x101c311e0,696,Multiply
code-creation,Builtin,2,6958,0x101c314a0,568,Divide
code-creation,Builtin,2,6958,0x101c316e0,704,Modulus
code-creation,Builtin,2,6958,0x101c319c0,488,Exponentiate
code-creation,Builtin,2,6958,0x101c31bc0,316,Negate
code-creation,Builtin,2,6958,0x101c31d00,144,BitwiseNot
code-creation,Builtin,2,6958,0x101c31da0,120,Decrement
code-creation,Builtin,2,6958,0x101c31e20,120,Increment
code-creation,Builtin,2,6958,0x101c31ea0,484,ShiftLeft
code-creation,Builtin,2,6958,0x101c320a0,484,ShiftRight
code-creation,Builtin,2,6958,0x101c322a0,532,ShiftRightLogical
code-creation,Builtin,2,7000,0x101c324c0,272,BitwiseAnd
code-creation,Builtin,2,7000,0x101c325e0,272,BitwiseOr
code-creation,Builtin,2,7000,0x101c32700,272,BitwiseXor
code-creation,Builtin,2,7000,0x101c32820,996,LessThan
code-creation,Builtin,2,7000,0x101c32c20,996,LessThanOrEqual
code-creation,Builtin,2,7000,0x101c33020,996,GreaterThan
code-creation,Builtin,2,7000,0x101c33420,996,GreaterThanOrEqual
code-creation,Builtin,2,7000,0x101c33820,1136,Equal
code-creation,Builtin,2,7000,0x101c33ca0,520,StrictEqual
code-creation,Builtin,2,7000,0x101c33ec0,3800,ObjectFromEntries
code-creation,Builtin,2,7000,0x101c34da0,4076,GroupByGeneric
code-creation,Builtin,2,7000,0x101c35da0,8284,ObjectGroupBy
code-creation,Builtin,2,7000,0x101c37e00,1080,CreateObjectWithoutProperties
code-creation,Builtin,2,7000,0x101c38240,176,ObjectIsExtensible
code-creation,Builtin,2,7000,0x101c38300,180,ObjectPreventExtensions
code-creation,Builtin,2,7000,0x101c383c0,184,ObjectGetPrototypeOf
code-creation,Builtin,2,7000,0x101c38480,308,ObjectSetPrototypeOf
code-creation,Builtin,2,7000,0x101c385c0,100,ObjectPrototypeToString
code-creation,Builtin,2,7041,0x101c38640,116,ObjectPrototypeValueOf
code-creation,Builtin,2,7041,0x101c386c0,212,ObjectPrototypeToLocaleString
code-creation,Builtin,2,7041,0x101c387a0,824,FulfillPromise
code-creation,Builtin,2,7041,0x101c38ae0,1012,RejectPromise
code-creation,Builtin,2,7041,0x101c38ee0,1872,NewPromiseCapability
code-creation,Builtin,2,7041,0x101c39640,224,PromiseCapabilityDefaultReject
code-creation,Builtin,2,7041,0x101c39740,200,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,7041,0x101c39820,1088,PerformPromiseThenFunction
code-creation,Builtin,2,7041,0x101c39c80,1104,PerformPromiseThen
code-creation,Builtin,2,7041,0x101c3a0e0,776,PromiseReject
code-creation,Builtin,2,7041,0x101c3a400,308,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,7041,0x101c3a540,152,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,7041,0x101c3a5e0,3836,PromiseAll
code-creation,Builtin,2,7041,0x101c3b4e0,3868,PromiseAllSettled
code-creation,Builtin,2,7041,0x101c3c400,1164,PromiseAllResolveElementClosure
code-creation,Builtin,2,7041,0x101c3c8a0,1544,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,7041,0x101c3cec0,1544,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,7083,0x101c3d4e0,1232,PromiseAnyRejectElementClosure
code-creation,Builtin,2,7083,0x101c3d9c0,2532,PromiseAny
code-creation,Builtin,2,7083,0x101c3e3c0,2632,PromiseConstructor
code-creation,Builtin,2,7083,0x101c3ee20,352,PromisePrototypeCatch
code-creation,Builtin,2,7083,0x101c3efa0,112,PromiseValueThunkFinally
code-creation,Builtin,2,7083,0x101c3f020,116,PromiseThrowerFinally
code-creation,Builtin,2,7083,0x101c3f0a0,724,PromiseCatchFinally
code-creation,Builtin,2,7083,0x101c3f380,724,PromiseThenFinally
code-creation,Builtin,2,7083,0x101c3f660,1172,PromisePrototypeFinally
code-creation,Builtin,2,7083,0x101c3fb00,768,PromiseResolveThenableJob
code-creation,Builtin,2,7083,0x101c3fe20,84,GetContinuationPreservedEmbedderData
code-creation,Builtin,2,7083,0x101c3fe80,112,SetContinuationPreservedEmbedderData
code-creation,Builtin,2,7083,0x101c3ff00,1700,PromiseRace
code-creation,Builtin,2,7083,0x101c405c0,332,PromiseFulfillReactionJob
code-creation,Builtin,2,7083,0x101c40720,432,PromiseRejectReactionJob
code-creation,Builtin,2,7083,0x101c408e0,176,PromiseResolveTrampoline
code-creation,Builtin,2,7125,0x101c409a0,1076,PromiseResolve
code-creation,Builtin,2,7125,0x101c40de0,816,ResolvePromise
code-creation,Builtin,2,7125,0x101c41120,2008,PromisePrototypeThen
code-creation,Builtin,2,7125,0x101c41900,1204,PromiseTry
code-creation,Builtin,2,7125,0x101c41dc0,372,PromiseWithResolvers
code-creation,Builtin,2,7125,0x101c41f40,648,ProxyConstructor
code-creation,Builtin,2,7125,0x101c421e0,2536,ProxyDeleteProperty
code-creation,Builtin,2,7125,0x101c42be0,2836,ProxyGetProperty
code-creation,Builtin,2,7125,0x101c43700,1076,ProxyGetPrototypeOf
code-creation,Builtin,2,7125,0x101c43b40,2472,ProxyHasProperty
code-creation,Builtin,2,7125,0x101c44500,872,ProxyIsExtensible
code-creation,Builtin,2,7125,0x101c44880,896,ProxyPreventExtensions
code-creation,Builtin,2,7125,0x101c44c20,740,ProxyRevocable
code-creation,Builtin,2,7125,0x101c44f20,148,ProxyRevoke
code-creation,Builtin,2,7125,0x101c44fc0,3360,ProxySetProperty
code-creation,Builtin,2,7125,0x101c45d00,1364,ProxySetPrototypeOf
code-creation,Builtin,2,7125,0x101c46260,236,ReflectIsExtensible
code-creation,Builtin,2,7166,0x101c46360,240,ReflectPreventExtensions
code-creation,Builtin,2,7166,0x101c46460,212,ReflectGetPrototypeOf
code-creation,Builtin,2,7166,0x101c46540,360,ReflectSetPrototypeOf
code-creation,Builtin,2,7166,0x101c466c0,356,ReflectGet
code-creation,Builtin,2,7166,0x101c46840,180,ReflectDeleteProperty
code-creation,Builtin,2,7166,0x101c46900,176,ReflectHas
code-creation,Builtin,2,7166,0x101c469c0,4460,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,7166,0x101c47b40,7388,RegExpPrototypeExecSlow
code-creation,Builtin,2,7166,0x101c49820,7604,RegExpPrototypeExec
code-creation,Builtin,2,7166,0x101c4b5e0,2648,RegExpPrototypeMatchAll
code-creation,Builtin,2,7166,0x101c4c040,11348,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,7166,0x101c4eca0,14144,RegExpMatchFast
code-creation,Builtin,2,7166,0x101c52400,3332,RegExpPrototypeMatch
code-creation,Builtin,2,7166,0x101c53120,8836,RegExpReplace
code-creation,Builtin,2,7166,0x101c553c0,588,RegExpPrototypeReplace
code-creation,Builtin,2,7166,0x101c55620,3880,RegExpSearchFast
code-creation,Builtin,2,7166,0x101c56560,1592,RegExpPrototypeSearch
code-creation,Builtin,2,7208,0x101c56ba0,228,RegExpPrototypeSourceGetter
code-creation,Builtin,2,7208,0x101c56ca0,7496,RegExpSplit
code-creation,Builtin,2,7208,0x101c58a00,776,RegExpPrototypeSplit
code-creation,Builtin,2,7208,0x101c58d20,4516,RegExpPrototypeTest
code-creation,Builtin,2,7208,0x101c59ee0,3964,RegExpPrototypeTestFast
code-creation,Builtin,2,7208,0x101c5ae60,248,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,7208,0x101c5af60,256,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,7208,0x101c5b080,256,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,7208,0x101c5b1a0,256,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,7208,0x101c5b2c0,256,RegExpPrototypeLinearGetter
code-creation,Builtin,2,7208,0x101c5b3e0,256,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,7208,0x101c5b500,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,7208,0x101c5b620,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,7208,0x101c5b740,256,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,7208,0x101c5b860,2764,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,7208,0x101c5c340,11380,SetPrototypeDifference
code-creation,Builtin,2,7250,0x101c5efc0,12668,SetPrototypeIntersection
code-creation,Builtin,2,7250,0x101c62140,3152,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,7250,0x101c62da0,1772,SetPrototypeIsSubsetOf
code-creation,Builtin,2,7250,0x101c634a0,2360,SetPrototypeIsSupersetOf
code-creation,Builtin,2,7250,0x101c63de0,11500,SetPrototypeSymmetricDifference
code-creation,Builtin,2,7250,0x101c66ae0,8684,SetPrototypeUnion
code-creation,Builtin,2,7250,0x101c68ce0,1076,StringPrototypeAt
code-creation,Builtin,2,7250,0x101c69120,3248,StringPrototypeEndsWith
code-creation,Builtin,2,7250,0x101c69de0,460,CreateHTML
code-creation,Builtin,2,7250,0x101c69fc0,244,StringPrototypeAnchor
code-creation,Builtin,2,7250,0x101c6a0c0,212,StringPrototypeBig
code-creation,Builtin,2,7250,0x101c6a1a0,212,StringPrototypeBlink
code-creation,Builtin,2,7250,0x101c6a280,212,StringPrototypeBold
code-creation,Builtin,2,7250,0x101c6a360,244,StringPrototypeFontcolor
code-creation,Builtin,2,7250,0x101c6a460,244,StringPrototypeFontsize
code-creation,Builtin,2,7250,0x101c6a560,212,StringPrototypeFixed
code-creation,Builtin,2,7250,0x101c6a640,212,StringPrototypeItalics
code-creation,Builtin,2,7291,0x101c6a720,244,StringPrototypeLink
code-creation,Builtin,2,7291,0x101c6a820,212,StringPrototypeSmall
code-creation,Builtin,2,7291,0x101c6a900,212,StringPrototypeStrike
code-creation,Builtin,2,7291,0x101c6a9e0,212,StringPrototypeSub
code-creation,Builtin,2,7291,0x101c6aac0,212,StringPrototypeSup
code-creation,Builtin,2,7291,0x101c6aba0,936,StringPrototypeIncludes
code-creation,Builtin,2,7291,0x101c6af60,600,StringPrototypeIndexOf
code-creation,Builtin,2,7291,0x101c6b1c0,684,StringPrototypeIsWellFormed
code-creation,Builtin,2,7291,0x101c6b480,344,StringPrototypeIterator
code-creation,Builtin,2,7291,0x101c6b5e0,1584,StringIteratorPrototypeNext
code-creation,Builtin,2,7291,0x101c6bc20,1576,StringPrototypeMatch
code-creation,Builtin,2,7291,0x101c6c260,1576,StringPrototypeSearch
code-creation,Builtin,2,7291,0x101c6c8a0,808,StringPrototypePadStart
code-creation,Builtin,2,7291,0x101c6cbe0,812,StringPrototypePadEnd
code-creation,Builtin,2,7291,0x101c6cf20,132,StringRepeat
code-creation,Builtin,2,7291,0x101c6cfc0,416,StringPrototypeRepeat
code-creation,Builtin,2,7291,0x101c6d180,12680,StringPrototypeReplaceAll
code-creation,Builtin,2,7333,0x101c70320,3892,StringPrototypeSlice
code-creation,Builtin,2,7333,0x101c71260,3324,StringPrototypeStartsWith
code-creation,Builtin,2,7333,0x101c71f60,3888,StringPrototypeSubstr
code-creation,Builtin,2,7333,0x101c72ea0,3800,StringPrototypeSubstring
code-creation,Builtin,2,7333,0x101c73d80,1008,StringPrototypeToWellFormed
code-creation,Builtin,2,7333,0x101c74180,7868,StringPrototypeTrim
code-creation,Builtin,2,7333,0x101c76040,7460,StringPrototypeTrimStart
code-creation,Builtin,2,7333,0x101c77d80,7140,StringPrototypeTrimEnd
code-creation,Builtin,2,7333,0x101c79980,332,SuppressedErrorConstructor
code-creation,Builtin,2,7333,0x101c79ae0,196,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,7333,0x101c79bc0,204,SymbolPrototypeToPrimitive
code-creation,Builtin,2,7333,0x101c79ca0,216,SymbolPrototypeToString
code-creation,Builtin,2,7333,0x101c79d80,192,SymbolPrototypeValueOf
code-creation,Builtin,2,7333,0x101c79e60,1048,TypedArrayPrototypeAt
code-creation,Builtin,2,7333,0x101c7a280,10628,CreateTypedArray
code-creation,Builtin,2,7333,0x101c7cc20,1788,TypedArrayPrototypeEvery
code-creation,Builtin,2,7333,0x101c7d320,424,TypedArrayPrototypeEntries
code-creation,Builtin,2,7375,0x101c7d4e0,4444,TypedArrayPrototypeFilter
code-creation,Builtin,2,7375,0x101c7e640,1784,TypedArrayPrototypeFind
code-creation,Builtin,2,7375,0x101c7ed40,1788,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,7375,0x101c7f440,1768,TypedArrayPrototypeFindLast
code-creation,Builtin,2,7375,0x101c7fb40,1772,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,7375,0x101c80240,1644,TypedArrayPrototypeForEach
code-creation,Builtin,2,7375,0x101c808c0,3556,TypedArrayFrom
code-creation,Builtin,2,7375,0x101c816c0,420,TypedArrayPrototypeKeys
code-creation,Builtin,2,7375,0x101c81880,1272,TypedArrayOf
code-creation,Builtin,2,7375,0x101c81d80,1764,TypedArrayPrototypeReduce
code-creation,Builtin,2,7375,0x101c82480,1748,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,7375,0x101c82b60,3040,TypedArrayPrototypeSet
code-creation,Builtin,2,7375,0x101c83760,3912,TypedArrayPrototypeSlice
code-creation,Builtin,2,7375,0x101c846c0,1788,TypedArrayPrototypeSome
code-creation,Builtin,2,7375,0x101c84dc0,1040,TypedArrayMergeSort
code-creation,Builtin,2,7375,0x101c851e0,2248,TypedArrayPrototypeSort
code-creation,Builtin,2,7416,0x101c85ac0,2928,TypedArrayPrototypeSubArray
code-creation,Builtin,2,7416,0x101c86640,1700,TypedArrayPrototypeToReversed
code-creation,Builtin,2,7416,0x101c86d00,3180,TypedArrayPrototypeToSorted
code-creation,Builtin,2,7416,0x101c87980,424,TypedArrayPrototypeValues
code-creation,Builtin,2,7416,0x101c87b40,2956,TypedArrayPrototypeWith
code-creation,Builtin,2,7416,0x101c886e0,1588,WeakRefConstructor
code-creation,Builtin,2,7416,0x101c88d20,220,WeakRefDeref
code-creation,Builtin,2,7416,0x101c88e00,740,NewSloppyArgumentsElements
code-creation,Builtin,2,7416,0x101c89100,348,NewStrictArgumentsElements
code-creation,Builtin,2,7416,0x101c89260,384,NewRestArgumentsElements
code-creation,Builtin,2,7416,0x101c89400,1596,FastNewSloppyArguments
code-creation,Builtin,2,7416,0x101c89a40,568,FastNewStrictArguments
code-creation,Builtin,2,7416,0x101c89c80,744,FastNewRestArguments
code-creation,Builtin,2,7416,0x101c89f80,492,AllocateIfMutableHeapNumberScriptContextSlot
code-creation,Builtin,2,7416,0x101c8a180,3148,StoreCurrentScriptContextSlotBaseline
code-creation,Builtin,2,7416,0x101c8ade0,3216,StoreScriptContextSlotBaseline
code-creation,Builtin,2,7458,0x101c8ba80,688,StringSlowFlatten
code-creation,Builtin,2,7458,0x101c8bd40,2640,StringIndexOf
code-creation,Builtin,2,7458,0x101c8c7a0,1324,TestTurbofanType
code-creation,Builtin,2,7458,0x101c8cce0,212,CheckTurbofanType
code-creation,Builtin,2,7458,0x101c8cdc0,668,CheckTurboshaftWord32Type
code-creation,Builtin,2,7458,0x101c8d060,1088,CheckTurboshaftWord64Type
code-creation,Builtin,2,7458,0x101c8d4c0,944,CheckTurboshaftFloat32Type
code-creation,Builtin,2,7458,0x101c8d880,940,CheckTurboshaftFloat64Type
code-creation,Builtin,2,7458,0x101c8dc40,196,DebugPrintWordPtr
code-creation,Builtin,2,7458,0x101c8dd20,192,DebugPrintFloat64
code-creation,Builtin,2,7458,0x101c8de00,8,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,7458,0x101c8de20,16,TestHelperPlus1
code-creation,Builtin,2,7458,0x101c8de40,16,TestHelperPlus2
code-creation,Builtin,2,7458,0x101c8de60,112,NewSmiBox
code-creation,Builtin,2,7458,0x101c8dee0,20,ReturnTwoValues
code-creation,Builtin,2,7458,0x101c8df00,52,ThrowAsBuiltin
code-creation,Builtin,2,7458,0x101c8df40,132,TestCallNever
code-creation,Builtin,2,7458,0x101c8dfe0,64,TestIncrementArraySpeciesModified
code-creation,Builtin,2,7500,0x101c8e040,48,Load_FastSmiElements_0
code-creation,Builtin,2,7500,0x101c8e080,48,Load_FastObjectElements_0
code-creation,Builtin,2,7500,0x101c8e0c0,168,Load_FastDoubleElements_0
code-creation,Builtin,2,7500,0x101c8e180,52,Store_FastSmiElements_0
code-creation,Builtin,2,7500,0x101c8e1c0,112,Store_FastObjectElements_0
code-creation,Builtin,2,7500,0x101c8e240,88,Store_FastDoubleElements_0
code-creation,Builtin,2,7500,0x101c8e2a0,56,Delete_FastSmiElements_0
code-creation,Builtin,2,7500,0x101c8e2e0,56,Delete_FastObjectElements_0
code-creation,Builtin,2,7500,0x101c8e320,56,Delete_FastDoubleElements_0
code-creation,Builtin,2,7500,0x101c8e360,180,SortCompareDefault
code-creation,Builtin,2,7500,0x101c8e420,128,SortCompareUserFn
code-creation,Builtin,2,7500,0x101c8e4c0,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,7500,0x101c8e4e0,352,Copy
code-creation,Builtin,2,7500,0x101c8e660,5636,MergeAt
code-creation,Builtin,2,7541,0x101c8fc80,864,GallopLeft
code-creation,Builtin,2,7541,0x101c90000,880,GallopRight
code-creation,Builtin,2,7541,0x101c90380,4528,ArrayTimSort
code-creation,Builtin,2,7541,0x101c91540,1656,ArrayPrototypeSort
code-creation,Builtin,2,7541,0x101c91bc0,4240,StringFastLocaleCompare
code-creation,Builtin,2,7541,0x101c92c60,76,JSToJSWrapperInvalidSig
code-creation,Builtin,2,7541,0x101c92cc0,2824,JSToJSWrapper
code-creation,Builtin,2,7541,0x101c937e0,3068,JSToWasmWrapper
code-creation,Builtin,2,7541,0x101c943e0,3108,WasmPromising
code-creation,Builtin,2,7541,0x101c95020,3116,WasmStressSwitch
code-creation,Builtin,2,7541,0x101c95c60,2836,JSToWasmHandleReturns
code-creation,Builtin,2,7541,0x101c96780,108,WasmInt32ToHeapNumber
code-creation,Builtin,2,7541,0x101c96800,76,WasmFuncRefToJS
code-creation,Builtin,2,7541,0x101c96860,228,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,7583,0x101c96960,240,WasmTaggedToFloat64
code-creation,Builtin,2,7583,0x101c96a60,104,WasmTaggedToFloat32
code-creation,Builtin,2,7583,0x101c96ae0,108,WasmMemoryGrow
code-creation,Builtin,2,7583,0x101c96b60,136,WasmTableInit
code-creation,Builtin,2,7583,0x101c96c00,124,WasmTableCopy
code-creation,Builtin,2,7583,0x101c96c80,96,WasmTableFill
code-creation,Builtin,2,7583,0x101c96d00,80,WasmTableGrow
code-creation,Builtin,2,7583,0x101c96d60,112,WasmTableGet
code-creation,Builtin,2,7583,0x101c96de0,180,WasmTableSet
code-creation,Builtin,2,7583,0x101c96ea0,196,WasmTableGetFuncRef
code-creation,Builtin,2,7583,0x101c96f80,64,WasmFunctionTableGet
code-creation,Builtin,2,7583,0x101c96fe0,124,WasmTableSetFuncRef
code-creation,Builtin,2,7583,0x101c97060,108,WasmRefFunc
code-creation,Builtin,2,7583,0x101c970e0,56,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,7583,0x101c97120,208,WasmAllocateZeroedFixedArray
code-creation,Builtin,2,7625,0x101c97200,200,WasmAllocateFixedArray
code-creation,Builtin,2,7625,0x101c972e0,40,WasmLiftoffDeoptFinish
code-creation,Builtin,2,7625,0x101c97320,40,WasmThrow
code-creation,Builtin,2,7625,0x101c97360,40,WasmRethrow
code-creation,Builtin,2,7625,0x101c973a0,56,WasmThrowRef
code-creation,Builtin,2,7625,0x101c973e0,48,WasmRethrowExplicitContext
code-creation,Builtin,2,7625,0x101c97420,40,WasmTriggerTierUp
code-creation,Builtin,2,7625,0x101c97460,24,WasmGrowableStackGuard
code-creation,Builtin,2,7625,0x101c97480,44,WasmStackGuard
code-creation,Builtin,2,7625,0x101c974c0,28,WasmStackOverflow
code-creation,Builtin,2,7625,0x101c974e0,40,WasmTraceMemory
code-creation,Builtin,2,7625,0x101c97520,28,WasmTraceEnter
code-creation,Builtin,2,7625,0x101c97540,40,WasmTraceExit
code-creation,Builtin,2,7625,0x101c97580,700,WasmAllocateJSArray
code-creation,Builtin,2,7625,0x101c97840,132,WasmAllocateStructWithRtt
code-creation,Builtin,2,7625,0x101c978e0,76,WasmAllocateDescriptorStruct
code-creation,Builtin,2,7666,0x101c97940,172,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,7666,0x101c97a00,144,WasmArrayNewSegment
code-creation,Builtin,2,7666,0x101c97aa0,180,WasmArrayInitSegment
code-creation,Builtin,2,7666,0x101c97b60,164,WasmArrayCopy
code-creation,Builtin,2,7666,0x101c97c20,124,WasmUint32ToNumber
code-creation,Builtin,2,7666,0x101c97ca0,128,UintPtr53ToNumber
code-creation,Builtin,2,7666,0x101c97d40,272,WasmI32AtomicWait
code-creation,Builtin,2,7666,0x101c97e60,268,WasmI64AtomicWait
code-creation,Builtin,2,7666,0x101c97f80,1188,CallRefIC
code-creation,Builtin,2,7666,0x101c98440,1184,CallIndirectIC
code-creation,Builtin,2,7666,0x101c98900,1616,WasmGetOwnProperty
code-creation,Builtin,2,7666,0x101c98f60,96,WasmTrap
code-creation,Builtin,2,7666,0x101c98fe0,12,ThrowWasmTrapUnreachable
code-creation,Builtin,2,7666,0x101c99000,84,WasmTrapHandlerThrowTrap
code-creation,Builtin,2,7666,0x101c99060,20,WasmPropagateException
code-creation,Builtin,2,7666,0x101c99080,12,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,7708,0x101c990a0,12,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,7708,0x101c990c0,12,ThrowWasmTrapDivByZero
code-creation,Builtin,2,7708,0x101c990e0,12,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,7708,0x101c99100,12,ThrowWasmTrapRemByZero
code-creation,Builtin,2,7708,0x101c99120,12,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,7708,0x101c99140,12,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,7708,0x101c99160,12,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,7708,0x101c99180,12,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,7708,0x101c991a0,12,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,7708,0x101c991c0,12,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,7708,0x101c991e0,12,ThrowWasmTrapNullDereference
code-creation,Builtin,2,7708,0x101c99200,12,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,7708,0x101c99220,12,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,7750,0x101c99240,12,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,7750,0x101c99260,12,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,7750,0x101c99280,376,WasmStringNewWtf8
code-creation,Builtin,2,7750,0x101c99400,208,WasmStringNewWtf8Array
code-creation,Builtin,2,7750,0x101c994e0,356,WasmStringNewWtf16
code-creation,Builtin,2,7750,0x101c99660,1340,WasmStringNewWtf16Array
code-creation,Builtin,2,7750,0x101c99ba0,156,WasmStringFromDataSegment
code-creation,Builtin,2,7750,0x101c99c40,204,WasmStringAsWtf16
code-creation,Builtin,2,7750,0x101c99d20,44,WasmStringConst
code-creation,Builtin,2,7750,0x101c99d60,88,WasmStringMeasureUtf8
code-creation,Builtin,2,7750,0x101c99dc0,88,WasmStringMeasureWtf8
code-creation,Builtin,2,7750,0x101c99e20,244,WasmStringEncodeWtf8
code-creation,Builtin,2,7750,0x101c99f20,264,WasmStringEncodeWtf8Array
code-creation,Builtin,2,7750,0x101c9a040,68,WasmStringToUtf8Array
code-creation,Builtin,2,7750,0x101c9a0a0,232,WasmStringEncodeWtf16
code-creation,Builtin,2,7791,0x101c9a1a0,1056,WasmStringEncodeWtf16Array
code-creation,Builtin,2,7791,0x101c9a5e0,76,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,7791,0x101c9a640,76,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,7791,0x101c9a6a0,64,ThrowDataViewTypeError
code-creation,Builtin,2,7791,0x101c9a700,68,ThrowDataViewDetachedError
code-creation,Builtin,2,7791,0x101c9a760,68,ThrowDataViewOutOfBounds
code-creation,Builtin,2,7791,0x101c9a7c0,20,WasmStringConcat
code-creation,Builtin,2,7791,0x101c9a7e0,248,WasmStringEqual
code-creation,Builtin,2,7791,0x101c9a8e0,124,WasmStringIsUSVSequence
code-creation,Builtin,2,7791,0x101c9a960,40,WasmStringAsWtf8
code-creation,Builtin,2,7791,0x101c9a9a0,360,WasmStringViewWtf8Advance
code-creation,Builtin,2,7791,0x101c9ab20,628,WasmStringViewWtf8Encode
code-creation,Builtin,2,7791,0x101c9ada0,412,WasmStringViewWtf8Slice
code-creation,Builtin,2,7791,0x101c9af40,516,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,7791,0x101c9b160,268,WasmStringViewWtf16Encode
code-creation,Builtin,2,7791,0x101c9b280,5536,WasmStringViewWtf16Slice
code-creation,Builtin,2,7833,0x101c9c840,112,WasmStringAsIter
code-creation,Builtin,2,7833,0x101c9c8c0,1120,WasmStringCodePointAt
code-creation,Builtin,2,7833,0x101c9cd40,1108,WasmStringViewIterNext
code-creation,Builtin,2,7833,0x101c9d1a0,1168,WasmStringViewIterAdvance
code-creation,Builtin,2,7833,0x101c9d640,1160,WasmStringViewIterRewind
code-creation,Builtin,2,7833,0x101c9dae0,5124,WasmStringViewIterSlice
code-creation,Builtin,2,7833,0x101c9ef00,2964,WasmIntToString
code-creation,Builtin,2,7833,0x101c9faa0,352,WasmStringToDouble
code-creation,Builtin,2,7833,0x101c9fc20,196,WasmStringFromCodePoint
code-creation,Builtin,2,7833,0x101c9fd00,64,WasmStringHash
code-creation,Builtin,2,7833,0x101c9fd60,44,WasmAnyConvertExtern
code-creation,Builtin,2,7833,0x101c9fda0,404,WasmFastApiCallTypeCheckAndUpdateIC
code-creation,Builtin,2,7833,0x101c9ff40,156,WebAssemblyStringCast
code-creation,Builtin,2,7833,0x101c9ffe0,124,WebAssemblyStringTest
code-creation,Builtin,2,7833,0x101ca0060,304,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,7875,0x101ca01a0,320,WebAssemblyStringFromUtf8Array
code-creation,Builtin,2,7875,0x101ca0300,440,WebAssemblyStringIntoUtf8Array
code-creation,Builtin,2,7875,0x101ca04c0,180,WebAssemblyStringToUtf8Array
code-creation,Builtin,2,7875,0x101ca0580,300,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,7875,0x101ca06c0,272,WebAssemblyStringFromCharCode
code-creation,Builtin,2,7875,0x101ca07e0,324,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,7875,0x101ca0940,1104,WebAssemblyStringCodePointAt
code-creation,Builtin,2,7875,0x101ca0da0,628,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,7875,0x101ca1020,164,WebAssemblyStringLength
code-creation,Builtin,2,7875,0x101ca10e0,180,WebAssemblyStringMeasureUtf8
code-creation,Builtin,2,7875,0x101ca11a0,184,WebAssemblyStringConcat
code-creation,Builtin,2,7875,0x101ca1260,320,WebAssemblyStringSubstring
code-creation,Builtin,2,7875,0x101ca13c0,324,WebAssemblyStringEquals
code-creation,Builtin,2,7916,0x101ca1520,184,WebAssemblyStringCompare
code-creation,Builtin,2,7916,0x101ca15e0,156,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,7916,0x101ca1680,28,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,7916,0x101ca16a0,212,LoadJoinTypedElement_Float16Elements_0
code-creation,Builtin,2,7916,0x101ca1780,124,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,7916,0x101ca1800,120,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,7916,0x101ca1880,28,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,7916,0x101ca18a0,232,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,7916,0x101ca19a0,284,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,7916,0x101ca1ac0,28,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,7916,0x101ca1ae0,28,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,7916,0x101ca1b00,28,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,7916,0x101ca1b20,28,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,7916,0x101ca1b40,140,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,7958,0x101ca1be0,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,7958,0x101ca1c00,40,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,7958,0x101ca1c40,4788,Load_GenericElementsAccessor_0
code-creation,Builtin,2,7958,0x101ca2f00,44,Store_GenericElementsAccessor_0
code-creation,Builtin,2,7958,0x101ca2f40,48,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,7958,0x101ca2f80,52,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,7958,0x101ca2fc0,52,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,7958,0x101ca3000,52,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,7958,0x101ca3040,28,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,7958,0x101ca3060,204,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,7958,0x101ca3140,564,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,7958,0x101ca3380,212,LoadTypedElement_Float16Elements_0
code-creation,Builtin,2,7958,0x101ca3460,200,StoreTypedElementNumeric_Float16Elements_0
code-creation,Builtin,2,8000,0x101ca3540,816,StoreTypedElementJSAny_Float16Elements_0
code-creation,Builtin,2,8000,0x101ca3880,124,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,8000,0x101ca3900,36,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,8000,0x101ca3940,568,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,8000,0x101ca3b80,120,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,8000,0x101ca3c00,32,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,8000,0x101ca3c40,564,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,8000,0x101ca3e80,28,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,8000,0x101ca3ea0,32,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,8000,0x101ca3ee0,640,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,8000,0x101ca4180,232,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,8000,0x101ca4280,84,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,8000,0x101ca42e0,620,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,8041,0x101ca4560,284,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,8041,0x101ca4680,84,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,8041,0x101ca46e0,620,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,8041,0x101ca4960,28,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,8041,0x101ca4980,32,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,8041,0x101ca49c0,564,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,8041,0x101ca4c00,28,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,8041,0x101ca4c20,32,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,8041,0x101ca4c60,564,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,8041,0x101ca4ea0,28,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,8041,0x101ca4ec0,32,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,8041,0x101ca4f00,564,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,8041,0x101ca5140,28,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,8041,0x101ca5160,32,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,8041,0x101ca51a0,564,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,8083,0x101ca53e0,140,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,8083,0x101ca5480,204,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,8083,0x101ca5560,564,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,8083,0x101ca57a0,8,CollatorConstructor
code-creation,Builtin,2,8083,0x101ca57c0,8,CollatorInternalCompare
code-creation,Builtin,2,8083,0x101ca57e0,8,CollatorPrototypeCompare
code-creation,Builtin,2,8083,0x101ca5800,8,CollatorSupportedLocalesOf
code-creation,Builtin,2,8083,0x101ca5820,8,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,8083,0x101ca5840,8,DatePrototypeToLocaleDateString
code-creation,Builtin,2,8083,0x101ca5860,8,DatePrototypeToLocaleString
code-creation,Builtin,2,8083,0x101ca5880,8,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,8083,0x101ca58a0,8,DateTimeFormatConstructor
code-creation,Builtin,2,8083,0x101ca58c0,8,DateTimeFormatInternalFormat
code-creation,Builtin,2,8083,0x101ca58e0,8,DateTimeFormatPrototypeFormat
tick,0x1938f5aa4,8083,0,0x0,9
tick,0x19392eaf0,8083,0,0x0,9
code-creation,Builtin,2,8125,0x101ca5900,8,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,8125,0x101ca5920,8,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,8125,0x101ca5940,8,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,8125,0x101ca5960,8,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,8125,0x101ca5980,8,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,8125,0x101ca59a0,8,DisplayNamesConstructor
code-creation,Builtin,2,8125,0x101ca59c0,8,DisplayNamesPrototypeOf
code-creation,Builtin,2,8125,0x101ca59e0,8,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,8125,0x101ca5a00,8,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,8125,0x101ca5a20,8,DurationFormatConstructor
code-creation,Builtin,2,8125,0x101ca5a40,8,DurationFormatPrototypeFormat
code-creation,Builtin,2,8125,0x101ca5a60,8,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,8125,0x101ca5a80,8,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,8125,0x101ca5aa0,8,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,8125,0x101ca5ac0,8,IntlGetCanonicalLocales
code-creation,Builtin,2,8125,0x101ca5ae0,8,IntlSupportedValuesOf
code-creation,Builtin,2,8125,0x101ca5b00,8,ListFormatConstructor
code-creation,Builtin,2,8125,0x101ca5b20,244,ListFormatPrototypeFormat
code-creation,Builtin,2,8125,0x101ca5c20,244,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,8166,0x101ca5d20,8,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,8166,0x101ca5d40,8,ListFormatSupportedLocalesOf
code-creation,Builtin,2,8166,0x101ca5d60,8,LocaleConstructor
code-creation,Builtin,2,8166,0x101ca5d80,8,LocalePrototypeBaseName
code-creation,Builtin,2,8166,0x101ca5da0,8,LocalePrototypeCalendar
code-creation,Builtin,2,8166,0x101ca5dc0,8,LocalePrototypeCalendars
code-creation,Builtin,2,8166,0x101ca5de0,8,LocalePrototypeCaseFirst
code-creation,Builtin,2,8166,0x101ca5e00,8,LocalePrototypeCollation
code-creation,Builtin,2,8166,0x101ca5e20,8,LocalePrototypeCollations
code-creation,Builtin,2,8166,0x101ca5e40,8,LocalePrototypeFirstDayOfWeek
code-creation,Builtin,2,8166,0x101ca5e60,8,LocalePrototypeGetCalendars
code-creation,Builtin,2,8166,0x101ca5e80,8,LocalePrototypeGetCollations
code-creation,Builtin,2,8166,0x101ca5ea0,8,LocalePrototypeGetHourCycles
code-creation,Builtin,2,8166,0x101ca5ec0,8,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,8166,0x101ca5ee0,8,LocalePrototypeGetTimeZones
code-creation,Builtin,2,8166,0x101ca5f00,8,LocalePrototypeGetTextInfo
code-creation,Builtin,2,8166,0x101ca5f20,8,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,8166,0x101ca5f40,8,LocalePrototypeHourCycle
code-creation,Builtin,2,8166,0x101ca5f60,8,LocalePrototypeHourCycles
code-creation,Builtin,2,8208,0x101ca5f80,8,LocalePrototypeLanguage
code-creation,Builtin,2,8208,0x101ca5fa0,8,LocalePrototypeMaximize
code-creation,Builtin,2,8208,0x101ca5fc0,8,LocalePrototypeMinimize
code-creation,Builtin,2,8208,0x101ca5fe0,8,LocalePrototypeNumeric
code-creation,Builtin,2,8208,0x101ca6000,8,LocalePrototypeNumberingSystem
code-creation,Builtin,2,8208,0x101ca6020,8,LocalePrototypeNumberingSystems
code-creation,Builtin,2,8208,0x101ca6040,8,LocalePrototypeRegion
code-creation,Builtin,2,8208,0x101ca6060,8,LocalePrototypeScript
code-creation,Builtin,2,8208,0x101ca6080,8,LocalePrototypeTextInfo
code-creation,Builtin,2,8208,0x101ca60a0,8,LocalePrototypeTimeZones
code-creation,Builtin,2,8208,0x101ca60c0,8,LocalePrototypeToString
code-creation,Builtin,2,8208,0x101ca60e0,8,LocalePrototypeWeekInfo
code-creation,Builtin,2,8208,0x101ca6100,8,NumberFormatConstructor
code-creation,Builtin,2,8208,0x101ca6120,8,NumberFormatInternalFormatNumber
code-creation,Builtin,2,8208,0x101ca6140,8,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,8208,0x101ca6160,8,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,8208,0x101ca6180,8,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,8208,0x101ca61a0,8,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,8208,0x101ca61c0,8,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,8208,0x101ca61e0,8,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,8208,0x101ca6200,8,PluralRulesConstructor
code-creation,Builtin,2,8250,0x101ca6220,8,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,8250,0x101ca6240,8,PluralRulesPrototypeSelect
code-creation,Builtin,2,8250,0x101ca6260,8,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,8250,0x101ca6280,8,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,8250,0x101ca62a0,8,RelativeTimeFormatConstructor
code-creation,Builtin,2,8250,0x101ca62c0,8,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,8250,0x101ca62e0,8,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,8250,0x101ca6300,8,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,8250,0x101ca6320,8,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,8250,0x101ca6340,8,SegmenterConstructor
code-creation,Builtin,2,8250,0x101ca6360,8,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,8250,0x101ca6380,8,SegmenterPrototypeSegment
code-creation,Builtin,2,8250,0x101ca63a0,8,SegmenterSupportedLocalesOf
code-creation,Builtin,2,8250,0x101ca63c0,8,SegmentIteratorPrototypeNext
code-creation,Builtin,2,8250,0x101ca63e0,8,SegmentsPrototypeContaining
code-creation,Builtin,2,8250,0x101ca6400,8,SegmentsPrototypeIterator
code-creation,Builtin,2,8250,0x101ca6420,8,StringPrototypeLocaleCompareIntl
code-creation,Builtin,2,8250,0x101ca6440,8,StringPrototypeNormalizeIntl
code-creation,Builtin,2,8250,0x101ca6460,2040,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,8250,0x101ca6c60,8,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,8250,0x101ca6c80,216,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,8291,0x101ca6d60,8,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,8291,0x101ca6d80,796,StringToLowerCaseIntl
code-creation,Builtin,2,8291,0x101ca70a0,8,TemporalCalendarPrototypeEra
code-creation,Builtin,2,8291,0x101ca70c0,8,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,8291,0x101ca70e0,8,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,8291,0x101ca7100,8,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,8291,0x101ca7120,8,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,8291,0x101ca7140,8,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,8291,0x101ca7160,8,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,8291,0x101ca7180,8,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,8291,0x101ca71a0,8,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,8291,0x101ca71c0,8,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,8291,0x101ca71e0,8,V8BreakIteratorConstructor
code-creation,Builtin,2,8291,0x101ca7200,8,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,8291,0x101ca7220,8,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,8291,0x101ca7240,8,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,8291,0x101ca7260,8,V8BreakIteratorInternalFirst
code-creation,Builtin,2,8291,0x101ca7280,8,V8BreakIteratorInternalNext
code-creation,Builtin,2,8291,0x101ca72a0,8,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,8333,0x101ca72c0,8,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,8333,0x101ca72e0,8,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,8333,0x101ca7300,8,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,8333,0x101ca7320,8,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,8333,0x101ca7340,8,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,8333,0x101ca7360,8,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,8333,0x101ca7380,32,Wide
code-creation,BytecodeHandler,0,8333,0x101ca73c0,32,ExtraWide
code-creation,BytecodeHandler,0,8333,0x101ca7400,116,DebugBreakWide
code-creation,BytecodeHandler,0,8333,0x101ca7480,116,DebugBreakExtraWide
code-creation,BytecodeHandler,0,8333,0x101ca7500,184,DebugBreak0
code-creation,BytecodeHandler,0,8333,0x101ca75c0,116,DebugBreak1
code-creation,BytecodeHandler,0,8333,0x101ca7640,116,DebugBreak2
code-creation,BytecodeHandler,0,8333,0x101ca76c0,116,DebugBreak3
code-creation,BytecodeHandler,0,8333,0x101ca7740,116,DebugBreak4
code-creation,BytecodeHandler,0,8333,0x101ca77c0,116,DebugBreak5
code-creation,BytecodeHandler,0,8333,0x101ca7840,116,DebugBreak6
code-creation,BytecodeHandler,0,8333,0x101ca78c0,40,Ldar
code-creation,BytecodeHandler,0,8333,0x101ca7900,84,LdaZero
code-creation,BytecodeHandler,0,8333,0x101ca7960,88,LdaSmi
code-creation,BytecodeHandler,0,8333,0x101ca79c0,84,LdaUndefined
code-creation,BytecodeHandler,0,8333,0x101ca7a20,84,LdaNull
code-creation,BytecodeHandler,0,8333,0x101ca7a80,84,LdaTheHole
code-creation,BytecodeHandler,0,8375,0x101ca7ae0,28,LdaTrue
code-creation,BytecodeHandler,0,8375,0x101ca7b00,28,LdaFalse
code-creation,BytecodeHandler,0,8375,0x101ca7b20,100,LdaConstant
code-creation,BytecodeHandler,0,8375,0x101ca7ba0,184,LdaContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca7c60,668,LdaScriptContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca7f00,184,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca7fc0,124,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca8040,608,LdaCurrentScriptContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca82c0,124,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,8375,0x101ca8340,40,Star
code-creation,BytecodeHandler,0,8375,0x101ca8380,52,Mov
code-creation,BytecodeHandler,0,8375,0x101ca83c0,48,PushContext
code-creation,BytecodeHandler,0,8375,0x101ca8400,44,PopContext
code-creation,BytecodeHandler,0,8375,0x101ca8440,64,TestReferenceEqual
code-creation,BytecodeHandler,0,8375,0x101ca84a0,64,TestUndetectable
code-creation,BytecodeHandler,0,8375,0x101ca8500,52,TestNull
code-creation,BytecodeHandler,0,8375,0x101ca8540,52,TestUndefined
code-creation,BytecodeHandler,0,8375,0x101ca8580,384,TestTypeOf
code-creation,BytecodeHandler,0,8375,0x101ca8720,6124,LdaGlobal
code-creation,BytecodeHandler,0,8375,0x101ca9f20,4540,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,8375,0x101cab0e0,140,StaGlobal
code-creation,BytecodeHandler,0,8375,0x101cab180,192,StaContextSlot
code-creation,BytecodeHandler,0,8375,0x101cab260,132,StaCurrentContextSlot
code-creation,BytecodeHandler,0,8416,0x101cab300,3480,StaScriptContextSlot
code-creation,BytecodeHandler,0,8416,0x101cac0a0,3396,StaCurrentScriptContextSlot
code-creation,BytecodeHandler,0,8416,0x101cace00,144,LdaLookupSlot
code-creation,BytecodeHandler,0,8416,0x101cacea0,320,LdaLookupContextSlot
code-creation,BytecodeHandler,0,8416,0x101cad000,856,LdaLookupScriptContextSlot
code-creation,BytecodeHandler,0,8416,0x101cad360,4872,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,8416,0x101cae680,144,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,8416,0x101cae720,320,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,8416,0x101cae880,856,LdaLookupScriptContextSlotInsideTypeof
code-creation,BytecodeHandler,0,8416,0x101caebe0,4772,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,8416,0x101cafea0,240,StaLookupSlot
code-creation,BytecodeHandler,0,8416,0x101caffa0,4712,GetNamedProperty
code-creation,BytecodeHandler,0,8416,0x101cb1220,160,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,8416,0x101cb12e0,184,GetKeyedProperty
code-creation,BytecodeHandler,0,8416,0x101cb13a0,164,GetEnumeratedKeyedProperty
code-creation,BytecodeHandler,0,8416,0x101cb1460,232,LdaModuleVariable
code-creation,BytecodeHandler,0,8416,0x101cb1560,352,StaModuleVariable
code-creation,BytecodeHandler,0,8416,0x101cb16e0,152,SetNamedProperty
code-creation,BytecodeHandler,0,8416,0x101cb1780,152,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,8416,0x101cb1820,140,SetKeyedProperty
code-creation,BytecodeHandler,0,8416,0x101cb18c0,164,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,8458,0x101cb1980,140,StaInArrayLiteral
code-creation,BytecodeHandler,0,8458,0x101cb1a20,188,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,8458,0x101cb1ae0,1956,Add
code-creation,BytecodeHandler,0,8458,0x101cb22a0,1468,Sub
code-creation,BytecodeHandler,0,8458,0x101cb2860,1560,Mul
code-creation,BytecodeHandler,0,8458,0x101cb2e80,1600,Div
code-creation,BytecodeHandler,0,8458,0x101cb34e0,1468,Mod
code-creation,BytecodeHandler,0,8458,0x101cb3aa0,800,Exp
code-creation,BytecodeHandler,0,8458,0x101cb3de0,1728,BitwiseOr
code-creation,BytecodeHandler,0,8458,0x101cb44c0,1728,BitwiseXor
code-creation,BytecodeHandler,0,8458,0x101cb4ba0,1728,BitwiseAnd
code-creation,BytecodeHandler,0,8458,0x101cb5280,1208,ShiftLeft
code-creation,BytecodeHandler,0,8458,0x101cb5740,1208,ShiftRight
code-creation,BytecodeHandler,0,8458,0x101cb5c00,1252,ShiftRightLogical
code-creation,BytecodeHandler,0,8458,0x101cb6100,1684,AddSmi
code-creation,BytecodeHandler,0,8458,0x101cb67a0,1352,SubSmi
code-creation,BytecodeHandler,0,8458,0x101cb6d00,1392,MulSmi
code-creation,BytecodeHandler,0,8458,0x101cb7280,1560,DivSmi
code-creation,BytecodeHandler,0,8458,0x101cb78a0,1348,ModSmi
code-creation,BytecodeHandler,0,8458,0x101cb7e00,712,ExpSmi
code-creation,BytecodeHandler,0,8458,0x101cb80e0,524,BitwiseOrSmi
code-creation,BytecodeHandler,0,8458,0x101cb8300,524,BitwiseXorSmi
code-creation,BytecodeHandler,0,8458,0x101cb8520,524,BitwiseAndSmi
code-creation,BytecodeHandler,0,8458,0x101cb8740,548,ShiftLeftSmi
code-creation,BytecodeHandler,0,8458,0x101cb8980,536,ShiftRightSmi
code-creation,BytecodeHandler,0,8458,0x101cb8ba0,828,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,8500,0x101cb8ee0,716,Inc
code-creation,BytecodeHandler,0,8625,0x101cb91c0,716,Dec
code-creation,BytecodeHandler,0,8625,0x101cb94a0,684,Negate
code-creation,BytecodeHandler,0,8625,0x101cb9760,524,BitwiseNot
code-creation,BytecodeHandler,0,8666,0x101cb9980,168,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,8666,0x101cb9a40,44,LogicalNot
code-creation,BytecodeHandler,0,8666,0x101cb9a80,636,TypeOf
code-creation,BytecodeHandler,0,8666,0x101cb9d00,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,8666,0x101cb9d80,124,DeletePropertySloppy
code-creation,BytecodeHandler,0,8666,0x101cb9e00,48,GetSuperConstructor
code-creation,BytecodeHandler,0,8666,0x101cb9e40,348,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,8666,0x101cb9fa0,848,CallAnyReceiver
code-creation,BytecodeHandler,0,8666,0x101cba300,848,CallProperty
code-creation,BytecodeHandler,0,8666,0x101cba660,860,CallProperty0
code-creation,BytecodeHandler,0,8666,0x101cba9c0,872,CallProperty1
code-creation,BytecodeHandler,0,8666,0x101cbad40,892,CallProperty2
code-creation,BytecodeHandler,0,8666,0x101cbb0c0,840,CallUndefinedReceiver
code-creation,BytecodeHandler,0,8666,0x101cbb420,832,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,8666,0x101cbb780,844,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,8666,0x101cbbae0,864,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,8666,0x101cbbe60,848,CallWithSpread
code-creation,BytecodeHandler,0,8666,0x101cbc1c0,132,CallRuntime
code-creation,BytecodeHandler,0,8708,0x101cbc260,156,CallRuntimeForPair
code-creation,BytecodeHandler,0,8708,0x101cbc300,104,CallJSRuntime
code-creation,BytecodeHandler,0,8708,0x101cbc380,1588,InvokeIntrinsic
code-creation,BytecodeHandler,0,8708,0x101cbc9c0,1164,Construct
code-creation,BytecodeHandler,0,8708,0x101cbce60,444,ConstructWithSpread
code-creation,BytecodeHandler,0,8708,0x101cbd020,1024,ConstructForwardAllArgs
code-creation,BytecodeHandler,0,8708,0x101cbd440,2380,TestEqual
code-creation,BytecodeHandler,0,8708,0x101cbdda0,1220,TestEqualStrict
code-creation,BytecodeHandler,0,8708,0x101cbe280,1780,TestLessThan
code-creation,BytecodeHandler,0,8708,0x101cbe980,1780,TestGreaterThan
code-creation,BytecodeHandler,0,8708,0x101cbf080,1780,TestLessThanOrEqual
code-creation,BytecodeHandler,0,8708,0x101cbf780,1780,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,8708,0x101cbfe80,1088,TestInstanceOf
code-creation,BytecodeHandler,0,8708,0x101cc02e0,128,TestIn
code-creation,BytecodeHandler,0,8708,0x101cc0380,100,ToName
code-creation,BytecodeHandler,0,8708,0x101cc0400,196,ToNumber
code-creation,BytecodeHandler,0,8708,0x101cc04e0,216,ToNumeric
code-creation,BytecodeHandler,0,8708,0x101cc05c0,120,ToObject
code-creation,BytecodeHandler,0,8708,0x101cc0640,148,ToString
code-creation,BytecodeHandler,0,8708,0x101cc06e0,168,ToBoolean
code-creation,BytecodeHandler,0,8708,0x101cc07a0,420,CreateRegExpLiteral
code-creation,BytecodeHandler,0,8708,0x101cc0960,2040,CreateArrayLiteral
code-creation,BytecodeHandler,0,8750,0x101cc1160,100,CreateArrayFromIterable
code-creation,BytecodeHandler,0,8750,0x101cc11e0,776,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,8750,0x101cc1500,3028,CreateObjectLiteral
code-creation,BytecodeHandler,0,8750,0x101cc20e0,312,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,8750,0x101cc2220,144,CloneObject
code-creation,BytecodeHandler,0,8750,0x101cc22c0,200,GetTemplateObject
code-creation,BytecodeHandler,0,8750,0x101cc23a0,340,CreateClosure
code-creation,BytecodeHandler,0,8750,0x101cc2500,132,CreateBlockContext
code-creation,BytecodeHandler,0,8750,0x101cc25a0,140,CreateCatchContext
code-creation,BytecodeHandler,0,8750,0x101cc2640,380,CreateFunctionContext
code-creation,BytecodeHandler,0,8750,0x101cc27c0,380,CreateEvalContext
code-creation,BytecodeHandler,0,8750,0x101cc2940,140,CreateWithContext
code-creation,BytecodeHandler,0,8750,0x101cc29e0,1868,CreateMappedArguments
code-creation,BytecodeHandler,0,8750,0x101cc3140,636,CreateUnmappedArguments
code-creation,BytecodeHandler,0,8750,0x101cc33c0,688,CreateRestParameter
tick,0x19396aa44,8833,0,0x0,6
code-creation,BytecodeHandler,0,8916,0x101cc3680,1324,JumpLoop
code-creation,BytecodeHandler,0,8916,0x101cc3bc0,32,Jump
code-creation,BytecodeHandler,0,8916,0x101cc3c00,48,JumpConstant
code-creation,BytecodeHandler,0,8916,0x101cc3c40,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,8916,0x101cc3ca0,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,8916,0x101cc3d00,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,8958,0x101cc3d60,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,8958,0x101cc3dc0,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,8958,0x101cc3e20,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,8958,0x101cc3e80,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,8958,0x101cc3ee0,88,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,8958,0x101cc3f40,104,JumpIfForInDoneConstant
code-creation,BytecodeHandler,0,8958,0x101cc3fc0,196,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,8958,0x101cc40a0,196,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,8958,0x101cc4180,180,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,8958,0x101cc4240,180,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,8958,0x101cc4300,64,JumpIfTrue
code-creation,BytecodeHandler,0,8958,0x101cc4360,64,JumpIfFalse
code-creation,BytecodeHandler,0,8958,0x101cc43c0,64,JumpIfNull
code-creation,BytecodeHandler,0,8958,0x101cc4420,64,JumpIfNotNull
code-creation,BytecodeHandler,0,8958,0x101cc4480,64,JumpIfUndefined
code-creation,BytecodeHandler,0,8958,0x101cc44e0,64,JumpIfNotUndefined
code-creation,BytecodeHandler,0,8958,0x101cc4540,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,8958,0x101cc45a0,72,JumpIfJSReceiver
code-creation,BytecodeHandler,0,8958,0x101cc4600,88,JumpIfForInDone
code-creation,BytecodeHandler,0,8958,0x101cc4660,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,9000,0x101cc46e0,548,ForInEnumerate
code-creation,BytecodeHandler,0,9000,0x101cc4920,240,ForInPrepare
code-creation,BytecodeHandler,0,9000,0x101cc4a20,264,ForInNext
code-creation,BytecodeHandler,0,9000,0x101cc4b40,56,ForInStep
code-creation,BytecodeHandler,0,9000,0x101cc4b80,36,SetPendingMessage
code-creation,BytecodeHandler,0,9000,0x101cc4bc0,128,Throw
code-creation,BytecodeHandler,0,9000,0x101cc4c60,128,ReThrow
code-creation,BytecodeHandler,0,9000,0x101cc4d00,124,Return
code-creation,BytecodeHandler,0,9000,0x101cc4d80,236,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,9000,0x101cc4e80,148,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,9000,0x101cc4f20,148,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,9000,0x101cc4fc0,172,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,9000,0x101cc5080,120,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,9000,0x101cc5100,400,SuspendGenerator
code-creation,BytecodeHandler,0,9000,0x101cc52a0,164,ResumeGenerator
code-creation,BytecodeHandler,0,9000,0x101cc5360,128,GetIterator
code-creation,BytecodeHandler,0,9000,0x101cc5400,108,Debugger
code-creation,BytecodeHandler,0,9000,0x101cc5480,128,IncBlockCounter
code-creation,BytecodeHandler,0,9000,0x101cc5520,80,Abort
code-creation,BytecodeHandler,0,9000,0x101cc5580,44,Star0
code-creation,BytecodeHandler,0,9000,0x101cc55c0,72,Illegal
code-creation,BytecodeHandler,0,9041,0x101cc5620,120,DebugBreak1.Wide
code-creation,BytecodeHandler,0,9041,0x101cc56a0,120,DebugBreak2.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5720,120,DebugBreak3.Wide
code-creation,BytecodeHandler,0,9041,0x101cc57a0,120,DebugBreak4.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5820,120,DebugBreak5.Wide
code-creation,BytecodeHandler,0,9041,0x101cc58a0,120,DebugBreak6.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5920,40,Ldar.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5960,40,LdaSmi.Wide
code-creation,BytecodeHandler,0,9041,0x101cc59a0,48,LdaConstant.Wide
code-creation,BytecodeHandler,0,9041,0x101cc59e0,136,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5a80,668,LdaScriptContextSlot.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5d20,136,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5dc0,76,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,9041,0x101cc5e20,608,LdaCurrentScriptContextSlot.Wide
code-creation,BytecodeHandler,0,9041,0x101cc60a0,76,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cc6100,40,Star.Wide
code-creation,BytecodeHandler,0,9083,0x101cc6140,52,Mov.Wide
code-creation,BytecodeHandler,0,9083,0x101cc6180,48,PushContext.Wide
code-creation,BytecodeHandler,0,9083,0x101cc61c0,44,PopContext.Wide
code-creation,BytecodeHandler,0,9083,0x101cc6200,64,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,9083,0x101cc6260,4700,LdaGlobal.Wide
code-creation,BytecodeHandler,0,9083,0x101cc74c0,4600,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,9083,0x101cc86c0,144,StaGlobal.Wide
code-creation,BytecodeHandler,0,9083,0x101cc8760,192,StaContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cc8840,132,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cc88e0,3500,StaScriptContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cc96a0,3416,StaCurrentScriptContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cca400,148,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cca4a0,324,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cca600,860,LdaLookupScriptContextSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101cca960,4940,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,9083,0x101ccbcc0,148,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,9125,0x101ccbd60,324,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,9125,0x101ccbec0,860,LdaLookupScriptContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,9125,0x101ccc220,4836,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,9125,0x101ccd520,244,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,9125,0x101ccd620,4720,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101cce8a0,164,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,9125,0x101cce960,132,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101ccea00,168,GetEnumeratedKeyedProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101cceac0,232,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,9125,0x101ccebc0,356,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,9125,0x101cced40,156,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101ccede0,156,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101ccee80,144,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101ccef20,168,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,9125,0x101ccefe0,144,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,9166,0x101ccf080,192,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,9166,0x101ccf160,1920,Add.Wide
code-creation,BytecodeHandler,0,9166,0x101ccf900,1428,Sub.Wide
code-creation,BytecodeHandler,0,9166,0x101ccfea0,1520,Mul.Wide
code-creation,BytecodeHandler,0,9166,0x101cd04a0,1616,Div.Wide
code-creation,BytecodeHandler,0,9166,0x101cd0b00,1480,Mod.Wide
code-creation,BytecodeHandler,0,9166,0x101cd10e0,808,Exp.Wide
code-creation,BytecodeHandler,0,9166,0x101cd1420,1780,BitwiseOr.Wide
code-creation,BytecodeHandler,0,9166,0x101cd1b20,1780,BitwiseXor.Wide
code-creation,BytecodeHandler,0,9166,0x101cd2220,1780,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,9166,0x101cd2920,1256,ShiftLeft.Wide
code-creation,BytecodeHandler,0,9166,0x101cd2e20,1256,ShiftRight.Wide
code-creation,BytecodeHandler,0,9166,0x101cd3320,1292,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,9166,0x101cd3840,1660,AddSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd3ec0,1316,SubSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd4400,1404,MulSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd4980,1576,DivSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd4fc0,1364,ModSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd5520,720,ExpSmi.Wide
code-creation,BytecodeHandler,0,9166,0x101cd5800,536,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd5a20,536,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd5c40,536,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd5e60,560,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd60a0,548,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd62e0,844,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,9208,0x101cd6640,680,Inc.Wide
code-creation,BytecodeHandler,0,9208,0x101cd6900,680,Dec.Wide
code-creation,BytecodeHandler,0,9208,0x101cd6bc0,696,Negate.Wide
code-creation,BytecodeHandler,0,9208,0x101cd6e80,540,BitwiseNot.Wide
code-creation,BytecodeHandler,0,9208,0x101cd70a0,588,TypeOf.Wide
code-creation,BytecodeHandler,0,9208,0x101cd7300,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,9208,0x101cd73a0,128,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,9208,0x101cd7440,48,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,9208,0x101cd7480,352,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,9208,0x101cd7600,852,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,9208,0x101cd7960,852,CallProperty.Wide
code-creation,BytecodeHandler,0,9250,0x101cd7cc0,864,CallProperty0.Wide
code-creation,BytecodeHandler,0,9250,0x101cd8040,876,CallProperty1.Wide
code-creation,BytecodeHandler,0,9250,0x101cd83c0,896,CallProperty2.Wide
code-creation,BytecodeHandler,0,9250,0x101cd8760,844,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,9250,0x101cd8ac0,836,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,9250,0x101cd8e20,848,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,9250,0x101cd9180,868,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,9250,0x101cd9500,852,CallWithSpread.Wide
code-creation,BytecodeHandler,0,9250,0x101cd9860,136,CallRuntime.Wide
code-creation,BytecodeHandler,0,9250,0x101cd9900,160,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,9250,0x101cd99c0,108,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,9250,0x101cd9a40,1592,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,9250,0x101cda080,1112,Construct.Wide
code-creation,BytecodeHandler,0,9250,0x101cda4e0,392,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,9250,0x101cda680,1028,ConstructForwardAllArgs.Wide
code-creation,BytecodeHandler,0,9250,0x101cdaaa0,2416,TestEqual.Wide
code-creation,BytecodeHandler,0,9250,0x101cdb420,1232,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,9250,0x101cdb900,1856,TestLessThan.Wide
code-creation,BytecodeHandler,0,9291,0x101cdc060,1856,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,9291,0x101cdc7c0,1856,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,9291,0x101cdcf20,1856,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,9291,0x101cdd680,1100,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,9291,0x101cddae0,132,TestIn.Wide
code-creation,BytecodeHandler,0,9291,0x101cddb80,200,ToNumber.Wide
code-creation,BytecodeHandler,0,9291,0x101cddc60,220,ToNumeric.Wide
code-creation,BytecodeHandler,0,9291,0x101cddd40,124,ToObject.Wide
code-creation,BytecodeHandler,0,9291,0x101cdddc0,424,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,9291,0x101cddf80,1896,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,9291,0x101cde700,776,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,9291,0x101cdea20,2880,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf580,148,CloneObject.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf620,148,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf6c0,352,CreateClosure.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf840,136,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf8e0,144,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,9291,0x101cdf980,380,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,9333,0x101cdfb00,380,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,9333,0x101cdfc80,144,CreateWithContext.Wide
code-creation,BytecodeHandler,0,9333,0x101cdfd20,1364,JumpLoop.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0280,32,Jump.Wide
code-creation,BytecodeHandler,0,9333,0x101ce02c0,48,JumpConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0300,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0360,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce03c0,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0420,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0480,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce04e0,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0540,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce05a0,88,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0600,104,JumpIfForInDoneConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0680,196,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,9333,0x101ce0760,196,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0840,180,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0900,180,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,9375,0x101ce09c0,64,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0a20,64,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0a80,64,JumpIfNull.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0ae0,64,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0b40,64,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0ba0,64,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0c00,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0c60,72,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0cc0,88,JumpIfForInDone.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0d20,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0da0,552,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,9375,0x101ce0fe0,240,ForInPrepare.Wide
code-creation,BytecodeHandler,0,9375,0x101ce10e0,268,ForInNext.Wide
code-creation,BytecodeHandler,0,9375,0x101ce1200,56,ForInStep.Wide
code-creation,BytecodeHandler,0,9375,0x101ce1240,188,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,9375,0x101ce1300,176,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,9375,0x101ce13c0,120,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,9416,0x101ce1440,404,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,9416,0x101ce15e0,164,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,9416,0x101ce16a0,132,GetIterator.Wide
code-creation,BytecodeHandler,0,9416,0x101ce1740,132,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,9416,0x101ce17e0,84,Abort.Wide
code-creation,BytecodeHandler,0,9416,0x101ce1840,120,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce18c0,120,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1940,120,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce19c0,120,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1a40,120,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1ac0,120,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1b40,40,Ldar.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1b80,40,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1bc0,48,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1c00,136,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1ca0,668,LdaScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1f40,136,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce1fe0,76,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9416,0x101ce2040,608,LdaCurrentScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce22c0,76,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce2320,40,Star.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce2360,52,Mov.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce23a0,48,PushContext.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce23e0,44,PopContext.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce2420,64,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce2480,4700,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce36e0,4600,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce48e0,144,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce4980,192,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce4a60,132,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce4b00,3500,StaScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce58c0,3416,StaCurrentScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce6620,148,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce66c0,324,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce6820,860,LdaLookupScriptContextSlot.ExtraWide
code-creation,BytecodeHandler,0,9458,0x101ce6b80,4940,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce7ee0,148,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce7f80,324,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce80e0,860,LdaLookupScriptContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce8440,4836,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce9740,244,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ce9840,4720,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceaac0,164,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceab80,132,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceac20,168,GetEnumeratedKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceace0,232,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceade0,356,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceaf60,156,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceb000,156,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceb0a0,144,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceb140,168,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceb200,144,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,9500,0x101ceb2a0,192,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101ceb380,1920,Add.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cebb20,1428,Sub.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cec0c0,1520,Mul.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cec6c0,1616,Div.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cecd20,1480,Mod.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101ced300,808,Exp.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101ced640,1780,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cedd40,1780,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cee440,1780,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101ceeb40,1256,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cef040,1256,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cef540,1292,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cefa60,1676,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf0100,1316,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf0640,1404,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf0bc0,1580,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf1200,1368,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf1760,720,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,9541,0x101cf1a40,536,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf1c60,536,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf1e80,536,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf20a0,560,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf22e0,548,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf2520,844,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf2880,680,Inc.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf2b40,680,Dec.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf2e00,696,Negate.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf30c0,540,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf32e0,588,TypeOf.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf3540,128,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf35e0,128,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf3680,48,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf36c0,352,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf3840,848,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf3ba0,848,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf3f00,864,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,9583,0x101cf4280,876,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf4600,896,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf49a0,844,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf4d00,836,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5060,848,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf53c0,868,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5740,848,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5aa0,136,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5b40,160,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5c00,108,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf5c80,1592,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf62c0,1112,Construct.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf6720,392,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf68c0,1028,ConstructForwardAllArgs.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf6ce0,2416,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf7660,1232,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf7b40,1856,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,9625,0x101cf82a0,1856,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf8a00,1856,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf9160,1856,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf98c0,1100,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf9d20,132,TestIn.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf9dc0,200,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf9ea0,220,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cf9f80,124,ToObject.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfa000,424,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfa1c0,1896,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfa940,776,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfac60,2880,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfb7c0,148,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfb860,148,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfb900,352,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfba80,136,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfbb20,144,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfbbc0,380,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,9666,0x101cfbd40,380,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfbec0,144,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfbf60,1364,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc4c0,32,Jump.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc500,48,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc540,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc5a0,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc600,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc660,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc6c0,92,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc720,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc780,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc7e0,88,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc840,104,JumpIfForInDoneConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc8c0,196,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfc9a0,196,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,9708,0x101cfca80,180,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcb40,180,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcc00,64,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcc60,64,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfccc0,64,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcd20,64,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcd80,64,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcde0,64,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfce40,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcea0,72,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcf00,88,JumpIfForInDone.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcf60,108,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfcfe0,552,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd220,240,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd320,268,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd440,52,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd480,188,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd540,176,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,9750,0x101cfd600,120,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,9791,0x101cfd680,404,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,9791,0x101cfd820,164,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,9791,0x101cfd8e0,132,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,9791,0x101cfd980,132,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,9791,0x101cfda20,84,Abort.ExtraWide
new,MemoryChunk,0x21b13d0c0000,262144
tick,0x10172be60,10083,0,0x0,5
new,MemoryChunk,0x277c96e80000,262144
new,MemoryChunk,0x23cf99b80000,262144
new,MemoryChunk,0x316d6d880000,262144
new,MemoryChunk,0x1ea94b100000,262144
new,MemoryChunk,0x2dd447100000,262144
tick,0x101616fe0,11333,0,0x0,5
new,MemoryChunk,0x7143c00000,262144
code-creation,Eval,9,11833,0x277c96e81398,5, node:internal/main/run_main_module:1:1,0x7143c02688,~
script-source,75,node:internal/main/run_main_module,'use strict';\n\nconst {\n  RegExpPrototypeExec\x2C\n} = primordials;\n\nconst {\n  prepareMainThreadExecution\x2C\n  markBootstrapComplete\x2C\n} = require('internal/process/pre_execution');\nconst { getOptionValue } = require('internal/options');\nconst { emitExperimentalWarning } = require('internal/util');\n\nconst isEntryURL = getOptionValue('--entry-url');\nconst mainEntry = prepareMainThreadExecution(!isEntryURL);\n\nmarkBootstrapComplete();\n\n// Necessary to reset RegExp statics before user code runs.\nRegExpPrototypeExec(/^/\x2C '');\n\nif (isEntryURL) {\n  emitExperimentalWarning('--entry-url');\n}\n\n/**\n * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin the\n * execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an ES\n * module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch before\n * the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability is\n * undesirable and should be removed once the module customization hooks provide equivalent functionality.\n */\nrequire('internal/modules/cjs/loader').Module.runMain(mainEntry);\n
code-source-info,0x277c96e81398,75,0,1232,C0O0C4O1232,,
code-creation,JS,9,11875,0x277c96e81478,119, node:internal/main/run_main_module:1:1,0x7143c02758,~
code-source-info,0x277c96e81478,75,0,1232,C0O25C5O131C8O131C13O74C18O104C23O201C26O201C31O182C36O266C39O266C44O238C49O312C52O312C57O361C59O389C61O361C66O403C69O489C78O489C83O520C87O540C90O540C94O1166C97O1166C102O1204C107O1211C112O1212C118O1231,,
new,MemoryChunk,0x39e5bd0c0000,262144
new,MemoryChunk,0x148000000,262144
tick,0x101646dd0,12583,0,0x0,0,0x621fa658ac7,0x3231531cdefe,0x3231531cb3f9,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,12666,0x148000040,736,requireBuiltin node:internal/bootstrap/realm:420:24,0x3699125c5148,^
script-source,6,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\n// Only per-realm internal states and bindings should be bootstrapped in this\n// file and no globals should be exposed to the user code.\n//\n// This file creates the internal module & binding loaders used by built-in\n// modules. In contrast\x2C user land modules are loaded using\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\n// lib/internal/modules/esm/* (ES Modules).\n//\n// This file is compiled and run by node.cc before bootstrap/node.js\n// was called\x2C therefore the loaders are bootstrapped before we start to\n// actually bootstrap Node.js. It creates the following objects:\n//\n// C++ binding loaders:\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\n//   because it is an object attached to the global process object.\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\n//   about the stability of these bindings\x2C but still have to take care of\n//   compatibility issues caused by them from time to time.\n// - process._linkedBinding(): intended to be used by embedders to add\n//   additional C++ bindings in their applications. These C++ bindings\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\n//   NM_F_LINKED.\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\n//   from user land unless through `require('internal/test/binding')`.\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\n//   and have their nm_flags set to NM_F_INTERNAL.\n//\n// Internal JavaScript module loader:\n// - BuiltinModule: a minimal module system used to load the JavaScript core\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\n//   compiled into the node binary via node_javascript.cc generated by js2c.cc\x2C\n//   so they can be loaded faster without the cost of I/O. This class makes the\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\n//   default to core modules\x2C and lets the core modules require itself via\n//   require('internal/bootstrap/realm') even when this file is not written in\n//   CommonJS style.\n//\n// Other objects:\n// - process.moduleLoadList: an array recording the bindings and the modules\n//   loaded in the process and the order in which they are loaded.\n\n'use strict';\n\n// This file is compiled as if it's wrapped in a function with arguments\n// passed by node::RunBootstrapping()\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGet\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  TypeError\x2C\n} = primordials;\n\n// Set up process.moduleLoadList.\nconst moduleLoadList = [];\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\n  __proto__: null\x2C\n  value: moduleLoadList\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n});\n\n\n// processBindingAllowList contains the name of bindings that are allowed\n// for access via process.binding(). This is used to provide a transition\n// path for modules that are being moved over to internalBinding.\n// Certain bindings may not actually correspond to an internalBinding any\n// more\x2C we just implement them as legacy wrappers instead. See the\n// legacyWrapperList.\nconst processBindingAllowList = new SafeSet([\n  'buffer'\x2C\n  'cares_wrap'\x2C\n  'config'\x2C\n  'constants'\x2C\n  'contextify'\x2C\n  'fs'\x2C\n  'fs_event_wrap'\x2C\n  'icu'\x2C\n  'inspector'\x2C\n  'js_stream'\x2C\n  'os'\x2C\n  'pipe_wrap'\x2C\n  'process_wrap'\x2C\n  'spawn_sync'\x2C\n  'stream_wrap'\x2C\n  'tcp_wrap'\x2C\n  'tls_wrap'\x2C\n  'tty_wrap'\x2C\n  'udp_wrap'\x2C\n  'uv'\x2C\n  'zlib'\x2C\n]);\n\nconst runtimeDeprecatedList = new SafeSet([\n  // The list of runtime-deprecated bindings is currently empty.\n]);\n\nconst legacyWrapperList = new SafeSet([\n  'natives'\x2C\n  'util'\x2C\n]);\n\n// The code bellow assumes that the two lists must not contain any modules\n// beginning with "internal/".\n// Modules that can only be imported via the node: scheme.\nconst schemelessBlockList = new SafeSet([\n  'sea'\x2C\n  'sqlite'\x2C\n  'quic'\x2C\n  'test'\x2C\n  'test/reporters'\x2C\n]);\n// Modules that will only be enabled at run time.\nconst experimentalModuleList = new SafeSet(['sqlite'\x2C 'quic']);\n\n// Set up process.binding() and process._linkedBinding().\n{\n  const bindingObj = { __proto__: null };\n\n  process.binding = function binding(module) {\n    module = String(module);\n    const mod = bindingObj[module];\n    if (typeof mod === 'object') {\n      return mod;\n    }\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\n    // selective fallback to internalBinding for the deprecated ones.\n    if (runtimeDeprecatedList.has(module)) {\n      process.emitWarning(\n        `Access to process.binding('${module}') is deprecated.`\x2C\n        'DeprecationWarning'\x2C\n        'DEP0111');\n      return internalBinding(module);\n    }\n    if (legacyWrapperList.has(module)) {\n      return requireBuiltin('internal/legacy/processbinding')[module]();\n    }\n    if (processBindingAllowList.has(module)) {\n      return internalBinding(module);\n    }\n    // eslint-disable-next-line no-restricted-syntax\n    throw new Error(`No such module: ${module}`);\n  };\n\n  process._linkedBinding = function _linkedBinding(module) {\n    module = String(module);\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object')\n      mod = bindingObj[module] = getLinkedBinding(module);\n    return mod;\n  };\n}\n\n/**\n * Set up internalBinding() in the closure.\n * @type {import('typings/globals').internalBinding}\n */\nlet internalBinding;\n{\n  const bindingObj = { __proto__: null };\n  // eslint-disable-next-line no-global-assign\n  internalBinding = function internalBinding(module) {\n    let mod = bindingObj[module];\n    if (typeof mod !== 'object') {\n      mod = bindingObj[module] = getInternalBinding(module);\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\n    }\n    return mod;\n  };\n}\n\nconst selfId = 'internal/bootstrap/realm';\nconst {\n  builtinIds\x2C\n  compileFunction\x2C\n  setInternalLoaders\x2C\n} = internalBinding('builtins');\n\nconst { ModuleWrap } = internalBinding('module_wrap');\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\n\nconst getOwn = (target\x2C property\x2C receiver) => {\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\n    ReflectGet(target\x2C property\x2C receiver) :\n    undefined;\n};\n\nconst publicBuiltinIds = builtinIds\n  .filter((id) =>\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\n      !experimentalModuleList.has(id)\x2C\n  );\n// Do not expose the loaders to user land even with --expose-internals.\nconst internalBuiltinIds = builtinIds\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\n\n// When --expose-internals is on we'll add the internal builtin ids to these.\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\nlet canBeRequiredByUsersWithoutSchemeList =\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\n\n/**\n * An internal abstraction for the built-in JavaScript modules of Node.js.\n * Be careful not to expose this to user land unless --expose-internals is\n * used\x2C in which case there is no compatibility guarantee about this class.\n */\nclass BuiltinModule {\n  /**\n   * A map from the module IDs to the module instances.\n   * @type {Map<string\x2C BuiltinModule>}\n   */\n  static map = new SafeMap(\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\n  );\n\n  constructor(id) {\n    this.filename = `${id}.js`;\n    this.id = id;\n\n    // The CJS exports object of the module.\n    this.exports = {};\n    // States used to work around circular dependencies.\n    this.loaded = false;\n    this.loading = false;\n\n    // The following properties are used by the ESM implementation and only\n    // initialized when the built-in module is loaded by users.\n    /**\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\n     * @type {ModuleWrap|undefined}\n     */\n    this.module = undefined;\n    /**\n     * Exported names for the ESM imports.\n     * @type {string[]|undefined}\n     */\n    this.exportKeys = undefined;\n  }\n\n  static allowRequireByUsers(id) {\n    if (id === selfId) {\n      // No code because this is an assertion against bugs.\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not allow ${id}`);\n    }\n    canBeRequiredByUsersList.add(id);\n    if (!schemelessBlockList.has(id)) {\n      canBeRequiredByUsersWithoutSchemeList.add(id);\n    }\n  }\n\n  static setRealmAllowRequireByUsers(ids) {\n    canBeRequiredByUsersList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\n    canBeRequiredByUsersWithoutSchemeList =\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\n  }\n\n  // To be called during pre-execution when --expose-internals is on.\n  // Enables the user-land module loader to access internal modules.\n  static exposeInternals() {\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\n    }\n  }\n\n  static exists(id) {\n    return BuiltinModule.map.has(id);\n  }\n\n  static canBeRequiredByUsers(id) {\n    return canBeRequiredByUsersList.has(id);\n  }\n\n  static canBeRequiredWithoutScheme(id) {\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\n  }\n\n  static normalizeRequirableId(id) {\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\n        return normalizedId;\n      }\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\n      return id;\n    }\n\n    return undefined;\n  }\n\n  static isBuiltin(id) {\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\n      typeof id === 'string' &&\n        StringPrototypeStartsWith(id\x2C 'node:') &&\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\n    );\n  }\n\n  static getSchemeOnlyModuleNames() {\n    return ArrayFrom(schemelessBlockList);\n  }\n\n  static getAllBuiltinModuleIds() {\n    const allBuiltins = ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\n    ArrayPrototypePushApply(allBuiltins\x2C ArrayFrom(schemelessBlockList\x2C (x) => `node:${x}`));\n    return allBuiltins;\n  }\n\n  // Used by user-land module loaders to compile and load builtins.\n  compileForPublicLoader() {\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\n      // No code because this is an assertion against bugs\n      // eslint-disable-next-line no-restricted-syntax\n      throw new Error(`Should not compile ${this.id} for public use`);\n    }\n    this.compileForInternalLoader();\n    if (!this.exportKeys) {\n      // When using --expose-internals\x2C we do not want to reflect the named\n      // exports from core modules as this can trigger unnecessary getters.\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\n    }\n    return this.exports;\n  }\n\n  getESMFacade() {\n    if (this.module) return this.module;\n    const url = `node:${this.id}`;\n    const builtin = this;\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\n      ArrayPrototypePush(exportsKeys\x2C 'default');\n    }\n    this.module = new ModuleWrap(\n      url\x2C undefined\x2C exportsKeys\x2C\n      function() {\n        builtin.syncExports();\n        this.setExport('default'\x2C builtin.exports);\n      });\n    // Ensure immediate sync execution to capture exports now\n    this.module.instantiate();\n    this.module.evaluate(-1\x2C false);\n    return this.module;\n  }\n\n  // Provide named exports for all builtin libraries so that the libraries\n  // may be imported in a nicer way for ESM users. The default export is left\n  // as the entire namespace (module.exports) and updates when this function is\n  // called so that APMs and other behavior are supported.\n  syncExports() {\n    const names = this.exportKeys;\n    if (this.module) {\n      for (let i = 0; i < names.length; i++) {\n        const exportName = names[i];\n        if (exportName === 'default') continue;\n        this.module.setExport(exportName\x2C\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\n      }\n    }\n  }\n\n  compileForInternalLoader() {\n    if (this.loaded || this.loading) {\n      return this.exports;\n    }\n\n    const id = this.id;\n    this.loading = true;\n\n    try {\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\n        requireWithFallbackInDeps : requireBuiltin;\n\n      const fn = compileFunction(id);\n      // Arguments must match the parameters specified in\n      // BuiltinLoader::LookupAndCompile().\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\n\n      this.loaded = true;\n    } finally {\n      this.loading = false;\n    }\n\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\n    // here to avoid breaking users who parse process.moduleLoadList.\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\n    return this.exports;\n  }\n}\n\n// Think of this as module.exports in this file even though it is not\n// written in CommonJS style.\nconst loaderExports = {\n  internalBinding\x2C\n  BuiltinModule\x2C\n  require: requireBuiltin\x2C\n};\n\nfunction requireBuiltin(id) {\n  if (id === selfId) {\n    return loaderExports;\n  }\n\n  const mod = BuiltinModule.map.get(id);\n  // Can't load the internal errors module from here\x2C have to use a raw error.\n  // eslint-disable-next-line no-restricted-syntax\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\n  return mod.compileForInternalLoader();\n}\n\n// Allow internal modules from dependencies to require\n// other modules from dependencies by providing fallbacks.\nfunction requireWithFallbackInDeps(request) {\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    request = StringPrototypeSlice(request\x2C 5);\n  } else if (!BuiltinModule.map.has(request)) {\n    request = `internal/deps/${request}`;\n  }\n  return requireBuiltin(request);\n}\n\nfunction setupPrepareStackTrace() {\n  const {\n    setEnhanceStackForFatalException\x2C\n    setPrepareStackTraceCallback\x2C\n  } = internalBinding('errors');\n  const {\n    prepareStackTraceCallback\x2C\n    ErrorPrepareStackTrace\x2C\n    fatalExceptionStackEnhancers: {\n      beforeInspector\x2C\n      afterInspector\x2C\n    }\x2C\n  } = requireBuiltin('internal/errors');\n  // Tell our PrepareStackTraceCallback passed to the V8 API\n  // to call prepareStackTrace().\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\n  // Set the function used to enhance the error stack for printing\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\n  // Setup the default Error.prepareStackTrace.\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: ErrorPrepareStackTrace\x2C\n  });\n}\n\n// Store the internal loaders in C++.\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\n\n// Setup per-realm bindings.\nsetupPrepareStackTrace();\n
code-source-info,0x148000040,6,13693,14035,,,
code-creation,JS,10,13041,0x148000340,1344,compileForInternalLoader node:internal/bootstrap/realm:383:27,0x3699125c5078,^
code-source-info,0x148000340,6,12677,13475,,,
code-creation,JS,10,13041,0x1480008a0,568,internalBinding node:internal/bootstrap/realm:182:45,0x3699125c4090,^
code-source-info,0x1480008a0,6,6058,6296,,,
code-creation,JS,10,13375,0x148000b00,312, node:internal/validators:162:40,0x3699125d4120,^
script-source,12,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  NumberIsFinite\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberMAX_SAFE_INTEGER\x2C\n  NumberMIN_SAFE_INTEGER\x2C\n  NumberParseInt\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RegExpPrototypeExec\x2C\n  String\x2C\n  StringPrototypeToUpperCase\x2C\n  StringPrototypeTrim\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\n    ERR_INVALID_THIS: { HideStackFramesError: ERR_INVALID_THIS }\x2C\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst { normalizeEncoding } = require('internal/util');\nconst {\n  isAsyncFunction\x2C\n  isArrayBufferView\x2C\n} = require('internal/util/types');\nconst { signals } = internalBinding('constants').os;\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isInt32(value) {\n  return value === (value | 0);\n}\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nfunction isUint32(value) {\n  return value === (value >>> 0);\n}\n\nconst octalReg = /^[0-7]+$/;\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\n\n/**\n * Parse and validate values that will be converted into mode_t (the S_*\n * constants). Only valid numbers and octal strings are allowed. They could be\n * converted to 32-bit unsigned integers or non-negative signed integers in the\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\n * behaviors.\n * @param {*} value Values to be validated\n * @param {string} name Name of the argument\n * @param {number} [def] If specified\x2C will be returned for invalid values\n * @returns {number}\n */\nfunction parseFileMode(value\x2C name\x2C def) {\n  value ??= def;\n  if (typeof value === 'string') {\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\n    }\n    value = NumberParseInt(value\x2C 8);\n  }\n\n  validateUint32(value\x2C name);\n  return value;\n}\n\n/**\n * @callback validateInteger\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInteger} */\nconst validateInteger = hideStackFrames(\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\n    if (typeof value !== 'number')\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    if (!NumberIsInteger(value))\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    if (value < min || value > max)\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\x2C\n);\n\n/**\n * @callback validateInt32\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateInt32} */\nconst validateInt32 = hideStackFrames(\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\n    // The defaults for min and max correspond to the limits of 32-bit integers.\n    if (typeof value !== 'number') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n    }\n    if (!NumberIsInteger(value)) {\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n    }\n    if (value < min || value > max) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n    }\n  }\x2C\n);\n\n/**\n * @callback validateUint32\n * @param {*} value\n * @param {string} name\n * @param {boolean} [positive=false]\n * @returns {asserts value is number}\n */\n\n/** @type {validateUint32} */\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\n  if (typeof value !== 'number') {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n  }\n  if (!NumberIsInteger(value)) {\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\n  }\n  const min = positive ? 1 : 0;\n  // 2 ** 32 === 4294967296\n  const max = 4_294_967_295;\n  if (value < min || value > max) {\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\n  }\n});\n\n/**\n * @callback validateString\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string}\n */\n\n/** @type {validateString} */\nconst validateString = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'string')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\n});\n\n/**\n * @callback validateNumber\n * @param {*} value\n * @param {string} name\n * @param {number} [min]\n * @param {number} [max]\n * @returns {asserts value is number}\n */\n\n/** @type {validateNumber} */\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\n  if (typeof value !== 'number')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\n\n  if ((min != null && value < min) || (max != null && value > max) ||\n    ((min != null || max != null) && NumberIsNaN(value))) {\n    throw new ERR_OUT_OF_RANGE(\n      name\x2C\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\n      value);\n  }\n});\n\n/**\n * @callback validateOneOf\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} oneOf\n */\n\n/** @type {validateOneOf} */\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\n    const allowed = ArrayPrototypeJoin(\n      ArrayPrototypeMap(oneOf\x2C (v) =>\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\n      '\x2C ');\n    const reason = 'must be one of: ' + allowed;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateBoolean\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean}\n */\n\n/** @type {validateBoolean} */\nconst validateBoolean = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'boolean')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\n});\n\nconst kValidateObjectNone = 0;\nconst kValidateObjectAllowNullable = 1 << 0;\nconst kValidateObjectAllowArray = 1 << 1;\nconst kValidateObjectAllowFunction = 1 << 2;\nconst kValidateObjectAllowObjects = kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\n  kValidateObjectAllowArray |\n  kValidateObjectAllowFunction;\n\n/**\n * @callback validateObject\n * @param {*} value\n * @param {string} name\n * @param {number} [options]\n */\n\n/** @type {validateObject} */\nconst validateObject = hideStackFrames(\n  (value\x2C name\x2C options = kValidateObjectNone) => {\n    if (options === kValidateObjectNone) {\n      if (value === null || ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      if (typeof value !== 'object') {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    } else {\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\n\n      if (throwOnNullable && value === null) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\n\n      if (throwOnArray && ArrayIsArray(value)) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\n      const typeofValue = typeof value;\n\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\n      }\n    }\n  });\n\n/**\n * @callback validateDictionary - We are using the Web IDL Standard definition\n *                                of "dictionary" here\x2C which means any value\n *                                whose Type is either Undefined\x2C Null\x2C or\n *                                Object (which includes functions).\n * @param {*} value\n * @param {string} name\n * @see https://webidl.spec.whatwg.org/#es-dictionary\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\n */\n\n/** @type {validateDictionary} */\nconst validateDictionary = hideStackFrames(\n  (value\x2C name) => {\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\n    }\n  });\n\n/**\n * @callback validateArray\n * @param {*} value\n * @param {string} name\n * @param {number} [minLength]\n * @returns {asserts value is any[]}\n */\n\n/** @type {validateArray} */\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\n  if (!ArrayIsArray(value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\n  }\n  if (value.length < minLength) {\n    const reason = `must be longer than ${minLength}`;\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\n  }\n});\n\n/**\n * @callback validateStringArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is string[]}\n */\n\n/** @type {validateStringArray} */\nconst validateStringArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateString here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (typeof value[i] !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateBooleanArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is boolean[]}\n */\n\n/** @type {validateBooleanArray} */\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; ++i) {\n    // Don't use validateBoolean here for performance reasons\x2C as\n    // we would generate intermediate strings for the name.\n    if (value[i] !== true && value[i] !== false) {\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\n    }\n  }\n});\n\n/**\n * @callback validateAbortSignalArray\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is AbortSignal[]}\n */\n\n/** @type {validateAbortSignalArray} */\nfunction validateAbortSignalArray(value\x2C name) {\n  validateArray(value\x2C name);\n  for (let i = 0; i < value.length; i++) {\n    const signal = value[i];\n    const indexedName = `${name}[${i}]`;\n    if (signal == null) {\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\n    }\n    validateAbortSignal(signal\x2C indexedName);\n  }\n}\n\n/**\n * @param {*} signal\n * @param {string} [name='signal']\n * @returns {asserts signal is keyof signals}\n */\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\n  validateString(signal\x2C name);\n\n  if (signals[signal] === undefined) {\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\n      throw new ERR_UNKNOWN_SIGNAL(signal +\n                                   ' (signals must use all capital letters)');\n    }\n\n    throw new ERR_UNKNOWN_SIGNAL(signal);\n  }\n});\n\n/**\n * @callback validateBuffer\n * @param {*} buffer\n * @param {string} [name='buffer']\n * @returns {asserts buffer is ArrayBufferView}\n */\n\n/** @type {validateBuffer} */\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\n  if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buffer);\n  }\n});\n\n/**\n * @param {string} data\n * @param {string} encoding\n */\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\n  const normalizedEncoding = normalizeEncoding(encoding);\n  const length = data.length;\n\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\n                                    `is invalid for data of length ${length}`);\n  }\n});\n\n/**\n * Check that the port number is not NaN when coerced to a number\x2C\n * is an integer and that it falls within the legal range of port numbers.\n * @param {*} port\n * @param {string} [name='Port']\n * @param {boolean} [allowZero=true]\n * @returns {number}\n */\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\n      +port !== (+port >>> 0) ||\n      port > 0xFFFF ||\n      (port === 0 && !allowZero)) {\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\n  }\n  return port | 0;\n});\n\n/**\n * @callback validateAbortSignal\n * @param {*} signal\n * @param {string} name\n */\n\n/** @type {validateAbortSignal} */\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\n  if (signal !== undefined &&\n      (signal === null ||\n       typeof signal !== 'object' ||\n       !('aborted' in signal))) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n});\n\n/**\n * @callback validateFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validateFunction} */\nconst validateFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function')\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validatePlainFunction\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is Function}\n */\n\n/** @type {validatePlainFunction} */\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\n  if (typeof value !== 'function' || isAsyncFunction(value))\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\n});\n\n/**\n * @callback validateUndefined\n * @param {*} value\n * @param {string} name\n * @returns {asserts value is undefined}\n */\n\n/** @type {validateUndefined} */\nconst validateUndefined = hideStackFrames((value\x2C name) => {\n  if (value !== undefined)\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\n});\n\n/**\n * @template T\n * @param {T} value\n * @param {string} name\n * @param {T[]} union\n */\nfunction validateUnion(value\x2C name\x2C union) {\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\n  }\n}\n\n/*\n  The rules for the Link header field are described here:\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\n\n  This regex validates any string surrounded by angle brackets\n  (not necessarily a valid URI reference) followed by zero or more\n  link-params separated by semicolons.\n*/\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\n\n/**\n * @param {any} value\n * @param {string} name\n */\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\n  if (\n    typeof value === 'undefined' ||\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\n  ) {\n    throw new ERR_INVALID_ARG_VALUE(\n      name\x2C\n      value\x2C\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n    );\n  }\n});\n\n/**\n * Validate provided `this` object by checking that it has specific own property\n * @param {any} object\n * @param {string|symbol} fieldKey\n * @param {string} className\n */\nconst validateThisInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\n    throw new ERR_INVALID_THIS(className);\n  }\n});\n\n/**\n * @param {any} hints\n * @returns {string}\n */\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\n  if (typeof hints === 'string') {\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\n    return hints;\n  } else if (ArrayIsArray(hints)) {\n    const hintsLength = hints.length;\n    let result = '';\n\n    if (hintsLength === 0) {\n      return result;\n    }\n\n    for (let i = 0; i < hintsLength; i++) {\n      const link = hints[i];\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\n      result += link;\n\n      if (i !== hintsLength - 1) {\n        result += '\x2C ';\n      }\n    }\n\n    return result;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE(\n    'hints'\x2C\n    hints\x2C\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\n  );\n});\n\n// 1. Returns false for undefined and NaN\n// 2. Returns true for finite numbers\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers\nconst validateFiniteNumber = hideStackFrames((number\x2C name) => {\n  // Common case\n  if (number === undefined) {\n    return false;\n  }\n\n  if (NumberIsFinite(number)) {\n    return true; // Is a valid number\n  }\n\n  if (NumberIsNaN(number)) {\n    return false;\n  }\n\n  validateNumber(number\x2C name);\n\n  // Infinite numbers\n  throw new ERR_OUT_OF_RANGE(name\x2C 'a finite number'\x2C number);\n});\n\n// 1. Returns def for number when it's undefined or NaN\n// 2. Returns number for finite numbers >= lower and <= upper\n// 3. Throws ERR_INVALID_ARG_TYPE for non-numbers\n// 4. Throws ERR_OUT_OF_RANGE for infinite numbers or numbers > upper or < lower\nconst checkRangesOrGetDefault = hideStackFrames(\n  (number\x2C name\x2C lower\x2C upper\x2C def) => {\n    if (!validateFiniteNumber(number\x2C name)) {\n      return def;\n    }\n    if (number < lower || number > upper) {\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${lower} and <= ${upper}`\x2C number);\n    }\n    return number;\n  }\x2C\n);\n\nmodule.exports = {\n  isInt32\x2C\n  isUint32\x2C\n  parseFileMode\x2C\n  validateArray\x2C\n  validateStringArray\x2C\n  validateBooleanArray\x2C\n  validateAbortSignalArray\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateDictionary\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateNumber\x2C\n  validateObject\x2C\n  kValidateObjectNone\x2C\n  kValidateObjectAllowNullable\x2C\n  kValidateObjectAllowArray\x2C\n  kValidateObjectAllowFunction\x2C\n  kValidateObjectAllowObjects\x2C\n  kValidateObjectAllowObjectsAndNull\x2C\n  validateOneOf\x2C\n  validatePlainFunction\x2C\n  validatePort\x2C\n  validateSignalName\x2C\n  validateString\x2C\n  validateUint32\x2C\n  validateUndefined\x2C\n  validateUnion\x2C\n  validateAbortSignal\x2C\n  validateLinkHeaderValue\x2C\n  validateThisInternalField\x2C\n  validateFiniteNumber\x2C\n  checkRangesOrGetDefault\x2C\n};\n
code-source-info,0x148000b00,12,4447,4559,,,
tick,0x101646dd0,13833,0,0x0,0,0x621fa658ac7,0x3231531cdefe,0x3231531cb3f9,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,13958,0x148000c60,144,isPosixPathSeparator node:path:68:30,0xb1c4a409690,^
script-source,37,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototypeBind\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeLastIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\n\nconst {\n  CHAR_UPPERCASE_A\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_UPPERCASE_Z\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_QUESTION_MARK\x2C\n} = require('internal/constants');\nconst {\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\n\nconst {\n  isWindows\x2C\n  getLazy\x2C\n} = require('internal/util');\n\nconst lazyMatchGlobPattern = getLazy(() => require('internal/fs/glob').matchGlobPattern);\n\nfunction isPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code) {\n  return code === CHAR_FORWARD_SLASH;\n}\n\nconst WINDOWS_RESERVED_NAMES = [\n  'CON'\x2C 'PRN'\x2C 'AUX'\x2C 'NUL'\x2C\n  'COM1'\x2C 'COM2'\x2C 'COM3'\x2C 'COM4'\x2C 'COM5'\x2C 'COM6'\x2C 'COM7'\x2C 'COM8'\x2C 'COM9'\x2C\n  'LPT1'\x2C 'LPT2'\x2C 'LPT3'\x2C 'LPT4'\x2C 'LPT5'\x2C 'LPT6'\x2C 'LPT7'\x2C 'LPT8'\x2C 'LPT9'\x2C\n];\n\nfunction isWindowsReservedName(path\x2C colonIndex) {\n  const devicePart = StringPrototypeToUpperCase(StringPrototypeSlice(path\x2C 0\x2C colonIndex));\n  return ArrayPrototypeIncludes(WINDOWS_RESERVED_NAMES\x2C devicePart);\n}\n\nfunction isWindowsDeviceRoot(code) {\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\n  let res = '';\n  let lastSegmentLength = 0;\n  let lastSlash = -1;\n  let dots = 0;\n  let code = 0;\n  for (let i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = StringPrototypeCharCodeAt(path\x2C i);\n    else if (isPathSeparator(code))\n      break;\n    else\n      code = CHAR_FORWARD_SLASH;\n\n    if (isPathSeparator(code)) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\n          if (res.length > 2) {\n            const lastSlashIndex = res.length - lastSegmentLength - 1;\n            if (lastSlashIndex === -1) {\n              res = '';\n              lastSegmentLength = 0;\n            } else {\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\n              lastSegmentLength =\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\n            }\n            lastSlash = i;\n            dots = 0;\n            continue;\n          } else if (res.length !== 0) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          res += res.length > 0 ? `${separator}..` : '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\n        else\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === CHAR_DOT && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction formatExt(ext) {\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\n}\n\n/**\n * @param {string} sep\n * @param {{\n *  dir?: string;\n *  root?: string;\n *  base?: string;\n *  name?: string;\n *  ext?: string;\n *  }} pathObject\n * @returns {string}\n */\nfunction _format(sep\x2C pathObject) {\n  validateObject(pathObject\x2C 'pathObject');\n  const dir = pathObject.dir || pathObject.root;\n  const base = pathObject.base ||\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\n  if (!dir) {\n    return base;\n  }\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nconst forwardSlashRegExp = /\\//g;\n\nconst win32 = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    let resolvedDevice = '';\n    let resolvedTail = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= -1; i--) {\n      let path;\n      if (i >= 0) {\n        path = args[i];\n        validateString(path\x2C `paths[${i}]`);\n\n        // Skip empty entries\n        if (path.length === 0) {\n          continue;\n        }\n      } else if (resolvedDevice.length === 0) {\n        path = process.cwd();\n        // Fast path for current directory\n        if (args.length === 0 || ((args.length === 1 && (args[0] === '' || args[0] === '.')) &&\n            isPathSeparator(StringPrototypeCharCodeAt(path\x2C 0)))) {\n          if (!isWindows) {\n            path = StringPrototypeReplace(path\x2C forwardSlashRegExp\x2C '\\\\');\n          }\n          return path;\n        }\n      } else {\n        // Windows has the concept of drive-specific current working\n        // directories. If we've resolved a drive letter but not yet an\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\n        // the drive cwd is not available. We're sure the device is not\n        // a UNC path at this points\x2C because UNC paths are always absolute.\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\n\n        // Verify that a cwd was found and that it actually points\n        // to our drive. If not\x2C default to the drive's root.\n        if (path === undefined ||\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\n            StringPrototypeToLowerCase(resolvedDevice) &&\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\n          path = `${resolvedDevice}\\\\`;\n        }\n      }\n\n      const len = path.length;\n      let rootEnd = 0;\n      let device = '';\n      let isAbsolute = false;\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n      // Try to match a root\n      if (len === 1) {\n        if (isPathSeparator(code)) {\n          // `path` contains just a path separator\n          rootEnd = 1;\n          isAbsolute = true;\n        }\n      } else if (isPathSeparator(code)) {\n        // Possible UNC root\n\n        // If we started with a separator\x2C we know we at least have an\n        // absolute path of some kind (UNC or otherwise)\n        isAbsolute = true;\n\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n          // Matched double path separator at beginning\n          let j = 2;\n          let last = j;\n          // Match 1 or more non-path separators\n          while (j < len &&\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n            // Matched!\n            last = j;\n            // Match 1 or more path separators\n            while (j < len &&\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j < len && j !== last) {\n              // Matched!\n              last = j;\n              // Match 1 or more non-path separators\n              while (j < len &&\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n                j++;\n              }\n              if (j === len || j !== last) {\n                if (firstPart !== '.' && firstPart !== '?') {\n                  // We matched a UNC root\n                  device =\n                    `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                  rootEnd = j;\n                } else {\n                  // We matched a device root (e.g. \\\\\\\\.\\\\PHYSICALDRIVE0)\n                  device = `\\\\\\\\${firstPart}`;\n                  rootEnd = 4;\n                }\n              }\n            }\n          }\n        } else {\n          rootEnd = 1;\n        }\n      } else if (isWindowsDeviceRoot(code) &&\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n        // Possible device root\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\n        rootEnd = 2;\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n          // Treat separator following drive name as an absolute path\n          // indicator\n          isAbsolute = true;\n          rootEnd = 3;\n        }\n      }\n\n      if (device.length > 0) {\n        if (resolvedDevice.length > 0) {\n          if (StringPrototypeToLowerCase(device) !==\n              StringPrototypeToLowerCase(resolvedDevice))\n            // This path points to another device so it is not applicable\n            continue;\n        } else {\n          resolvedDevice = device;\n        }\n      }\n\n      if (resolvedAbsolute) {\n        if (resolvedDevice.length > 0)\n          break;\n      } else {\n        resolvedTail =\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\n        resolvedAbsolute = isAbsolute;\n        if (isAbsolute && resolvedDevice.length > 0) {\n          break;\n        }\n      }\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C\n    // but handle relative paths to be safe (might happen when process.cwd()\n    // fails)\n\n    // Normalize the tail path\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\n                                   isPathSeparator);\n\n    return resolvedAbsolute ?\n      `${resolvedDevice}\\\\${resolvedTail}` :\n      `${resolvedDevice}${resolvedTail}` || '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = 0;\n    let device;\n    let isAbsolute = false;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    // Try to match a root\n    if (len === 1) {\n      // `path` contains just a single char\x2C exit early to avoid\n      // unnecessary work\n      return isPosixPathSeparator(code) ? '\\\\' : path;\n    }\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      // If we started with a separator\x2C we know we at least have an absolute\n      // path of some kind (UNC or otherwise)\n      isAbsolute = true;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len || j !== last) {\n              if (firstPart === '.' || firstPart === '?') {\n                // We matched a device root (e.g. \\\\\\\\.\\\\PHYSICALDRIVE0)\n                device = `\\\\\\\\${firstPart}`;\n                rootEnd = 4;\n              } else if (j === len) {\n                // We matched a UNC root only\n                // Return the normalized version of the UNC root since there\n                // is nothing left to process\n                return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\n              } else {\n                // We matched a UNC root with leftovers\n                device =\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\n                rootEnd = j;\n              }\n            }\n          }\n        }\n      } else {\n        rootEnd = 1;\n      }\n    } else {\n      const colonIndex = StringPrototypeIndexOf(path\x2C ':');\n      if (colonIndex > 0) {\n        if (isWindowsDeviceRoot(code) && colonIndex === 1) {\n          device = StringPrototypeSlice(path\x2C 0\x2C 2);\n          rootEnd = 2;\n          if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n            isAbsolute = true;\n            rootEnd = 3;\n          }\n        } else if (isWindowsReservedName(path\x2C colonIndex)) {\n          device = StringPrototypeSlice(path\x2C 0\x2C colonIndex + 1);\n          rootEnd = colonIndex + 1;\n\n        }\n      }\n    }\n\n    let tail = rootEnd < len ?\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\n      '';\n    if (tail.length === 0 && !isAbsolute)\n      tail = '.';\n    if (tail.length > 0 &&\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\n      tail += '\\\\';\n    if (!isAbsolute && device === undefined && StringPrototypeIncludes(path\x2C ':')) {\n      // If the original path was not absolute and if we have not been able to\n      // resolve it relative to a particular device\x2C we need to ensure that the\n      // `tail` has not become something that Windows might interpret as an\n      // absolute path. See CVE-2024-36139.\n      if (tail.length >= 2 &&\n          isWindowsDeviceRoot(StringPrototypeCharCodeAt(tail\x2C 0)) &&\n          StringPrototypeCharCodeAt(tail\x2C 1) === CHAR_COLON) {\n        return `.\\\\${tail}`;\n      }\n      let index = StringPrototypeIndexOf(path\x2C ':');\n\n      do {\n        if (index === len - 1 || isPathSeparator(StringPrototypeCharCodeAt(path\x2C index + 1))) {\n          return `.\\\\${tail}`;\n        }\n      } while ((index = StringPrototypeIndexOf(path\x2C ':'\x2C index + 1)) !== -1);\n    }\n    const colonIndex = StringPrototypeIndexOf(path\x2C ':');\n    if (isWindowsReservedName(path\x2C colonIndex)) {\n      return `.\\\\${device ?? ''}${tail}`;\n    }\n    if (device === undefined) {\n      return isAbsolute ? `\\\\${tail}` : tail;\n    }\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return false;\n\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n    return isPathSeparator(code) ||\n      // Possible device root\n      (len > 2 &&\n      isWindowsDeviceRoot(code) &&\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    let joined;\n    let firstPart;\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = firstPart = arg;\n        else\n          joined += `\\\\${arg}`;\n      }\n    }\n\n    if (joined === undefined)\n      return '.';\n\n    // Make sure that the joined path doesn't start with two slashes\x2C because\n    // normalize() will mistake it for a UNC path then.\n    //\n    // This step is skipped when it is very clear that the user actually\n    // intended to point at a UNC path. This is assumed when the first\n    // non-empty string arguments starts with exactly two slashes followed by\n    // at least one more non-slash character.\n    //\n    // Note that for normalize() to treat a path as a UNC path it needs to\n    // have at least 2 components\x2C so we don't filter for that here.\n    // This means that the user can use join to construct UNC paths from\n    // a server name and a share name; for example:\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\n    let needsReplace = true;\n    let slashCount = 0;\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\n      ++slashCount;\n      const firstLen = firstPart.length;\n      if (firstLen > 1 &&\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\n        ++slashCount;\n        if (firstLen > 2) {\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\n            ++slashCount;\n          else {\n            // We matched a UNC path in the first part\n            needsReplace = false;\n          }\n        }\n      }\n    }\n    if (needsReplace) {\n      // Find any more consecutive slashes we need to replace\n      while (slashCount < joined.length &&\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\n        slashCount++;\n      }\n\n      // Replace the slashes if needed\n      if (slashCount >= 2)\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\n    }\n\n    return win32.normalize(joined);\n  }\x2C\n\n  /**\n   * It will solve the relative path from `from` to `to`\x2C for instance\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    const fromOrig = win32.resolve(from);\n    const toOrig = win32.resolve(to);\n\n    if (fromOrig === toOrig)\n      return '';\n\n    from = StringPrototypeToLowerCase(fromOrig);\n    to = StringPrototypeToLowerCase(toOrig);\n\n    if (from === to)\n      return '';\n\n    if (fromOrig.length !== from.length || toOrig.length !== to.length) {\n      const fromSplit = StringPrototypeSplit(fromOrig\x2C '\\\\');\n      const toSplit = StringPrototypeSplit(toOrig\x2C '\\\\');\n      if (fromSplit[fromSplit.length - 1] === '') {\n        fromSplit.pop();\n      }\n      if (toSplit[toSplit.length - 1] === '') {\n        toSplit.pop();\n      }\n\n      const fromLen = fromSplit.length;\n      const toLen = toSplit.length;\n      const length = fromLen < toLen ? fromLen : toLen;\n\n      let i;\n      for (i = 0; i < length; i++) {\n        if (StringPrototypeToLowerCase(fromSplit[i]) !== StringPrototypeToLowerCase(toSplit[i])) {\n          break;\n        }\n      }\n\n      if (i === 0) {\n        return toOrig;\n      } else if (i === length) {\n        if (toLen > length) {\n          return ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n        }\n        if (fromLen > length) {\n          return StringPrototypeRepeat('..\\\\'\x2C fromLen - 1 - i) + '..';\n        }\n        return '';\n      }\n\n      return StringPrototypeRepeat('..\\\\'\x2C fromLen - i) + ArrayPrototypeJoin(ArrayPrototypeSlice(toSplit\x2C i)\x2C '\\\\');\n    }\n\n    // Trim any leading backslashes\n    let fromStart = 0;\n    while (fromStart < from.length &&\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\n      fromStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let fromEnd = from.length;\n    while (\n      fromEnd - 1 > fromStart &&\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\n    ) {\n      fromEnd--;\n    }\n    const fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    let toStart = 0;\n    while (toStart < to.length &&\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\n      toStart++;\n    }\n    // Trim trailing backslashes (applicable to UNC paths only)\n    let toEnd = to.length;\n    while (toEnd - 1 > toStart &&\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\n      toEnd--;\n    }\n    const toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = fromLen < toLen ? fromLen : toLen;\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_BACKWARD_SLASH)\n        lastCommonSep = i;\n    }\n\n    // We found a mismatch before the first common path separator was seen\x2C so\n    // return the original `to`.\n    if (i !== length) {\n      if (lastCommonSep === -1)\n        return toOrig;\n    } else {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\n        }\n        if (i === 2) {\n          // We get here if `from` is the device root.\n          // For example: from='C:\\\\'; to='C:\\\\foo'\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\n        }\n      }\n      if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_BACKWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n          lastCommonSep = i;\n        } else if (i === 2) {\n          // We get here if `to` is the device root.\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n          lastCommonSep = 3;\n        }\n      }\n      if (lastCommonSep === -1)\n        lastCommonSep = 0;\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to` and\n    // `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\n        out += out.length === 0 ? '..' : '\\\\..';\n      }\n    }\n\n    toStart += lastCommonSep;\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\n\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\n      ++toStart;\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Note: this will *probably* throw somewhere.\n    if (typeof path !== 'string' || path.length === 0)\n      return path;\n\n    const resolvedPath = win32.resolve(path);\n\n    if (resolvedPath.length <= 2)\n      return path;\n\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\n      // Possible UNC root\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\n        }\n      }\n    } else if (\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\n    ) {\n      // Matched device root\x2C convert the path to a long UNC path\n      return `\\\\\\\\?\\\\${resolvedPath}`;\n    }\n\n    return resolvedPath;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    const len = path.length;\n    if (len === 0)\n      return '.';\n    let rootEnd = -1;\n    let offset = 0;\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      // `path` contains just a path separator\x2C exit early to avoid\n      // unnecessary work or a dot.\n      return isPathSeparator(code) ? path : '.';\n    }\n\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = offset = 1;\n\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              return path;\n            }\n            if (j !== last) {\n              // We matched a UNC root with leftovers\n\n              // Offset by 1 to include the separator after the UNC root to\n              // treat it as a "normal root" on top of a (UNC) root\n              rootEnd = offset = j + 1;\n            }\n          }\n        }\n      }\n    // Possible device root\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      rootEnd =\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\n      offset = rootEnd;\n    }\n\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = len - 1; i >= offset; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) {\n      if (rootEnd === -1)\n        return '.';\n\n      end = rootEnd;\n    }\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n    if (path.length >= 2 &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      start = 2;\n    }\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= start; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (isPathSeparator(code)) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= start; --i) {\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let start = 0;\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Check for a drive letter prefix so as not to mistake the following\n    // path separator as an extra separator at the end of the path that can be\n    // disregarded\n\n    if (path.length >= 2 &&\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\n      start = startPart = 2;\n    }\n\n    for (let i = path.length - 1; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *  dir: string;\n   *  root: string;\n   *  base: string;\n   *  name: string;\n   *  ext: string;\n   *  }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n\n    const len = path.length;\n    let rootEnd = 0;\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\n\n    if (len === 1) {\n      if (isPathSeparator(code)) {\n        // `path` contains just a path separator\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      ret.base = ret.name = path;\n      return ret;\n    }\n    // Try to match a root\n    if (isPathSeparator(code)) {\n      // Possible UNC root\n\n      rootEnd = 1;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\n        // Matched double path separator at beginning\n        let j = 2;\n        let last = j;\n        // Match 1 or more non-path separators\n        while (j < len &&\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n          j++;\n        }\n        if (j < len && j !== last) {\n          // Matched!\n          last = j;\n          // Match 1 or more path separators\n          while (j < len &&\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n            j++;\n          }\n          if (j < len && j !== last) {\n            // Matched!\n            last = j;\n            // Match 1 or more non-path separators\n            while (j < len &&\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\n              j++;\n            }\n            if (j === len) {\n              // We matched a UNC root only\n              rootEnd = j;\n            } else if (j !== last) {\n              // We matched a UNC root with leftovers\n              rootEnd = j + 1;\n            }\n          }\n        }\n      }\n    } else if (isWindowsDeviceRoot(code) &&\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\n      // Possible device root\n      if (len <= 2) {\n        // `path` contains just a drive root\x2C exit early to avoid\n        // unnecessary work\n        ret.root = ret.dir = path;\n        return ret;\n      }\n      rootEnd = 2;\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\n        if (len === 3) {\n          // `path` contains just a drive root\x2C exit early to avoid\n          // unnecessary work\n          ret.root = ret.dir = path;\n          return ret;\n        }\n        rootEnd = 3;\n      }\n    }\n    if (rootEnd > 0)\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\n\n    let startDot = -1;\n    let startPart = rootEnd;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= rootEnd; --i) {\n      code = StringPrototypeCharCodeAt(path\x2C i);\n      if (isPathSeparator(code)) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n           startDot === end - 1 &&\n           startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    // If the directory is the root\x2C use the entire root as the `dir` including\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n    if (startPart > 0 && startPart !== rootEnd)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else\n      ret.dir = ret.root;\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return lazyMatchGlobPattern()(path\x2C pattern\x2C true);\n  }\x2C\n\n  sep: '\\\\'\x2C\n  delimiter: ';'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nconst posixCwd = (() => {\n  if (isWindows) {\n    // Converts Windows' backslash path separators to POSIX forward slashes\n    // and truncates any drive indicator\n    const regexp = /\\\\/g;\n    return () => {\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\n    };\n  }\n\n  // We're already on POSIX\x2C no need for any transformations\n  return () => process.cwd();\n})();\n\nconst posix = {\n  /**\n   * path.resolve([from ...]\x2C to)\n   * @param {...string} args\n   * @returns {string}\n   */\n  resolve(...args) {\n    if (args.length === 0 || (args.length === 1 && (args[0] === '' || args[0] === '.'))) {\n      const cwd = posixCwd();\n      if (StringPrototypeCharCodeAt(cwd\x2C 0) === CHAR_FORWARD_SLASH) {\n        return cwd;\n      }\n    }\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n\n    for (let i = args.length - 1; i >= 0 && !resolvedAbsolute; i--) {\n      const path = args[i];\n      validateString(path\x2C `paths[${i}]`);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = `${path}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    if (!resolvedAbsolute) {\n      const cwd = posixCwd();\n      resolvedPath = `${cwd}/${resolvedPath}`;\n      resolvedAbsolute =\n        StringPrototypeCharCodeAt(cwd\x2C 0) === CHAR_FORWARD_SLASH;\n    }\n\n    // At this point the path should be resolved to a full absolute path\x2C but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\n                                   isPosixPathSeparator);\n\n    if (resolvedAbsolute) {\n      return `/${resolvedPath}`;\n    }\n    return resolvedPath.length > 0 ? resolvedPath : '.';\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  normalize(path) {\n    validateString(path\x2C 'path');\n\n    if (path.length === 0)\n      return '.';\n\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    const trailingSeparator =\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\n\n    // Normalize the path\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\n\n    if (path.length === 0) {\n      if (isAbsolute)\n        return '/';\n      return trailingSeparator ? './' : '.';\n    }\n    if (trailingSeparator)\n      path += '/';\n\n    return isAbsolute ? `/${path}` : path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {boolean}\n   */\n  isAbsolute(path) {\n    validateString(path\x2C 'path');\n    return path.length > 0 &&\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n  }\x2C\n\n  /**\n   * @param {...string} args\n   * @returns {string}\n   */\n  join(...args) {\n    if (args.length === 0)\n      return '.';\n\n    const path = [];\n    for (let i = 0; i < args.length; ++i) {\n      const arg = args[i];\n      validateString(arg\x2C 'path');\n      if (arg.length > 0) {\n        path.push(arg);\n      }\n    }\n\n    if (path.length === 0)\n      return '.';\n\n    return posix.normalize(ArrayPrototypeJoin(path\x2C '/'));\n  }\x2C\n\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @returns {string}\n   */\n  relative(from\x2C to) {\n    validateString(from\x2C 'from');\n    validateString(to\x2C 'to');\n\n    if (from === to)\n      return '';\n\n    // Trim leading forward slashes.\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to)\n      return '';\n\n    const fromStart = 1;\n    const fromEnd = from.length;\n    const fromLen = fromEnd - fromStart;\n    const toStart = 1;\n    const toLen = to.length - toStart;\n\n    // Compare paths to find the longest common path from root\n    const length = (fromLen < toLen ? fromLen : toLen);\n    let lastCommonSep = -1;\n    let i = 0;\n    for (; i < length; i++) {\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\n        break;\n      else if (fromCode === CHAR_FORWARD_SLASH)\n        lastCommonSep = i;\n    }\n    if (i === length) {\n      if (toLen > length) {\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\n          // We get here if `from` is the exact base path for `to`.\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\n        }\n        if (i === 0) {\n          // We get here if `from` is the root\n          // For example: from='/'; to='/foo'\n          return StringPrototypeSlice(to\x2C toStart + i);\n        }\n      } else if (fromLen > length) {\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\n            CHAR_FORWARD_SLASH) {\n          // We get here if `to` is the exact base path for `from`.\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\n          lastCommonSep = i;\n        } else if (i === 0) {\n          // We get here if `to` is the root.\n          // For example: from='/foo/bar'; to='/'\n          lastCommonSep = 0;\n        }\n      }\n    }\n\n    let out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`.\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd ||\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\n        out += out.length === 0 ? '..' : '/..';\n      }\n    }\n\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\n    // the common path parts.\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  toNamespacedPath(path) {\n    // Non-op on posix systems\n    return path;\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  dirname(path) {\n    validateString(path\x2C 'path');\n    if (path.length === 0)\n      return '.';\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let end = -1;\n    let matchedSlash = true;\n    for (let i = path.length - 1; i >= 1; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1)\n      return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1)\n      return '//';\n    return StringPrototypeSlice(path\x2C 0\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @param {string} [suffix]\n   * @returns {string}\n   */\n  basename(path\x2C suffix) {\n    if (suffix !== undefined)\n      validateString(suffix\x2C 'suffix');\n    validateString(path\x2C 'path');\n\n    let start = 0;\n    let end = -1;\n    let matchedSlash = true;\n\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\n      if (suffix === path)\n        return '';\n      let extIdx = suffix.length - 1;\n      let firstNonSlashEnd = -1;\n      for (let i = path.length - 1; i >= 0; --i) {\n        const code = StringPrototypeCharCodeAt(path\x2C i);\n        if (code === CHAR_FORWARD_SLASH) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string\x2C stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator\x2C remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension\x2C so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match\x2C so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end)\n        end = firstNonSlashEnd;\n      else if (end === -1)\n        end = path.length;\n      return StringPrototypeSlice(path\x2C start\x2C end);\n    }\n    for (let i = path.length - 1; i >= 0; --i) {\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // path component\n        matchedSlash = false;\n        end = i + 1;\n      }\n    }\n\n    if (end === -1)\n      return '';\n    return StringPrototypeSlice(path\x2C start\x2C end);\n  }\x2C\n\n  /**\n   * @param {string} path\n   * @returns {string}\n   */\n  extname(path) {\n    validateString(path\x2C 'path');\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n    for (let i = path.length - 1; i >= 0; --i) {\n      const char = path[i];\n      if (char === '/') {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (char === '.') {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 ||\n        end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        (preDotState === 1 &&\n         startDot === end - 1 &&\n         startDot === startPart + 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\n  }\x2C\n\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\n\n  /**\n   * @param {string} path\n   * @returns {{\n   *   dir: string;\n   *   root: string;\n   *   base: string;\n   *   name: string;\n   *   ext: string;\n   *   }}\n   */\n  parse(path) {\n    validateString(path\x2C 'path');\n\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\n    if (path.length === 0)\n      return ret;\n    const isAbsolute =\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\n    let start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    let startDot = -1;\n    let startPart = 0;\n    let end = -1;\n    let matchedSlash = true;\n    let i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    let preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      const code = StringPrototypeCharCodeAt(path\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string\x2C stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator\x2C mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === CHAR_DOT) {\n        // If this is our first dot\x2C mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (end !== -1) {\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\n      if (startDot === -1 ||\n          // We saw a non-dot character immediately before the dot\n          preDotState === 0 ||\n          // The (right-most) trimmed path component is exactly '..'\n          (preDotState === 1 &&\n          startDot === end - 1 &&\n          startDot === startPart + 1)) {\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\n      } else {\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\n      }\n    }\n\n    if (startPart > 0)\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\n    else if (isAbsolute)\n      ret.dir = '/';\n\n    return ret;\n  }\x2C\n\n  matchesGlob(path\x2C pattern) {\n    return lazyMatchGlobPattern()(path\x2C pattern\x2C false);\n  }\x2C\n\n  sep: '/'\x2C\n  delimiter: ':'\x2C\n  win32: null\x2C\n  posix: null\x2C\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\n// Legacy internal API\x2C docs-only deprecated: DEP0080\nwin32._makeLong = win32.toNamespacedPath;\nposix._makeLong = posix.toNamespacedPath;\n\nmodule.exports = isWindows ? win32 : posix;\n
code-source-info,0x148000c60,37,2128,2176,,,
code-creation,JS,10,15166,0x148000d20,2960,normalizeString node:path:89:25,0xb1c4a4098d0,^
code-source-info,0x148000d20,37,2865,4781,,,
tick,0x19392e988,15166,0,0x0,9,0x621fa658ac7,0x3231531cdefe,0x3231531cb3f9,0x3231531cb0b8,0x277c96e814b5
new,MemoryChunk,0x32a185940000,262144
code-creation,JS,10,15708,0x1480018e0,320,getCLIOptionsFromBinding node:internal/options:29:34,0x3699125dae68,^
script-source,14,node:internal/options,'use strict';\n\nconst {\n  ArrayPrototypeMap\x2C\n  ArrayPrototypeSort\x2C\n  ObjectFromEntries\x2C\n  ObjectKeys\x2C\n  StringPrototypeReplace\x2C\n} = primordials;\n\nconst {\n  getCLIOptionsValues\x2C\n  getCLIOptionsInfo\x2C\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\n  getEnvOptionsInputType\x2C\n  getNamespaceOptionsInputType\x2C\n} = internalBinding('options');\n\nlet warnOnAllowUnauthorized = true;\n\nlet optionsDict;\nlet cliInfo;\nlet embedderOptions;\n\n// getCLIOptionsValues() would serialize the option values from C++ land.\n// It would error if the values are queried before bootstrap is\n// complete so that we don't accidentally include runtime-dependent\n// states into a runtime-independent snapshot.\nfunction getCLIOptionsFromBinding() {\n  return optionsDict ??= getCLIOptionsValues();\n}\n\nfunction getCLIOptionsInfoFromBinding() {\n  return cliInfo ??= getCLIOptionsInfo();\n}\n\nfunction getEmbedderOptions() {\n  return embedderOptions ??= getEmbedderOptionsFromBinding();\n}\n\nfunction generateConfigJsonSchema() {\n  const envOptionsMap = getEnvOptionsInputType();\n  const namespaceOptionsMap = getNamespaceOptionsInputType();\n\n  function createPropertyForType(type) {\n    if (type === 'array') {\n      return {\n        __proto__: null\x2C\n        oneOf: [\n          { __proto__: null\x2C type: 'string' }\x2C\n          { __proto__: null\x2C items: { __proto__: null\x2C type: 'string'\x2C minItems: 1 }\x2C type: 'array' }\x2C\n        ]\x2C\n      };\n    }\n\n    return { __proto__: null\x2C type };\n  }\n\n  const schema = {\n    __proto__: null\x2C\n    $schema: 'https://json-schema.org/draft/2020-12/schema'\x2C\n    additionalProperties: false\x2C\n    properties: {\n      $schema: {\n        __proto__: null\x2C\n        type: 'string'\x2C\n      }\x2C\n      nodeOptions: {\n        __proto__: null\x2C\n        additionalProperties: false\x2C\n        properties: { __proto__: null }\x2C\n        type: 'object'\x2C\n      }\x2C\n      __proto__: null\x2C\n    }\x2C\n    type: 'object'\x2C\n  };\n\n  // Get the root properties object for adding namespaces\n  const rootProperties = schema.properties;\n  const nodeOptions = rootProperties.nodeOptions.properties;\n\n  // Add env options to nodeOptions (backward compatibility)\n  for (const { 0: key\x2C 1: type } of envOptionsMap) {\n    const keyWithoutPrefix = StringPrototypeReplace(key\x2C '--'\x2C '');\n    nodeOptions[keyWithoutPrefix] = createPropertyForType(type);\n  }\n\n  // Add namespace properties at the root level\n  for (const { 0: namespace\x2C 1: optionsMap } of namespaceOptionsMap) {\n    // Create namespace object at the root level\n    rootProperties[namespace] = {\n      __proto__: null\x2C\n      type: 'object'\x2C\n      additionalProperties: false\x2C\n      properties: { __proto__: null }\x2C\n    };\n\n    const namespaceProperties = rootProperties[namespace].properties;\n\n    // Add all options for this namespace\n    for (const { 0: optionName\x2C 1: optionType } of optionsMap) {\n      const keyWithoutPrefix = StringPrototypeReplace(optionName\x2C '--'\x2C '');\n      namespaceProperties[keyWithoutPrefix] = createPropertyForType(optionType);\n    }\n\n    // Sort the namespace properties alphabetically\n    const sortedNamespaceKeys = ArrayPrototypeSort(ObjectKeys(namespaceProperties));\n    const sortedNamespaceProperties = ObjectFromEntries(\n      ArrayPrototypeMap(sortedNamespaceKeys\x2C (key) => [key\x2C namespaceProperties[key]])\x2C\n    );\n    rootProperties[namespace].properties = sortedNamespaceProperties;\n  }\n\n  // Sort the top-level properties by key alphabetically\n  const sortedKeys = ArrayPrototypeSort(ObjectKeys(nodeOptions));\n  const sortedProperties = ObjectFromEntries(\n    ArrayPrototypeMap(sortedKeys\x2C (key) => [key\x2C nodeOptions[key]])\x2C\n  );\n\n  schema.properties.nodeOptions.properties = sortedProperties;\n\n  // Also sort the root level properties\n  const sortedRootKeys = ArrayPrototypeSort(ObjectKeys(rootProperties));\n  const sortedRootProperties = ObjectFromEntries(\n    ArrayPrototypeMap(sortedRootKeys\x2C (key) => [key\x2C rootProperties[key]])\x2C\n  );\n\n  schema.properties = sortedRootProperties;\n\n  return schema;\n}\n\nfunction refreshOptions() {\n  optionsDict = undefined;\n}\n\nfunction getOptionValue(optionName) {\n  return getCLIOptionsFromBinding()[optionName];\n}\n\nfunction getAllowUnauthorized() {\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\n\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\n    warnOnAllowUnauthorized = false;\n    process.emitWarning(\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\n      'environment variable to \\'0\\' makes TLS connections ' +\n      'and HTTPS requests insecure by disabling ' +\n      'certificate verification.');\n  }\n  return allowUnauthorized;\n}\n\nmodule.exports = {\n  getCLIOptionsInfo: getCLIOptionsInfoFromBinding\x2C\n  getOptionValue\x2C\n  getAllowUnauthorized\x2C\n  getEmbedderOptions\x2C\n  generateConfigJsonSchema\x2C\n  refreshOptions\x2C\n};\n
code-source-info,0x1480018e0,14,716,770,,,
code-creation,JS,10,15791,0x148001a40,120,getOptionValue node:internal/options:138:24,0x3699125dbab8,^
code-source-info,0x148001a40,14,4045,4110,,,
tick,0x101646dd0,16333,0,0x0,0,0x3231531c8eef,0x3231531c958e,0x3231531c2e58,0x3231531c5370,0x3231531c4482,0x3231531c41f3,0x3231531c4bec,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,16416,0x148001ae0,488,addReadOnlyProcessAlias node:internal/process/pre_execution:280:33,0x1f2675707e50,^
script-source,69,node:internal/process/pre_execution,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Date\x2C\n  DatePrototypeGetDate\x2C\n  DatePrototypeGetFullYear\x2C\n  DatePrototypeGetHours\x2C\n  DatePrototypeGetMinutes\x2C\n  DatePrototypeGetMonth\x2C\n  DatePrototypeGetSeconds\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  String\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  getOptionValue\x2C\n  refreshOptions\x2C\n  getEmbedderOptions\x2C\n} = require('internal/options');\nconst {\n  exposeLazyInterfaces\x2C\n  defineReplaceableLazyAttribute\x2C\n  setupCoverageHooks\x2C\n  emitExperimentalWarning\x2C\n  deprecate\x2C\n} = require('internal/util');\n\nconst {\n  ERR_MISSING_OPTION\x2C\n  ERR_ACCESS_DENIED\x2C\n} = require('internal/errors').codes;\nconst assert = require('internal/assert');\nconst {\n  namespace: {\n    addSerializeCallback\x2C\n    isBuildingSnapshot\x2C\n  }\x2C\n  runDeserializeCallbacks\x2C\n} = require('internal/v8/startup_snapshot');\n\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\n  return prepareExecution({\n    expandArgv1\x2C\n    initializeModules\x2C\n    isMainThread: true\x2C\n  });\n}\n\nfunction prepareTestRunnerMainExecution(loadUserModules = true) {\n  return prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: true\x2C\n    isMainThread: true\x2C\n    forceDefaultLoader: !loadUserModules\x2C\n  });\n}\n\nfunction prepareWorkerThreadExecution() {\n  prepareExecution({\n    expandArgv1: false\x2C\n    initializeModules: false\x2C\n    isMainThread: false\x2C\n  });\n}\n\nfunction prepareShadowRealmExecution() {\n  // Patch the process object with legacy properties and normalizations.\n  // Do not expand argv1 as it is not available in ShadowRealm.\n  patchProcessObject(false);\n  setupDebugEnv();\n\n  // Disable custom loaders in ShadowRealm.\n  setupUserModules(true);\n  const {\n    privateSymbols: {\n      host_defined_option_symbol\x2C\n    }\x2C\n  } = internalBinding('util');\n  const {\n    vm_dynamic_import_default_internal\x2C\n  } = internalBinding('symbols');\n\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\n  // always null\x2C so the native ImportModuleDynamically() callback would\n  // always fallback to look up the host-defined option from the\n  // global object using host_defined_option_symbol. Using\n  // vm_dynamic_import_default_internal as the host-defined option\n  // instructs the JS-land importModuleDynamicallyCallback() to\n  // proxy the request to defaultImportModuleDynamically().\n  globalThis[host_defined_option_symbol] =\n    vm_dynamic_import_default_internal;\n}\n\nfunction prepareExecution(options) {\n  const { expandArgv1\x2C initializeModules\x2C isMainThread\x2C forceDefaultLoader } = options;\n\n  refreshRuntimeOptions();\n\n  // Patch the process object and get the resolved main entry point.\n  const mainEntry = patchProcessObject(expandArgv1);\n  setupTraceCategoryState();\n  setupInspectorHooks();\n  setupNetworkInspection();\n  setupNavigator();\n  setupWarningHandler();\n  setupSQLite();\n  setupQuic();\n  setupWebStorage();\n  setupWebsocket();\n  setupEventsource();\n  setupCodeCoverage();\n  setupDebugEnv();\n  // Process initial diagnostic reporting configuration\x2C if present.\n  initializeReport();\n\n  // Load permission system API\n  initializePermission();\n\n  initializeSourceMapsHandlers();\n  initializeDeprecations();\n\n  initializeConfigFileSupport();\n\n  require('internal/dns/utils').initializeDns();\n\n  if (isMainThread) {\n    assert(internalBinding('worker').isMainThread);\n    // Worker threads will get the manifest in the message handler.\n\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\n    setupStacktracePrinterOnSigint();\n    initializeReportSignalHandlers();  // Main-thread-only.\n    initializeHeapSnapshotSignalHandlers();\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\n    // spawned by our child_process module\x2C then initialize IPC.\n    // This attaches some internal event listeners and creates:\n    // process.send()\x2C process.channel\x2C process.connected\x2C\n    // process.disconnect().\n    setupChildProcessIpcChannel();\n    // If this is a worker in cluster mode\x2C start up the communication\n    // channel. This needs to be done before any user code gets executed\n    // (including preload modules).\n    initializeClusterIPC();\n\n    // TODO(joyeecheung): do this for worker threads as well.\n    runDeserializeCallbacks();\n  } else {\n    assert(!internalBinding('worker').isMainThread);\n    // The setup should be called in LOAD_SCRIPT message handler.\n    assert(!initializeModules);\n  }\n\n  if (initializeModules) {\n    setupUserModules(forceDefaultLoader);\n  }\n\n  // This has to be done after the user module loader is initialized\x2C\n  // in case undici is externalized.\n  setupHttpProxy();\n\n  return mainEntry;\n}\n\nfunction setupHttpProxy() {\n  // This normalized from both --use-env-proxy and NODE_USE_ENV_PROXY settings.\n  if (!getOptionValue('--use-env-proxy')) {\n    return;\n  }\n  if (!process.env.HTTP_PROXY && !process.env.HTTPS_PROXY &&\n      !process.env.http_proxy && !process.env.https_proxy) {\n    return;\n  }\n\n  const { setGlobalDispatcher\x2C EnvHttpProxyAgent } = require('internal/deps/undici/undici');\n  const envHttpProxyAgent = new EnvHttpProxyAgent();\n  setGlobalDispatcher(envHttpProxyAgent);\n  // For fetch\x2C we need to set the global dispatcher from here.\n  // For http/https agents\x2C we'll configure the global agent when they are\n  // actually created\x2C in lib/_http_agent.js and lib/https.js.\n  // TODO(joyeecheung): This is currently guarded with NODE_USE_ENV_PROXY and --use-env-proxy.\n  // Investigate whether it's possible to enable it by default without stepping on other\n  // existing libraries that sets the global dispatcher or monkey patches the global agent.\n}\n\nfunction setupUserModules(forceDefaultLoader = false) {\n  initializeCJSLoader();\n  initializeESMLoader(forceDefaultLoader);\n  const {\n    hasStartedUserCJSExecution\x2C\n    hasStartedUserESMExecution\x2C\n  } = require('internal/modules/helpers');\n  assert(!hasStartedUserCJSExecution());\n  assert(!hasStartedUserESMExecution());\n  if (getEmbedderOptions().hasEmbedderPreload) {\n    runEmbedderPreload();\n  }\n  // Do not enable preload modules if custom loaders are disabled.\n  // For example\x2C loader workers are responsible for doing this themselves.\n  // And preload modules are not supported in ShadowRealm as well.\n  if (!forceDefaultLoader) {\n    loadPreloadModules();\n  }\n  // Need to be done after --require setup.\n  initializeFrozenIntrinsics();\n}\n\nfunction refreshRuntimeOptions() {\n  refreshOptions();\n}\n\n/**\n * Patch the process object with legacy properties and normalizations.\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\n *   the main entry point.\n * @returns {string}\n */\nfunction patchProcessObject(expandArgv1) {\n  const binding = internalBinding('process_methods');\n  binding.patchProcessObject(process);\n\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    // Only set it to true during snapshot building.\n    configurable: isBuildingSnapshot()\x2C\n    value: process.argv[0]\x2C\n  });\n\n  process.exitCode = undefined;\n  process._exiting = false;\n  process.argv[0] = process.execPath;\n\n  /** @type {string} */\n  let mainEntry;\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\n  // the entry point.\n  if (expandArgv1 && process.argv[1] && process.argv[1][0] !== '-') {\n    // Expand process.argv[1] into a full path.\n    const path = require('path');\n    try {\n      mainEntry = path.resolve(process.argv[1]);\n      process.argv[1] = mainEntry;\n    } catch {\n      // Continue regardless of error.\n    }\n  }\n\n  // We need to initialize the global console here again with process.stdout\n  // and friends for snapshot deserialization.\n  const globalConsole = require('internal/console/global');\n  const { initializeGlobalConsole } = require('internal/console/constructor');\n  initializeGlobalConsole(globalConsole);\n\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\n  // except some that we need to be able to mutate during run time.\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\n\n  return mainEntry;\n}\n\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\n  const value = getOptionValue(option);\n  if (value) {\n    ObjectDefineProperty(process\x2C name\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      configurable: true\x2C\n      enumerable\x2C\n      value\x2C\n    });\n  }\n}\n\nfunction setupWarningHandler() {\n  const {\n    onWarning\x2C\n    resetForSerialization\x2C\n  } = require('internal/process/warning');\n  if (getOptionValue('--warnings') &&\n    process.env.NODE_NO_WARNINGS !== '1') {\n    process.on('warning'\x2C onWarning);\n\n    // The code above would add the listener back during deserialization\x2C\n    // if applicable.\n    if (isBuildingSnapshot()) {\n      addSerializeCallback(() => {\n        process.removeListener('warning'\x2C onWarning);\n        resetForSerialization();\n      });\n    }\n  }\n}\n\n// https://websockets.spec.whatwg.org/\nfunction setupWebsocket() {\n  if (getOptionValue('--no-experimental-websocket')) {\n    delete globalThis.WebSocket;\n    delete globalThis.CloseEvent;\n  }\n}\n\n// https://html.spec.whatwg.org/multipage/server-sent-events.html\nfunction setupEventsource() {\n  if (!getOptionValue('--experimental-eventsource')) {\n    delete globalThis.EventSource;\n  }\n}\n\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\n//               removed.\nfunction setupNavigator() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      getOptionValue('--no-experimental-global-navigator')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\n}\n\nfunction setupSQLite() {\n  if (getOptionValue('--no-experimental-sqlite')) {\n    return;\n  }\n\n  const { BuiltinModule } = require('internal/bootstrap/realm');\n  BuiltinModule.allowRequireByUsers('sqlite');\n}\n\nfunction initializeConfigFileSupport() {\n  if (getOptionValue('--experimental-default-config-file') ||\n      getOptionValue('--experimental-config-file')) {\n    emitExperimentalWarning('--experimental-config-file');\n  }\n}\n\nfunction setupQuic() {\n  if (!getOptionValue('--experimental-quic')) {\n    return;\n  }\n\n  const { BuiltinModule } = require('internal/bootstrap/realm');\n  BuiltinModule.allowRequireByUsers('quic');\n}\n\nfunction setupWebStorage() {\n  if (getEmbedderOptions().noBrowserGlobals ||\n      !getOptionValue('--experimental-webstorage')) {\n    return;\n  }\n\n  // https://html.spec.whatwg.org/multipage/webstorage.html#webstorage\n  exposeLazyInterfaces(globalThis\x2C 'internal/webstorage'\x2C ['Storage']);\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/webstorage'\x2C [\n    'localStorage'\x2C 'sessionStorage'\x2C\n  ]);\n}\n\nfunction setupCodeCoverage() {\n  // Resolve the coverage directory to an absolute path\x2C and\n  // overwrite process.env so that the original path gets passed\n  // to child processes even when they switch cwd. Don't do anything if the\n  // --experimental-test-coverage flag is present\x2C as the test runner will\n  // handle coverage.\n  if (process.env.NODE_V8_COVERAGE &&\n      !getOptionValue('--experimental-test-coverage')) {\n    process.env.NODE_V8_COVERAGE =\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\n  }\n}\n\nfunction setupStacktracePrinterOnSigint() {\n  if (!getOptionValue('--trace-sigint')) {\n    return;\n  }\n  const { SigintWatchdog } = require('internal/watchdog');\n\n  const watchdog = new SigintWatchdog();\n  watchdog.start();\n}\n\nfunction initializeReport() {\n  ObjectDefineProperty(process\x2C 'report'\x2C {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      const { report } = require('internal/process/report');\n      return report;\n    }\x2C\n  });\n}\n\nfunction setupDebugEnv() {\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\n  if (getOptionValue('--expose-internals')) {\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\n  }\n}\n\n// This has to be called after initializeReport() is called\nfunction initializeReportSignalHandlers() {\n  if (getOptionValue('--report-on-signal')) {\n    const { addSignalHandler } = require('internal/process/report');\n    addSignalHandler();\n  }\n}\n\nfunction initializeHeapSnapshotSignalHandlers() {\n  const signal = getOptionValue('--heapsnapshot-signal');\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\n\n  if (!signal)\n    return;\n\n  require('internal/validators').validateSignalName(signal);\n  const { writeHeapSnapshot } = require('v8');\n\n  function doWriteHeapSnapshot() {\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\n    writeHeapSnapshot(heapSnapshotFilename);\n  }\n  process.on(signal\x2C doWriteHeapSnapshot);\n\n  // The code above would add the listener back during deserialization\x2C\n  // if applicable.\n  if (isBuildingSnapshot()) {\n    addSerializeCallback(() => {\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\n    });\n  }\n}\n\nfunction setupTraceCategoryState() {\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\n}\n\nfunction setupInspectorHooks() {\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\n  // we cannot immediately call into JS to enable the hooks\x2C which could\n  // interrupt the JS execution of bootstrap. So instead we save the\n  // notification in the inspector agent if it's sent in the middle of\n  // bootstrap\x2C and process the notification later here.\n  if (internalBinding('config').hasInspector) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_async_hook');\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\n  }\n}\n\nfunction setupNetworkInspection() {\n  if (internalBinding('config').hasInspector && getOptionValue('--experimental-network-inspection')) {\n    const {\n      enable\x2C\n      disable\x2C\n    } = require('internal/inspector_network_tracking');\n    internalBinding('inspector').setupNetworkTracking(enable\x2C disable);\n  }\n}\n\n// In general deprecations are initialized wherever the APIs are implemented\x2C\n// this is used to deprecate APIs implemented in C++ where the deprecation\n// utilities are not easily accessible.\nfunction initializeDeprecations() {\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\n\n  // DEP0103: access to `process.binding('util').isX` type checkers\n  // TODO(addaleax): Turn into a full runtime deprecation.\n  const utilBinding = internalBinding('util');\n  const types = require('internal/util/types');\n  for (const name of [\n    'isArrayBuffer'\x2C\n    'isArrayBufferView'\x2C\n    'isAsyncFunction'\x2C\n    'isDataView'\x2C\n    'isDate'\x2C\n    'isExternal'\x2C\n    'isMap'\x2C\n    'isMapIterator'\x2C\n    'isNativeError'\x2C\n    'isPromise'\x2C\n    'isRegExp'\x2C\n    'isSet'\x2C\n    'isSetIterator'\x2C\n    'isTypedArray'\x2C\n    'isUint8Array'\x2C\n    'isAnyArrayBuffer'\x2C\n  ]) {\n    utilBinding[name] = pendingDeprecation ?\n      deprecate(types[name]\x2C\n                'Accessing native typechecking bindings of Node ' +\n                'directly is deprecated. ' +\n                `Please use \\`util.types.${name}\\` instead.`\x2C\n                'DEP0103') :\n      types[name];\n  }\n\n  // TODO(joyeecheung): this is a legacy property exposed to process.\n  // Now that we use the config binding to carry this information\x2C remove\n  // it from the process. We may consider exposing it properly in\n  // process.features.\n  const { noBrowserGlobals } = internalBinding('config');\n  if (noBrowserGlobals) {\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\n      __proto__: null\x2C\n      writable: false\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      value: noBrowserGlobals\x2C\n    });\n  }\n\n  if (pendingDeprecation) {\n    process.binding = deprecate(process.binding\x2C\n                                'process.binding() is deprecated. ' +\n                                'Please use public APIs instead.'\x2C 'DEP0111');\n\n    process._tickCallback = deprecate(process._tickCallback\x2C\n                                      'process._tickCallback() is deprecated'\x2C\n                                      'DEP0134');\n  }\n}\n\nfunction setupChildProcessIpcChannel() {\n  if (process.env.NODE_CHANNEL_FD) {\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\n    assert(fd >= 0);\n\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_CHANNEL_FD;\n\n    const serializationMode =\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\n\n    require('child_process')._forkChild(fd\x2C serializationMode);\n    assert(process.send);\n  }\n}\n\nfunction initializeClusterIPC() {\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\n    const cluster = require('cluster');\n    cluster._setupWorker();\n    // Make sure it's not accidentally inherited by child processes.\n    delete process.env.NODE_UNIQUE_ID;\n  }\n}\n\nfunction initializePermission() {\n  const permission = getOptionValue('--permission');\n  if (permission) {\n    process.binding = function binding(_module) {\n      throw new ERR_ACCESS_DENIED('process.binding');\n    };\n    // Guarantee path module isn't monkey-patched to bypass permission model\n    ObjectFreeze(require('path'));\n    const { has } = require('internal/process/permission');\n    const warnFlags = [\n      '--allow-addons'\x2C\n      '--allow-child-process'\x2C\n      '--allow-wasi'\x2C\n      '--allow-worker'\x2C\n    ];\n    for (const flag of warnFlags) {\n      if (getOptionValue(flag)) {\n        process.emitWarning(\n          `The flag ${flag} must be used with extreme caution. ` +\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\n      }\n    }\n    const warnCommaFlags = [\n      '--allow-fs-read'\x2C\n      '--allow-fs-write'\x2C\n    ];\n    for (const flag of warnCommaFlags) {\n      const value = getOptionValue(flag);\n      if (value.length === 1 && value[0].includes('\x2C')) {\n        process.emitWarning(\n          `The ${flag} CLI flag has changed. ` +\n        'Passing a comma-separated list of paths is no longer valid. ' +\n        'Documentation can be found at ' +\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\n          'Warning'\x2C\n        );\n      }\n    }\n\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: false\x2C\n      value: {\n        has\x2C\n      }\x2C\n    });\n  } else {\n    const { availableFlags } = require('internal/process/permission');\n    ArrayPrototypeForEach(availableFlags()\x2C (flag) => {\n      const value = getOptionValue(flag);\n      if (value.length) {\n        throw new ERR_MISSING_OPTION('--permission');\n      }\n    });\n  }\n}\n\nfunction initializeCJSLoader() {\n  const { initializeCJS } = require('internal/modules/cjs/loader');\n  initializeCJS();\n}\n\nfunction initializeESMLoader(forceDefaultLoader) {\n  const { initializeESM } = require('internal/modules/esm/utils');\n  initializeESM(forceDefaultLoader);\n\n  // Patch the vm module when --experimental-vm-modules is on.\n  // Please update the comments in vm.js when this block changes.\n  if (getOptionValue('--experimental-vm-modules')) {\n    const {\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\n    } = require('internal/vm/module');\n    const vm = require('vm');\n    vm.Module = Module;\n    vm.SourceTextModule = SourceTextModule;\n    vm.SyntheticModule = SyntheticModule;\n  }\n}\n\nfunction initializeSourceMapsHandlers() {\n  const {\n    setSourceMapsSupport\x2C\n  } = require('internal/source_map/source_map_cache');\n  const enabled = getOptionValue('--enable-source-maps');\n  setSourceMapsSupport(enabled\x2C {\n    __proto__: null\x2C\n    // TODO(legendecas): In order to smoothly improve the source map support\x2C\n    // skip source maps in node_modules and generated code with\n    // `--enable-source-maps` in a semver major version.\n    nodeModules: enabled\x2C\n    generatedCode: enabled\x2C\n  });\n}\n\nfunction initializeFrozenIntrinsics() {\n  if (getOptionValue('--frozen-intrinsics')) {\n    emitExperimentalWarning('Frozen intristics');\n    require('internal/freeze_intrinsics')();\n  }\n}\n\nfunction runEmbedderPreload() {\n  internalBinding('mksnapshot').runEmbedderPreload(process\x2C require);\n}\n\nfunction loadPreloadModules() {\n  // For user code\x2C we preload modules if `-r` is passed\n  const preloadModules = getOptionValue('--require');\n  if (preloadModules && preloadModules.length > 0) {\n    const {\n      Module: {\n        _preloadModules\x2C\n      }\x2C\n    } = require('internal/modules/cjs/loader');\n    _preloadModules(preloadModules);\n  }\n}\n\nfunction markBootstrapComplete() {\n  internalBinding('performance').markBootstrapComplete();\n}\n\n// Sequence number for diagnostic filenames\nlet sequenceNumOfheapSnapshot = 0;\n\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\nfunction getHeapSnapshotFilename(diagnosticDir) {\n  if (!diagnosticDir) return undefined;\n\n  const date = new Date();\n\n  const year = DatePrototypeGetFullYear(date);\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\n\n  const dateString = `${year}${month}${day}`;\n  const timeString = `${hours}${minutes}${seconds}`;\n  const pid = process.pid;\n  const threadId = internalBinding('worker').threadId;\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\n\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\n}\n\nmodule.exports = {\n  setupUserModules\x2C\n  prepareMainThreadExecution\x2C\n  prepareWorkerThreadExecution\x2C\n  prepareShadowRealmExecution\x2C\n  prepareTestRunnerMainExecution\x2C\n  markBootstrapComplete\x2C\n  loadPreloadModules\x2C\n  initializeFrozenIntrinsics\x2C\n};\n
code-source-info,0x148001ae0,69,9258,9507,,,
code-creation,JS,10,17041,0x148001d00,232,exposeLazyInterfaces node:internal/util:687:30,0x3699125d99a0,^
script-source,13,node:internal/util,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  Promise\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  SafeWeakMap\x2C\n  SafeWeakRef\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeReplace\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SymbolPrototypeGetDescription\x2C\n  SymbolReplace\x2C\n  SymbolSplit\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_NO_CRYPTO\x2C\n    ERR_NO_TYPESCRIPT\x2C\n    ERR_UNKNOWN_SIGNAL\x2C\n  }\x2C\n  isErrorStackTraceLimitWritable\x2C\n  overrideStackTrace\x2C\n  uvErrmapGet\x2C\n} = require('internal/errors');\nconst { signals } = internalBinding('constants').os;\nconst {\n  guessHandleType: _guessHandleType\x2C\n  defineLazyProperties\x2C\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n    decorated_private_symbol\x2C\n  }\x2C\n  sleep: _sleep\x2C\n} = internalBinding('util');\nconst { isNativeError\x2C isPromise } = internalBinding('types');\nconst { getOptionValue } = require('internal/options');\nconst assert = require('internal/assert');\nconst { encodings } = internalBinding('string_decoder');\n\nconst noCrypto = !process.versions.openssl;\nconst noTypeScript = !process.versions.amaro;\n\nconst isWindows = process.platform === 'win32';\nconst isMacOS = process.platform === 'darwin';\n\nconst experimentalWarnings = new SafeSet();\n\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nfunction removeColors(str) {\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\n}\n\nfunction isError(e) {\n  // An error could be an instance of Error while not being a native error\n  // or could be from a different realm and not be instance of Error but still\n  // be a native error.\n  return isNativeError(e) || e instanceof Error;\n}\n\n// Keep a list of deprecation codes that have been warned on so we only warn on\n// each one once.\nconst codesWarned = new SafeSet();\n\nlet validateString;\n\nfunction getDeprecationWarningEmitter(\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  shouldEmitWarning = () => true\x2C\n) {\n  let warned = false;\n  return function(arg) {\n    if (!warned && shouldEmitWarning(arg)) {\n      warned = true;\n      if (code === 'ExperimentalWarning') {\n        process.emitWarning(msg\x2C code\x2C deprecated);\n      } else if (code !== undefined) {\n        if (!codesWarned.has(code)) {\n          const emitWarning = useEmitSync ?\n            require('internal/process/warning').emitWarningSync :\n            process.emitWarning;\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\n          codesWarned.add(code);\n        }\n      } else {\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\n      }\n    }\n  };\n}\n\nfunction isPendingDeprecation() {\n  return getOptionValue('--pending-deprecation') &&\n    !getOptionValue('--no-deprecation');\n}\n\nfunction deprecateProperty(key\x2C msg\x2C code\x2C isPendingDeprecation) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C undefined\x2C false\x2C isPendingDeprecation\x2C\n  );\n  return (options) => {\n    if (key in options) {\n      emitDeprecationWarning();\n    }\n  };\n}\n\n// Internal deprecator for pending --pending-deprecation. This can be invoked\n// at snapshot building time as the warning permission is only queried at\n// run time.\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\n  );\n  function deprecated(...args) {\n    emitDeprecationWarning();\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  ObjectDefineProperty(deprecated\x2C 'length'\x2C {\n    __proto__: null\x2C\n    ...ObjectGetOwnPropertyDescriptor(fn\x2C 'length')\x2C\n  });\n\n  return deprecated;\n}\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set\x2C then it is a no-op.\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync\x2C modifyPrototype = true) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateString === undefined)\n    ({ validateString } = require('internal/validators'));\n\n  if (code !== undefined)\n    validateString(code\x2C 'code');\n\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\n  );\n\n  function deprecated(...args) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    if (!process.noDeprecation) {\n      emitDeprecationWarning();\n    }\n    if (new.target) {\n      return ReflectConstruct(fn\x2C args\x2C new.target);\n    }\n    return ReflectApply(fn\x2C this\x2C args);\n  }\n\n  if (modifyPrototype) {\n    // The wrapper will keep the same prototype as fn to maintain prototype chain\n    // Modifying the prototype does alter the object chains\x2C and as observed in\n    // most cases\x2C it slows the code.\n    ObjectSetPrototypeOf(deprecated\x2C fn);\n    if (fn.prototype) {\n      // Setting this (rather than using Object.setPrototype\x2C as above) ensures\n      // that calling the unwrapped constructor gives an instanceof the wrapped\n      // constructor.\n      deprecated.prototype = fn.prototype;\n    }\n\n    ObjectDefineProperty(deprecated\x2C 'length'\x2C {\n      __proto__: null\x2C\n      ...ObjectGetOwnPropertyDescriptor(fn\x2C 'length')\x2C\n    });\n  }\n\n  return deprecated;\n}\n\nfunction deprecateInstantiation(target\x2C code\x2C ...args) {\n  assert(typeof code === 'string');\n\n  getDeprecationWarningEmitter(code\x2C `Instantiating ${target.name} without the 'new' keyword has been deprecated.`\x2C target)();\n\n  return ReflectConstruct(target\x2C args);\n}\n\nfunction decorateErrorStack(err) {\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\n    return;\n\n  const arrow = err[arrow_message_private_symbol];\n\n  if (arrow) {\n    err.stack = arrow + err.stack;\n    err[decorated_private_symbol] = true;\n  }\n}\n\nfunction assertCrypto() {\n  if (noCrypto)\n    throw new ERR_NO_CRYPTO();\n}\n\nfunction assertTypeScript() {\n  if (noTypeScript)\n    throw new ERR_NO_TYPESCRIPT();\n}\n\n/**\n * Move the "slow cases" to a separate function to make sure this function gets\n * inlined properly. That prioritizes the common case.\n * @param {unknown} enc\n * @returns {string | undefined} Returns undefined if there is no match.\n */\nfunction normalizeEncoding(enc) {\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\n  return slowCases(enc);\n}\n\nfunction slowCases(enc) {\n  switch (enc.length) {\n    case 4:\n      if (enc === 'UTF8') return 'utf8';\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf8') return 'utf8';\n      if (enc === 'ucs2') return 'utf16le';\n      break;\n    case 3:\n      if (enc === 'hex' || enc === 'HEX' ||\n      StringPrototypeToLowerCase(enc) === 'hex')\n        return 'hex';\n      break;\n    case 5:\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      if (enc === 'UTF-8') return 'utf8';\n      if (enc === 'ASCII') return 'ascii';\n      if (enc === 'UCS-2') return 'utf16le';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'utf-8') return 'utf8';\n      if (enc === 'ascii') return 'ascii';\n      if (enc === 'ucs-2') return 'utf16le';\n      break;\n    case 6:\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      if (enc === 'BASE64') return 'base64';\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\n      enc = StringPrototypeToLowerCase(enc);\n      if (enc === 'base64') return 'base64';\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\n      break;\n    case 7:\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf16le')\n        return 'utf16le';\n      break;\n    case 8:\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\n        return 'utf16le';\n      break;\n    case 9:\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\n      StringPrototypeToLowerCase(enc) === 'base64url')\n        return 'base64url';\n      break;\n    default:\n      if (enc === '') return 'utf8';\n  }\n}\n\n/**\n * @param {string} feature Feature name used in the warning message\n * @param {string} messagePrefix Prefix of the warning message\n * @param {string} code See documentation of process.emitWarning\n * @param {string} ctor See documentation of process.emitWarning\n */\nfunction emitExperimentalWarning(feature\x2C messagePrefix\x2C code\x2C ctor) {\n  if (experimentalWarnings.has(feature)) return;\n  experimentalWarnings.add(feature);\n  let msg = `${feature} is an experimental feature and might change at any time`;\n  if (messagePrefix) {\n    msg = messagePrefix + msg;\n  }\n  process.emitWarning(msg\x2C 'ExperimentalWarning'\x2C code\x2C ctor);\n}\n\nfunction filterDuplicateStrings(items\x2C low) {\n  const map = new SafeMap();\n  for (let i = 0; i < items.length; i++) {\n    const item = items[i];\n    const key = StringPrototypeToLowerCase(item);\n    if (low) {\n      map.set(key\x2C key);\n    } else {\n      map.set(key\x2C item);\n    }\n  }\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\n}\n\nfunction cachedResult(fn) {\n  let result;\n  return () => {\n    if (result === undefined)\n      result = fn();\n    return ArrayPrototypeSlice(result);\n  };\n}\n\n// Useful for Wrapping an ES6 Class with a constructor Function that\n// does not require the new keyword. For instance:\n//   class A { constructor(x) {this.x = x;}}\n//   const B = createClassWrapper(A);\n//   B() instanceof A // true\n//   B() instanceof B // true\nfunction createClassWrapper(type) {\n  function fn(...args) {\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\n  }\n  // Mask the wrapper function name and length values\n  ObjectDefineProperties(fn\x2C {\n    name: { __proto__: null\x2C value: type.name }\x2C\n    length: { __proto__: null\x2C value: type.length }\x2C\n  });\n  ObjectSetPrototypeOf(fn\x2C type);\n  fn.prototype = type.prototype;\n  return fn;\n}\n\nlet signalsToNamesMapping;\nfunction getSignalsToNamesMapping() {\n  if (signalsToNamesMapping !== undefined)\n    return signalsToNamesMapping;\n\n  signalsToNamesMapping = { __proto__: null };\n  for (const key in signals) {\n    signalsToNamesMapping[signals[key]] = key;\n  }\n\n  return signalsToNamesMapping;\n}\n\nfunction convertToValidSignal(signal) {\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\n    return signal;\n\n  if (typeof signal === 'string') {\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\n    if (signalName) return signalName;\n  }\n\n  throw new ERR_UNKNOWN_SIGNAL(signal);\n}\n\nfunction getConstructorOf(obj) {\n  while (obj) {\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\n    if (descriptor !== undefined &&\n        typeof descriptor.value === 'function' &&\n        descriptor.value.name !== '') {\n      return descriptor.value;\n    }\n\n    obj = ObjectGetPrototypeOf(obj);\n  }\n\n  return null;\n}\n\nlet cachedURL;\nlet cachedCWD;\n\n/**\n * Get the current working directory while accounting for the possibility that it has been deleted.\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\n */\nfunction getCWDURL() {\n  const { sep } = require('path');\n  const { pathToFileURL } = require('internal/url');\n\n  let cwd;\n\n  try {\n    // The implementation of `process.cwd()` already uses proper cache when it can.\n    // It's a relatively cheap call performance-wise for the most common use case.\n    cwd = process.cwd();\n  } catch {\n    cachedURL ??= pathToFileURL(sep);\n  }\n\n  if (cwd != null && cwd !== cachedCWD) {\n    cachedURL = pathToFileURL(cwd + sep);\n    cachedCWD = cwd;\n  }\n\n  return cachedURL;\n}\n\nfunction getSystemErrorMessage(err) {\n  return lazyUv().getErrorMessage(err);\n}\n\nfunction getSystemErrorName(err) {\n  const entry = uvErrmapGet(err);\n  return entry ? entry[0] : `Unknown system error ${err}`;\n}\n\nfunction getSystemErrorMap() {\n  return lazyUv().getErrorMap();\n}\n\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\n\nlet validateFunction;\n\nfunction promisify(original) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateFunction === undefined)\n    ({ validateFunction } = require('internal/validators'));\n\n  validateFunction(original\x2C 'original');\n\n  if (original[kCustomPromisifiedSymbol]) {\n    const fn = original[kCustomPromisifiedSymbol];\n\n    validateFunction(fn\x2C 'util.promisify.custom');\n\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n      __proto__: null\x2C\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n    });\n  }\n\n  // Names to create an object from in case the callback receives multiple\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\n\n  function fn(...args) {\n    return new Promise((resolve\x2C reject) => {\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\n        if (err) {\n          return reject(err);\n        }\n        if (argumentNames !== undefined && values.length > 1) {\n          const obj = {};\n          for (let i = 0; i < argumentNames.length; i++)\n            obj[argumentNames[i]] = values[i];\n          resolve(obj);\n        } else {\n          resolve(values[0]);\n        }\n      });\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\n                            'DeprecationWarning'\x2C 'DEP0174');\n      }\n    });\n  }\n\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\n\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\n    __proto__: null\x2C\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\n  });\n\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\n  const propertiesValues = ObjectValues(descriptors);\n  for (let i = 0; i < propertiesValues.length; i++) {\n    // We want to use null-prototype objects to not rely on globally mutable\n    // %Object.prototype%.\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n  }\n  return ObjectDefineProperties(fn\x2C descriptors);\n}\n\npromisify.custom = kCustomPromisifiedSymbol;\n\n// The built-in Array#join is slower in v8 6.0\nfunction join(output\x2C separator) {\n  let str = '';\n  if (output.length !== 0) {\n    const lastIndex = output.length - 1;\n    for (let i = 0; i < lastIndex; i++) {\n      // It is faster not to use a template string here\n      str += output[i];\n      str += separator;\n    }\n    str += output[lastIndex];\n  }\n  return str;\n}\n\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\n// between 1.5-10x faster than the two-arg version of Array#splice()\nfunction spliceOne(list\x2C index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nconst kNodeModulesRE = /^(?:.*)[\\\\/]node_modules[\\\\/]/;\n\nfunction isUnderNodeModules(filename) {\n  return filename && (RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null);\n}\n\nlet getStructuredStackImpl;\n\nfunction lazyGetStructuredStack() {\n  if (getStructuredStackImpl === undefined) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    // Use `runInNewContext()` to get something tamper-proof and\n    // side-effect-free. Since this is currently only used for a deprecated API\n    // and module mocking\x2C the perf implications should be okay.\n    getStructuredStackImpl = runInNewContext(`(function() {\n      try { Error.stackTraceLimit = Infinity; } catch {}\n      return function structuredStack() {\n        const e = new Error();\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\n        return e.stack;\n      };\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\n  }\n\n  return getStructuredStackImpl;\n}\n\nfunction getStructuredStack() {\n  const getStructuredStackImpl = lazyGetStructuredStack();\n\n  return getStructuredStackImpl();\n}\n\nfunction once(callback\x2C { preserveReturnValue = false } = kEmptyObject) {\n  let called = false;\n  let returnValue;\n  return function(...args) {\n    if (called) return returnValue;\n    called = true;\n    const result = ReflectApply(callback\x2C this\x2C args);\n    returnValue = preserveReturnValue ? result : undefined;\n    return result;\n  };\n}\n\nlet validateUint32;\n\nfunction sleep(msec) {\n  // Lazy-load to avoid a circular dependency.\n  if (validateUint32 === undefined)\n    ({ validateUint32 } = require('internal/validators'));\n\n  validateUint32(msec\x2C 'msec');\n  _sleep(msec);\n}\n\n// https://heycam.github.io/webidl/#define-the-operations\nfunction defineOperation(target\x2C name\x2C method) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    value: method\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-interfaces\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: interfaceObject\x2C\n  });\n}\n\n// https://heycam.github.io/webidl/#es-namespaces\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    writable: true\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: namespaceObject\x2C\n  });\n}\n\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\n  ObjectDefineProperty(target\x2C name\x2C {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    get: getter\x2C\n    set: setter\x2C\n  });\n}\n\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\n  let mod;\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let value;\n    let setterCalled = false;\n\n    function get() {\n      if (check !== undefined) {\n        FunctionPrototypeCall(check\x2C this);\n      }\n      if (setterCalled) {\n        return value;\n      }\n      mod ??= require(id);\n      value ??= mod[key];\n      return value;\n    }\n\n    ObjectDefineProperty(get\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `get ${key}`\x2C\n    });\n\n    function set(val) {\n      setterCalled = true;\n      value = val;\n    }\n    ObjectDefineProperty(set\x2C 'name'\x2C {\n      __proto__: null\x2C\n      value: `set ${key}`\x2C\n    });\n\n    ObjectDefineProperty(target\x2C key\x2C {\n      __proto__: null\x2C\n      enumerable: true\x2C\n      configurable: true\x2C\n      get\x2C\n      set: writable ? set : undefined\x2C\n    });\n  }\n}\n\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\n}\n\nlet _DOMException;\nconst lazyDOMExceptionClass = () => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  return _DOMException;\n};\n\nconst lazyDOMException = (message\x2C name) => {\n  _DOMException ??= internalBinding('messaging').DOMException;\n  if (isErrorStackTraceLimitWritable()) {\n    const limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    const ex = new _DOMException(message\x2C name);\n    Error.stackTraceLimit = limit;\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\n    return ex;\n  }\n  return new _DOMException(message\x2C name);\n\n};\n\nconst kEnumerableProperty = { __proto__: null };\nkEnumerableProperty.enumerable = true;\nObjectFreeze(kEnumerableProperty);\n\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\n\nfunction filterOwnProperties(source\x2C keys) {\n  const filtered = { __proto__: null };\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\n      filtered[key] = source[key];\n    }\n  }\n\n  return filtered;\n}\n\n/**\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\n * @param {any} obj\n * @param {string} key\n * @param {any} value\n * @returns {any}\n */\nfunction setOwnProperty(obj\x2C key\x2C value) {\n  return ObjectDefineProperty(obj\x2C key\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    value\x2C\n    writable: true\x2C\n  });\n}\n\nlet internalGlobal;\nfunction getInternalGlobal() {\n  if (internalGlobal == null) {\n    // Lazy-load to avoid a circular dependency.\n    const { runInNewContext } = require('vm');\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\n  }\n  return internalGlobal;\n}\n\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\n}\n\nconst crossRealmRegexes = new SafeWeakMap();\nfunction getCrossRealmRegex(regex) {\n  const cached = crossRealmRegexes.get(regex);\n  if (cached) return cached;\n\n  let flagString = '';\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\n\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\n  const crossRealmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\n  crossRealmRegexes.set(regex\x2C crossRealmRegex);\n  return crossRealmRegex;\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\n  return getCrossRealmRegex(regex)[SymbolReplace](string\x2C replacement);\n}\n\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\n  return getCrossRealmRegex(regex)[SymbolSplit](string\x2C limit);\n}\n\n/**\n * Helper function to lazy-load an initialize-once value.\n * @template T Return value of initializer\n * @param {()=>T} initializer Initializer of the lazily loaded value.\n * @returns {()=>T}\n */\nfunction getLazy(initializer) {\n  let value;\n  let initialized = false;\n  return function() {\n    if (initialized === false) {\n      value = initializer();\n      initialized = true;\n    }\n    return value;\n  };\n}\n\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\n// ScriptCoverage objects to a specified directory.\nfunction setupCoverageHooks(dir) {\n  const cwd = require('internal/process/execution').tryGetCwd();\n  const { resolve } = require('path');\n  const coverageDirectory = resolve(cwd\x2C dir);\n  const { sourceMapCacheToObject } =\n    require('internal/source_map/source_map_cache');\n\n  if (process.features.inspector) {\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\n  } else {\n    process.emitWarning('The inspector is disabled\x2C ' +\n                        'coverage could not be collected'\x2C\n                        'Warning');\n    return '';\n  }\n  return coverageDirectory;\n}\n\n// Returns the number of ones in the binary representation of the decimal\n// number.\nfunction countBinaryOnes(n) {\n  // Count the number of bits set in parallel\x2C which is faster than looping\n  n = n - ((n >>> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\nfunction getCIDR(address\x2C netmask\x2C family) {\n  let ones = 0;\n  let split = '.';\n  let range = 10;\n  let groupLength = 8;\n  let hasZeros = false;\n  let lastPos = 0;\n\n  if (family === 'IPv6') {\n    split = ':';\n    range = 16;\n    groupLength = 16;\n  }\n\n  for (let i = 0; i < netmask.length; i++) {\n    if (netmask[i] !== split) {\n      if (i + 1 < netmask.length) {\n        continue;\n      }\n      i++;\n    }\n    const part = StringPrototypeSlice(netmask\x2C lastPos\x2C i);\n    lastPos = i + 1;\n    if (part !== '') {\n      if (hasZeros) {\n        if (part !== '0') {\n          return null;\n        }\n      } else {\n        const binary = NumberParseInt(part\x2C range);\n        const binaryOnes = countBinaryOnes(binary);\n        ones += binaryOnes;\n        if (binaryOnes !== groupLength) {\n          if (StringPrototypeIncludes(binary.toString(2)\x2C '01')) {\n            return null;\n          }\n          hasZeros = true;\n        }\n      }\n    }\n  }\n\n  return `${address}/${ones}`;\n}\n\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\nfunction guessHandleType(fd) {\n  const type = _guessHandleType(fd);\n  return handleTypes[type];\n}\n\nclass WeakReference {\n  #weak = null;\n  // eslint-disable-next-line no-unused-private-class-members\n  #strong = null;\n  #refCount = 0;\n  constructor(object) {\n    this.#weak = new SafeWeakRef(object);\n  }\n\n  incRef() {\n    this.#refCount++;\n    if (this.#refCount === 1) {\n      const derefed = this.#weak.deref();\n      if (derefed !== undefined) {\n        this.#strong = derefed;\n      }\n    }\n    return this.#refCount;\n  }\n\n  decRef() {\n    this.#refCount--;\n    if (this.#refCount === 0) {\n      this.#strong = null;\n    }\n    return this.#refCount;\n  }\n\n  get() {\n    return this.#weak.deref();\n  }\n}\n\nconst encodingsMap = { __proto__: null };\nfor (let i = 0; i < encodings.length; ++i)\n  encodingsMap[encodings[i]] = i;\n\n/**\n * Reassigns the .name property of a function.\n * Should be used when function can't be initially defined with desired name\n * or when desired name should include `#`\x2C `[`\x2C `]`\x2C etc.\n * @param {string | symbol} name\n * @param {Function} fn\n * @param {object} [descriptor]\n * @returns {Function} the same function\x2C renamed\n */\nfunction assignFunctionName(name\x2C fn\x2C descriptor = kEmptyObject) {\n  if (typeof name !== 'string') {\n    const symbolDescription = SymbolPrototypeGetDescription(name);\n    assert(symbolDescription !== undefined\x2C 'Attempted to name function after descriptionless Symbol');\n    name = `[${symbolDescription}]`;\n  }\n  return ObjectDefineProperty(fn\x2C 'name'\x2C {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    ...ObjectGetOwnPropertyDescriptor(fn\x2C 'name')\x2C\n    ...descriptor\x2C\n    value: name\x2C\n  });\n}\n\nmodule.exports = {\n  getLazy\x2C\n  assertCrypto\x2C\n  assertTypeScript\x2C\n  assignFunctionName\x2C\n  cachedResult\x2C\n  convertToValidSignal\x2C\n  createClassWrapper\x2C\n  decorateErrorStack\x2C\n  defineOperation\x2C\n  defineLazyProperties\x2C\n  defineReplaceableLazyAttribute\x2C\n  deprecate\x2C\n  deprecateInstantiation\x2C\n  deprecateProperty\x2C\n  emitExperimentalWarning\x2C\n  encodingsMap\x2C\n  exposeInterface\x2C\n  exposeLazyInterfaces\x2C\n  exposeNamespace\x2C\n  exposeGetterAndSetter\x2C\n  filterDuplicateStrings\x2C\n  filterOwnProperties\x2C\n  getConstructorOf\x2C\n  getCIDR\x2C\n  getCWDURL\x2C\n  getInternalGlobal\x2C\n  getStructuredStack\x2C\n  getSystemErrorMap\x2C\n  getSystemErrorName\x2C\n  getSystemErrorMessage\x2C\n  guessHandleType\x2C\n  isError\x2C\n  isUnderNodeModules\x2C\n  isMacOS\x2C\n  isWindows\x2C\n  join\x2C\n  lazyDOMException\x2C\n  lazyDOMExceptionClass\x2C\n  normalizeEncoding\x2C\n  once\x2C\n  promisify\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\n  sleep\x2C\n  spliceOne\x2C\n  setupCoverageHooks\x2C\n  removeColors\x2C\n\n  // Symbol used to customize promisify conversion\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n\n  // Symbol used to provide a custom inspect function for an object as an\n  // alternative to using 'inspect'\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\n\n  // Used by the buffer module to capture an internal reference to the\n  // default isEncoding implementation\x2C just in case userland overrides it.\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\n\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n  pendingDeprecate\x2C\n  WeakReference\x2C\n  isPendingDeprecation\x2C\n  getDeprecationWarningEmitter\x2C\n};\n
code-source-info,0x148001d00,13,19215,19286,,,
tick,0x19392e364,17750,0,0x0,9,0x3231531c8eef,0x3231531c958e,0x3231531c2e58,0x3231531c5370,0x3231531c4482,0x3231531c41f3,0x3231531c4bec,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,17791,0x148001e20,136,next node:internal/per_context/primordials:331:9,0x3699125c0028,^
script-source,3,node:internal/per_context/primordials,'use strict';\n\n/* eslint-disable node-core/prefer-primordials */\n\n// This file subclasses and stores the JS builtins that come from the VM\n// so that Node.js's builtin modules do not need to later look these up from\n// the global proxy\x2C which can be mutated by users.\n\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\n// benchmark all changes made in performance-sensitive areas of the codebase.\n// See: https://github.com/nodejs/node/pull/38248\n\nconst {\n  defineProperty: ReflectDefineProperty\x2C\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\n  ownKeys: ReflectOwnKeys\x2C\n} = Reflect;\n\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.call` after it may have been mutated by users.\nconst { apply\x2C bind\x2C call } = Function.prototype;\nconst uncurryThis = bind.bind(call);\nprimordials.uncurryThis = uncurryThis;\n\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\n// and `Function.prototype.apply` after it may have been mutated by users.\nconst applyBind = bind.bind(apply);\nprimordials.applyBind = applyBind;\n\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\n// destructuring.\nconst varargsMethods = [\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\n  // on its own for arrays and array-likes with a truthy\n  // @@isConcatSpreadable symbol property.\n  'ArrayOf'\x2C\n  'ArrayPrototypePush'\x2C\n  'ArrayPrototypeUnshift'\x2C\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\n  // and 'FunctionPrototypeApply'.\n  'MathHypot'\x2C\n  'MathMax'\x2C\n  'MathMin'\x2C\n  'StringFromCharCode'\x2C\n  'StringFromCodePoint'\x2C\n  'StringPrototypeConcat'\x2C\n  'TypedArrayOf'\x2C\n];\n\nfunction getNewKey(key) {\n  return typeof key === 'symbol' ?\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\n    `${key[0].toUpperCase()}${key.slice(1)}`;\n}\n\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\n    __proto__: null\x2C\n    value: uncurryThis(get)\x2C\n    enumerable\x2C\n  });\n  if (set !== undefined) {\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\n      __proto__: null\x2C\n      value: uncurryThis(set)\x2C\n      enumerable\x2C\n    });\n  }\n}\n\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          // `src` is bound as the `this` so that the static `this` points\n          // to the object it was defined on\x2C\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\n          value: applyBind(desc.value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = value.bind(src);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value\x2C src)\x2C\n        });\n      }\n    }\n  }\n}\n\nfunction copyPrototype(src\x2C dest\x2C prefix) {\n  for (const key of ReflectOwnKeys(src)) {\n    const newKey = getNewKey(key);\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\n    if ('get' in desc) {\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\n    } else {\n      const { value } = desc;\n      if (typeof value === 'function') {\n        desc.value = uncurryThis(value);\n      }\n\n      const name = `${prefix}${newKey}`;\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\n      if (varargsMethods.includes(name)) {\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\n          __proto__: null\x2C\n          value: applyBind(value)\x2C\n        });\n      }\n    }\n  }\n}\n\n// Create copies of configurable value properties of the global object\n[\n  'Proxy'\x2C\n  'globalThis'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  primordials[name] = globalThis[name];\n});\n\n// Create copies of URI handling functions\n[\n  decodeURI\x2C\n  decodeURIComponent\x2C\n  encodeURI\x2C\n  encodeURIComponent\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of legacy functions\n[\n  escape\x2C\n  eval\x2C\n  unescape\x2C\n].forEach((fn) => {\n  primordials[fn.name] = fn;\n});\n\n// Create copies of the namespace objects\n[\n  'Atomics'\x2C\n  'JSON'\x2C\n  'Math'\x2C\n  'Proxy'\x2C\n  'Reflect'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\n});\n\n// Create copies of intrinsic objects\n[\n  'AggregateError'\x2C\n  'Array'\x2C\n  'ArrayBuffer'\x2C\n  'BigInt'\x2C\n  'BigInt64Array'\x2C\n  'BigUint64Array'\x2C\n  'Boolean'\x2C\n  'DataView'\x2C\n  'Date'\x2C\n  'Error'\x2C\n  'EvalError'\x2C\n  'FinalizationRegistry'\x2C\n  'Float32Array'\x2C\n  'Float64Array'\x2C\n  'Function'\x2C\n  'Int16Array'\x2C\n  'Int32Array'\x2C\n  'Int8Array'\x2C\n  'Map'\x2C\n  'Number'\x2C\n  'Object'\x2C\n  'RangeError'\x2C\n  'ReferenceError'\x2C\n  'RegExp'\x2C\n  'Set'\x2C\n  'String'\x2C\n  'Symbol'\x2C\n  'SyntaxError'\x2C\n  'TypeError'\x2C\n  'URIError'\x2C\n  'Uint16Array'\x2C\n  'Uint32Array'\x2C\n  'Uint8Array'\x2C\n  'Uint8ClampedArray'\x2C\n  'WeakMap'\x2C\n  'WeakRef'\x2C\n  'WeakSet'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamed(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n\n// Create copies of intrinsic objects that require a valid `this` to call\n// static methods.\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\n[\n  'Promise'\x2C\n].forEach((name) => {\n  // eslint-disable-next-line no-restricted-globals\n  const original = globalThis[name];\n  primordials[name] = original;\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\n// Create copies of abstract intrinsic objects that are not directly exposed\n// on the global object.\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\n[\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\n  { name: 'ArrayIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n  { name: 'StringIterator'\x2C original: {\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\n  } }\x2C\n].forEach(({ name\x2C original }) => {\n  primordials[name] = original;\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\n  // as they need a subclass constructor as the receiver:\n  copyPrototype(original\x2C primordials\x2C name);\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\n});\n\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\n\n/* eslint-enable node-core/prefer-primordials */\n\nconst {\n  Array: ArrayConstructor\x2C\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  FinalizationRegistry\x2C\n  FunctionPrototypeCall\x2C\n  Map\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  ReflectConstruct\x2C\n  ReflectGet\x2C\n  ReflectSet\x2C\n  RegExp\x2C\n  RegExpPrototype\x2C\n  RegExpPrototypeExec\x2C\n  RegExpPrototypeGetDotAll\x2C\n  RegExpPrototypeGetFlags\x2C\n  RegExpPrototypeGetGlobal\x2C\n  RegExpPrototypeGetHasIndices\x2C\n  RegExpPrototypeGetIgnoreCase\x2C\n  RegExpPrototypeGetMultiline\x2C\n  RegExpPrototypeGetSource\x2C\n  RegExpPrototypeGetSticky\x2C\n  RegExpPrototypeGetUnicode\x2C\n  Set\x2C\n  SymbolIterator\x2C\n  SymbolMatch\x2C\n  SymbolMatchAll\x2C\n  SymbolReplace\x2C\n  SymbolSearch\x2C\n  SymbolSpecies\x2C\n  SymbolSplit\x2C\n  WeakMap\x2C\n  WeakRef\x2C\n  WeakSet\x2C\n} = primordials;\n\n\n/**\n * Creates a class that can be safely iterated over.\n *\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\n * `primordials` object\x2C it's important to use const references to the\n * primordials that they use.\n * @template {Iterable} T\n * @template {*} TReturn\n * @template {*} TNext\n * @param {(self: T) => IterableIterator<T>} factory\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\n */\nconst createSafeIterator = (factory\x2C next) => {\n  class SafeIterator {\n    constructor(iterable) {\n      this._iterator = factory(iterable);\n    }\n    next() {\n      return next(this._iterator);\n    }\n    [SymbolIterator]() {\n      return this;\n    }\n  }\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\n  ObjectFreeze(SafeIterator.prototype);\n  ObjectFreeze(SafeIterator);\n  return SafeIterator;\n};\n\nprimordials.SafeArrayIterator = createSafeIterator(\n  primordials.ArrayPrototypeSymbolIterator\x2C\n  primordials.ArrayIteratorPrototypeNext\x2C\n);\nprimordials.SafeStringIterator = createSafeIterator(\n  primordials.StringPrototypeSymbolIterator\x2C\n  primordials.StringIteratorPrototypeNext\x2C\n);\n\nconst copyProps = (src\x2C dest) => {\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\n      ReflectDefineProperty(\n        dest\x2C\n        key\x2C\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\n    }\n  });\n};\n\n/**\n * @type {typeof primordials.makeSafe}\n */\nconst makeSafe = (unsafe\x2C safe) => {\n  if (SymbolIterator in unsafe.prototype) {\n    const dummy = new unsafe();\n    let next; // We can reuse the same `next` method.\n\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\n        if (\n          typeof desc.value === 'function' &&\n          desc.value.length === 0 &&\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\n        ) {\n          const createIterator = uncurryThis(desc.value);\n          next ??= uncurryThis(createIterator(dummy).next);\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\n          desc.value = function() {\n            return new SafeIterator(this);\n          };\n        }\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\n      }\n    });\n  } else {\n    copyProps(unsafe.prototype\x2C safe.prototype);\n  }\n  copyProps(unsafe\x2C safe);\n\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\n  ObjectFreeze(safe.prototype);\n  ObjectFreeze(safe);\n  return safe;\n};\nprimordials.makeSafe = makeSafe;\n\n// Subclass the constructors because we need to use their prototype\n// methods later.\n// Defining the `constructor` is necessary here to avoid the default\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\nprimordials.SafeMap = makeSafe(\n  Map\x2C\n  class SafeMap extends Map {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakMap = makeSafe(\n  WeakMap\x2C\n  class SafeWeakMap extends WeakMap {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeSet = makeSafe(\n  Set\x2C\n  class SafeSet extends Set {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\nprimordials.SafeWeakSet = makeSafe(\n  WeakSet\x2C\n  class SafeWeakSet extends WeakSet {\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\n  }\x2C\n);\n\nprimordials.SafeFinalizationRegistry = makeSafe(\n  FinalizationRegistry\x2C\n  class SafeFinalizationRegistry extends FinalizationRegistry {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(cleanupCallback) { super(cleanupCallback); }\n  }\x2C\n);\nprimordials.SafeWeakRef = makeSafe(\n  WeakRef\x2C\n  class SafeWeakRef extends WeakRef {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(target) { super(target); }\n  }\x2C\n);\n\nconst SafePromise = makeSafe(\n  Promise\x2C\n  class SafePromise extends Promise {\n    // eslint-disable-next-line no-useless-constructor\n    constructor(executor) { super(executor); }\n  }\x2C\n);\n\n/**\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\n * rejected). The resolved value cannot be modified from the callback.\n * Prefer using async functions when possible.\n * @param {Promise<any>} thisPromise\n * @param {(() => void) | undefined | null} onFinally The callback to execute\n *   when the Promise is settled (fulfilled or rejected).\n * @returns {Promise} A Promise for the completion of the callback.\n */\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\n      .finally(onFinally)\n      .then(a\x2C b)\x2C\n  );\n\nprimordials.AsyncIteratorPrototype =\n  primordials.ReflectGetPrototypeOf(\n    primordials.ReflectGetPrototypeOf(\n      async function* () {}).prototype);\n\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\n  new primordials.SafeArrayIterator(\n    ArrayPrototypeMap(\n      promises\x2C\n      (promise\x2C i) =>\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\n    )\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>[]>}\n */\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used for internal functions\x2C this would produce similar\n * results as `Promise.all` but without prototype pollution\x2C and the return\n * value is not a genuine Array but an array-like object.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<ArrayLike<Awaited<U>>>}\n */\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    const { length } = promises;\n\n    const returnVal = ArrayConstructor(length);\n    ObjectSetPrototypeOf(returnVal\x2C null);\n    if (length === 0) resolve(returnVal);\n\n    let pendingPromises = length;\n    for (let i = 0; i < length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\n        returnVal[i] = result;\n        if (--pendingPromises === 0) resolve(returnVal);\n      }\x2C reject);\n    }\n  });\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * resolve\x2C not what value they resolve to.\n * @template T\x2CU\n * @param {ArrayLike<T | PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\n  new Promise((resolve\x2C reject) => {\n    let pendingPromises = promises.length;\n    if (pendingPromises === 0) resolve();\n    const onFulfilled = () => {\n      if (--pendingPromises === 0) {\n        resolve();\n      }\n    };\n    for (let i = 0; i < promises.length; i++) {\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\n    }\n  });\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<PromiseSettledResult<any>[]>}\n */\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * Should only be used when we only care about waiting for all the promises to\n * settle\x2C not what value they resolve or reject to.\n * @template T\x2CU\n * @param {ArrayLike<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<void>}\n */\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\n  let pendingPromises = promises.length;\n  if (pendingPromises === 0) resolve();\n  const onSettle = () => {\n    if (--pendingPromises === 0) resolve();\n  };\n  for (let i = 0; i < promises.length; i++) {\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\n  }\n});\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n/**\n * @template T\x2CU\n * @param {Array<T|PromiseLike<T>>} promises\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\n * @returns {Promise<Awaited<U>>}\n */\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\n  // prototype to user-land.\n  new Promise((a\x2C b) =>\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\n  );\n\n\nconst {\n  exec: OriginalRegExpPrototypeExec\x2C\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\n} = RegExpPrototype;\n\nclass RegExpLikeForStringSplitting {\n  #regex;\n  constructor() {\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\n  }\n\n  get lastIndex() {\n    return ReflectGet(this.#regex\x2C 'lastIndex');\n  }\n  set lastIndex(value) {\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\n  }\n\n  exec() {\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\n  }\n}\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\n\n/**\n * @param {RegExp} pattern\n * @returns {RegExp}\n */\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\n  ObjectDefineProperties(pattern\x2C {\n    [SymbolMatch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\n    }\x2C\n    [SymbolMatchAll]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\n    }\x2C\n    [SymbolReplace]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\n    }\x2C\n    [SymbolSearch]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\n    }\x2C\n    [SymbolSplit]: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\n    }\x2C\n    constructor: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: {\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\n      }\x2C\n    }\x2C\n    dotAll: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\n    }\x2C\n    exec: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: OriginalRegExpPrototypeExec\x2C\n    }\x2C\n    global: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\n    }\x2C\n    hasIndices: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\n    }\x2C\n    ignoreCase: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\n    }\x2C\n    multiline: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\n    }\x2C\n    source: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSource(pattern)\x2C\n    }\x2C\n    sticky: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetSticky(pattern)\x2C\n    }\x2C\n    unicode: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\n    }\x2C\n  });\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\n    __proto__: null\x2C\n    configurable: true\x2C\n    value: RegExpPrototypeGetFlags(pattern)\x2C\n  });\n  return pattern;\n};\n\n\n/**\n * @param {string} str\n * @param {RegExp} regexp\n * @returns {number}\n */\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\n  regexp.lastIndex = 0;\n  const match = RegExpPrototypeExec(regexp\x2C str);\n  return match ? match.index : -1;\n};\n\nObjectSetPrototypeOf(primordials\x2C null);\nObjectFreeze(primordials);\n
code-source-info,0x148001e20,3,9242,9287,,,
tick,0x101646dd0,18875,0,0x0,0,0x3231531c8eef,0x3231531c958e,0x3231531c2e58,0x3231531c5370,0x3231531c4482,0x3231531c41f3,0x3231531c4bec,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,19041,0x148001ee0,112, node:internal/modules/cjs/loader:456:30,0x1f2675700c88,^
script-source,65,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  ArrayPrototypeUnshiftApply\x2C\n  Boolean\x2C\n  Error\x2C\n  JSONParse\x2C\n  ObjectDefineProperty\x2C\n  ObjectFreeze\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectHasOwn\x2C\n  ObjectKeys\x2C\n  ObjectPrototype\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Proxy\x2C\n  ReflectApply\x2C\n  ReflectSet\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  String\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeRepeat\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  Symbol\x2C\n} = primordials;\nconst {\n  privateSymbols: {\n    module_source_private_symbol\x2C\n    module_export_names_private_symbol\x2C\n    module_circular_visited_private_symbol\x2C\n    module_export_private_symbol\x2C\n    module_parent_private_symbol\x2C\n  }\x2C\n  isInsideNodeModules\x2C\n} = internalBinding('util');\n\nconst { kEvaluated\x2C createRequiredModuleFacade } = internalBinding('module_wrap');\n\n// Internal properties for Module instances.\n/**\n * Cached {@link Module} source string.\n */\nconst kModuleSource = module_source_private_symbol;\n/**\n * Cached {@link Module} export names for ESM loader.\n */\nconst kModuleExportNames = module_export_names_private_symbol;\n/**\n * {@link Module} circular dependency visited flag.\n */\nconst kModuleCircularVisited = module_circular_visited_private_symbol;\n/**\n * {@link Module} export object snapshot for ESM loader.\n */\nconst kModuleExport = module_export_private_symbol;\n/**\n * {@link Module} parent module.\n */\nconst kModuleParent = module_parent_private_symbol;\n\nconst kIsMainSymbol = Symbol('kIsMainSymbol');\nconst kIsCachedByESMLoader = Symbol('kIsCachedByESMLoader');\nconst kRequiredModuleSymbol = Symbol('kRequiredModuleSymbol');\nconst kIsExecuting = Symbol('kIsExecuting');\n\nconst kURL = Symbol('kURL');\nconst kFormat = Symbol('kFormat');\n\n// Set first due to cycle with ESM loader functions.\nmodule.exports = {\n  kModuleSource\x2C\n  kModuleExport\x2C\n  kModuleExportNames\x2C\n  kModuleCircularVisited\x2C\n  initializeCJS\x2C\n  Module\x2C\n  findLongestRegisteredExtension\x2C\n  resolveForCJSWithHooks\x2C\n  loadSourceForCJSWithHooks: loadSource\x2C\n  wrapSafe\x2C\n  wrapModuleLoad\x2C\n  kIsMainSymbol\x2C\n  kIsCachedByESMLoader\x2C\n  kRequiredModuleSymbol\x2C\n  kIsExecuting\x2C\n};\n\nconst { BuiltinModule } = require('internal/bootstrap/realm');\nconst {\n  maybeCacheSourceMap\x2C\n} = require('internal/source_map/source_map_cache');\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\nconst {\n  pendingDeprecate\x2C\n  emitExperimentalWarning\x2C\n  kEmptyObject\x2C\n  setOwnProperty\x2C\n  getLazy\x2C\n  isWindows\x2C\n  isUnderNodeModules\x2C\n} = require('internal/util');\nconst {\n  makeContextifyScript\x2C\n  runScriptInThisContext\x2C\n} = require('internal/vm');\nconst {\n  containsModuleSyntax\x2C\n  compileFunctionForCJSLoader\x2C\n} = internalBinding('contextify');\n\nconst assert = require('internal/assert');\nconst fs = require('fs');\nconst path = require('path');\nconst internalFsBinding = internalBinding('fs');\nconst { safeGetenv } = internalBinding('credentials');\nconst {\n  getCjsConditions\x2C\n  getCjsConditionsArray\x2C\n  initializeCjsConditions\x2C\n  loadBuiltinModule\x2C\n  makeRequireFunction\x2C\n  setHasStartedUserCJSExecution\x2C\n  stripBOM\x2C\n  toRealPath\x2C\n} = require('internal/modules/helpers');\nconst {\n  convertCJSFilenameToURL\x2C\n  convertURLToCJSFilename\x2C\n  loadHooks\x2C\n  loadWithHooks\x2C\n  registerHooks\x2C\n  resolveHooks\x2C\n  resolveWithHooks\x2C\n} = require('internal/modules/customization_hooks');\nconst { stripTypeScriptModuleTypes } = require('internal/modules/typescript');\nconst packageJsonReader = require('internal/modules/package_json_reader');\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\n\nconst {\n  vm_dynamic_import_default_internal\x2C\n} = internalBinding('symbols');\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_MODULE_SPECIFIER\x2C\n    ERR_REQUIRE_CYCLE_MODULE\x2C\n    ERR_REQUIRE_ESM\x2C\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\n    ERR_UNKNOWN_MODULE_FORMAT\x2C\n  }\x2C\n  setArrowMessage\x2C\n} = require('internal/errors');\nconst { validateString } = require('internal/validators');\n\nconst {\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_COLON\x2C\n  CHAR_DOT\x2C\n  CHAR_FORWARD_SLASH\x2C\n} = require('internal/constants');\n\nconst {\n  isProxy\x2C\n} = require('internal/util/types');\n\nconst { debuglog\x2C debugWithTimer } = require('internal/util/debuglog');\n\nlet { startTimer\x2C endTimer } = debugWithTimer('module_timer'\x2C (start\x2C end) => {\n  startTimer = start;\n  endTimer = end;\n});\n\nconst { tracingChannel } = require('diagnostics_channel');\nconst onRequire = getLazy(() => tracingChannel('module.require'));\n\nconst relativeResolveCache = { __proto__: null };\n\nlet requireDepth = 0;\nlet isPreloading = false;\nlet statCache = null;\n\n/**\n * Internal method to add tracing capabilities for Module._load.\n *\n * See more {@link Module._load}\n * @returns {object}\n */\nfunction wrapModuleLoad(request\x2C parent\x2C isMain) {\n  const logLabel = `[${parent?.id || ''}] [${request}]`;\n  const traceLabel = `require('${request}')`;\n\n  startTimer(logLabel\x2C traceLabel);\n\n  try {\n    return onRequire().traceSync(Module._load\x2C {\n      __proto__: null\x2C\n      parentFilename: parent?.filename\x2C\n      id: request\x2C\n    }\x2C Module\x2C request\x2C parent\x2C isMain);\n  } finally {\n    endTimer(logLabel\x2C traceLabel);\n  }\n}\n\n/**\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\n * @param {string} filename Absolute path to the file\n * @returns {number}\n */\nfunction stat(filename) {\n  // Guard against internal bugs where a non-string filename is passed in by mistake.\n  assert(typeof filename === 'string');\n\n  filename = path.toNamespacedPath(filename);\n  if (statCache !== null) {\n    const result = statCache.get(filename);\n    if (result !== undefined) { return result; }\n  }\n  const result = internalFsBinding.internalModuleStat(filename);\n  if (statCache !== null && result >= 0) {\n    // Only set cache when `internalModuleStat(filename)` succeeds.\n    statCache.set(filename\x2C result);\n  }\n  return result;\n}\n\nlet _stat = stat;\nObjectDefineProperty(Module\x2C '_stat'\x2C {\n  __proto__: null\x2C\n  get() { return _stat; }\x2C\n  set(stat) {\n    emitExperimentalWarning('Module._stat');\n    _stat = stat;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Update the parent's children array with the child module.\n * @param {Module} parent Module requiring the children\n * @param {Module} child Module being required\n * @param {boolean} scan Add the child to the parent's children if not already present\n * @returns {void}\n */\nfunction updateChildren(parent\x2C child\x2C scan) {\n  const children = parent?.children;\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\n    ArrayPrototypePush(children\x2C child);\n  }\n}\n\n/**\n * Tell the watch mode that a module was required.\n * @param {string} filename Absolute path of the module\n * @returns {void}\n */\nfunction reportModuleToWatchMode(filename) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': [filename] });\n  }\n}\n\n/**\n * Tell the watch mode that a module was not found.\n * @param {string} basePath The absolute path that errored\n * @param {string[]} extensions The extensions that were tried\n * @returns {void}\n */\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\n  if (shouldReportRequiredModules() && process.send) {\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\n  }\n}\n\n/**\n * Create a new module instance.\n * @param {string} id\n * @param {Module} parent\n * @returns {void}\n */\nfunction Module(id = ''\x2C parent) {\n  this.id = id;\n  this.path = path.dirname(id);\n  setOwnProperty(this\x2C 'exports'\x2C {});\n  this[kModuleParent] = parent;\n  updateChildren(parent\x2C this\x2C false);\n  this.filename = null;\n  this.loaded = false;\n  this.children = [];\n}\n\n/** @type {Record<string\x2C Module>} */\nModule._cache = { __proto__: null };\n/** @type {Record<string\x2C string>} */\nModule._pathCache = { __proto__: null };\n/** @type {{[key: string]: function(Module\x2C string): void}} */\nModule._extensions = { __proto__: null };\n/** @type {string[]} */\nlet modulePaths = [];\n/** @type {string[]} */\nModule.globalPaths = [];\n\nlet patched = false;\n\n/**\n * Add the CommonJS wrapper around a module's source code.\n * @param {string} script Module source code\n * @returns {string}\n */\nlet wrap = function(script) { // eslint-disable-line func-style\n  return Module.wrapper[0] + script + Module.wrapper[1];\n};\n\nconst wrapper = [\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\n  '\\n});'\x2C\n];\n\nlet wrapperProxy = new Proxy(wrapper\x2C {\n  __proto__: null\x2C\n\n  set(target\x2C property\x2C value\x2C receiver) {\n    patched = true;\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\n  }\x2C\n\n  defineProperty(target\x2C property\x2C descriptor) {\n    patched = true;\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrap;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrap = value;\n  }\x2C\n});\n\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\n  __proto__: null\x2C\n  get() {\n    return wrapperProxy;\n  }\x2C\n\n  set(value) {\n    patched = true;\n    wrapperProxy = value;\n  }\x2C\n});\n\nconst isPreloadingDesc = { get() { return isPreloading; } };\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\n\n/**\n * Get the parent of the current module from our cache.\n * @this {Module}\n * @returns {object}\n */\nfunction getModuleParent() {\n  return this[kModuleParent];\n}\n\n/**\n * Set the parent of the current module in our cache.\n * @this {Module}\n * @param {Module} value\n * @returns {void}\n */\nfunction setModuleParent(value) {\n  this[kModuleParent] = value;\n}\n\nlet debug = debuglog('module'\x2C (fn) => {\n  debug = fn;\n});\n\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\n  __proto__: null\x2C\n  get: pendingDeprecate(\n    getModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n  set: pendingDeprecate(\n    setModuleParent\x2C\n    'module.parent is deprecated due to accuracy issues. Please use ' +\n      'require.main to find program entry point instead.'\x2C\n    'DEP0144'\x2C\n  )\x2C\n});\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\nModule.isBuiltin = BuiltinModule.isBuiltin;\n\n/**\n * Prepare to run CommonJS code.\n * This function is called during pre-execution\x2C before any user code is run.\n * @returns {void}\n */\nfunction initializeCJS() {\n  // This need to be done at runtime in case --expose-internals is set.\n\n  let modules = Module.builtinModules = BuiltinModule.getAllBuiltinModuleIds();\n  if (!getOptionValue('--experimental-quic')) {\n    modules = modules.filter((i) => i !== 'node:quic');\n  }\n  Module.builtinModules = ObjectFreeze(modules);\n\n  initializeCjsConditions();\n\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\n    Module._initPaths();\n  }\n\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\n  Module.runMain =\n    require('internal/modules/run_main').executeUserEntryPoint;\n}\n\n// Given a module name\x2C and a list of paths to test\x2C returns the first\n// matching file in the following precedence.\n//\n// require("a.<ext>")\n//   -> a.<ext>\n//\n// require("a")\n//   -> a\n//   -> a.<ext>\n//   -> a/index.<ext>\n\nlet _readPackage = (requestPath) => packageJsonReader.read(path.resolve(requestPath\x2C 'package.json'));\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\n  __proto__: null\x2C\n  get() { return _readPackage; }\x2C\n  set(readPackage) {\n    emitExperimentalWarning('Module._readPackage');\n    _readPackage = readPackage;\n    return true;\n  }\x2C\n  configurable: true\x2C\n});\n\n/**\n * Try to load a specifier as a package.\n * @param {string} requestPath The path to what we are trying to load\n * @param {string[]} exts File extensions to try appending in order to resolve the file\n * @param {boolean} isMain Whether the file is the main entry point of the app\n * @param {string} originalPath The specifier passed to `require`\n * @returns {any}\n */\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\n  const { main: pkg\x2C pjsonPath } = _readPackage(requestPath);\n\n  if (!pkg) {\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n  }\n\n  const filename = path.resolve(requestPath\x2C pkg);\n  let actual = tryFile(filename\x2C isMain) ||\n    tryExtensions(filename\x2C exts\x2C isMain) ||\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\n  if (actual === false) {\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\n    if (!actual) {\n      // eslint-disable-next-line no-restricted-syntax\n      const err = new Error(\n        `Cannot find module '${filename}'. ` +\n        'Please verify that the package.json has a valid "main" entry'\x2C\n      );\n      err.code = 'MODULE_NOT_FOUND';\n      err.path = pjsonPath;\n      err.requestPath = originalPath;\n      // TODO(BridgeAR): Add the requireStack as well.\n      throw err;\n    } else {\n      process.emitWarning(\n        `Invalid 'main' field in '${pjsonPath}' of '${pkg}'. ` +\n          'Please either fix that or report it to the module author'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0128'\x2C\n      );\n    }\n  }\n  return actual;\n}\n\n/**\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false or\n * `--preserve-symlinks-main` and `isMain` is true \x2C keep symlinks intact\x2C otherwise resolve to the absolute realpath.\n * @param {string} requestPath The path to the file to load.\n * @param {boolean} isMain Whether the file is the main module.\n * @returns {string|undefined}\n */\nfunction tryFile(requestPath\x2C isMain) {\n  const rc = _stat(requestPath);\n  if (rc !== 0) { return; }\n  if (getOptionValue(isMain ? '--preserve-symlinks-main' : '--preserve-symlinks')) {\n    return path.resolve(requestPath);\n  }\n  return toRealPath(requestPath);\n}\n\n/**\n * Given a path\x2C check if the file exists with any of the set extensions.\n * @param {string} basePath The path and filename without extension\n * @param {string[]} exts The extensions to try\n * @param {boolean} isMain Whether the module is the main module\n * @returns {string|false}\n */\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\n  for (let i = 0; i < exts.length; i++) {\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\n\n    if (filename) {\n      return filename;\n    }\n  }\n  return false;\n}\n\n/**\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\n * @param {string} filename The filename to find the longest registered extension for.\n * @returns {string}\n */\nfunction findLongestRegisteredExtension(filename) {\n  const name = path.basename(filename);\n  let currentExtension;\n  let index;\n  let startIndex = 0;\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\n    startIndex = index + 1;\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\n    currentExtension = StringPrototypeSlice(name\x2C index);\n    if (Module._extensions[currentExtension]) { return currentExtension; }\n  }\n  return '.js';\n}\n\n/**\n * Tries to get the absolute file path of the parent module.\n * @param {Module} parent The parent module object.\n * @returns {string|false|void}\n */\nfunction trySelfParentPath(parent) {\n  if (!parent) { return false; }\n\n  if (parent.filename) {\n    return parent.filename;\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\n    try {\n      return process.cwd() + path.sep;\n    } catch {\n      return false;\n    }\n  }\n}\n\n/**\n * Attempt to resolve a module request using the parent module package metadata.\n * @param {string} parentPath The path of the parent module\n * @param {string} request The module request to resolve\n * @param {unknown} conditions\n * @returns {false|string}\n */\nfunction trySelf(parentPath\x2C request\x2C conditions) {\n  if (!parentPath) { return false; }\n\n  const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath);\n  if (pkg?.data.exports === undefined || pkg.data.name === undefined) {\n    return false;\n  }\n\n  let expansion;\n  if (request === pkg.data.name) {\n    expansion = '.';\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.data.name}/`)) {\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.data.name.length);\n  } else {\n    return false;\n  }\n\n  try {\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\n    return finalizeEsmResolution(packageExportsResolve(\n      pathToFileURL(pkg.path)\x2C expansion\x2C pkg.data\x2C\n      pathToFileURL(parentPath)\x2C conditions)\x2C parentPath\x2C pkg.path);\n  } catch (e) {\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\n      throw createEsmNotFoundErr(request\x2C pkg.path);\n    }\n    throw e;\n  }\n}\n\n/**\n * This only applies to requests of a specific form:\n * 1. `name/.*`\n * 2. `@scope/name/.*`\n */\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\n\n/**\n * Resolves the exports for a given module path and request.\n * @param {string} nmPath The path to the module.\n * @param {string} request The request for the module.\n * @param {Set<string>} conditions The conditions to use for resolution.\n * @returns {undefined|string}\n */\nfunction resolveExports(nmPath\x2C request\x2C conditions) {\n  // The implementation's behavior is meant to mirror resolution in ESM.\n  const { 1: name\x2C 2: expansion = '' } =\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\n  if (!name) { return; }\n  const pkgPath = path.resolve(nmPath\x2C name);\n  const pkg = _readPackage(pkgPath);\n  if (pkg.exists && pkg.exports != null) {\n    try {\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\n      return finalizeEsmResolution(packageExportsResolve(\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\n        conditions)\x2C null\x2C pkgPath);\n    } catch (e) {\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\n      }\n      throw e;\n    }\n  }\n}\n\n/**\n * Get the absolute path to a module.\n * @param {string} request Relative or absolute file path\n * @param {Array<string>} paths Folders to search as file paths\n * @param {boolean} isMain Whether the request is the main app entry point\n * @returns {string | false}\n */\nModule._findPath = function(request\x2C paths\x2C isMain\x2C conditions = getCjsConditions()) {\n  const absoluteRequest = path.isAbsolute(request);\n  if (absoluteRequest) {\n    paths = [''];\n  } else if (!paths || paths.length === 0) {\n    return false;\n  }\n\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\n  const entry = Module._pathCache[cacheKey];\n  if (entry) {\n    return entry;\n  }\n\n  let exts;\n  const trailingSlash = request.length > 0 &&\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\n      (\n        request.length === 1 ||\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\n          request.length === 2 ||\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\n        ))\n      )\n    ));\n\n  let insidePath = true;\n  if (isRelative(request)) {\n    const normalizedRequest = path.normalize(request);\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\n      insidePath = false;\n    }\n  }\n\n  // For each path\n  for (let i = 0; i < paths.length; i++) {\n    // Don't search further if path doesn't exist\n    const curPath = paths[i];\n    if (typeof curPath !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('paths'\x2C 'array of strings'\x2C paths);\n    }\n    if (insidePath && curPath && _stat(curPath) < 1) {\n      continue;\n    }\n\n    if (!absoluteRequest) {\n      const exportsResolved = resolveExports(curPath\x2C request\x2C conditions);\n      if (exportsResolved) {\n        return exportsResolved;\n      }\n    }\n\n    const basePath = path.resolve(curPath\x2C request);\n    let filename;\n\n    const rc = _stat(basePath);\n    if (!trailingSlash) {\n      if (rc === 0) {  // File.\n        if (!isMain) {\n          if (getOptionValue('--preserve-symlinks')) {\n            filename = path.resolve(basePath);\n          } else {\n            filename = toRealPath(basePath);\n          }\n        } else if (getOptionValue('--preserve-symlinks-main')) {\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\n          // historically has not applied to the main module.  Most likely this\n          // was intended to keep .bin/ binaries working\x2C as following those\n          // symlinks is usually required for the imports in the corresponding\n          // files to resolve; that said\x2C in some use cases following symlinks\n          // causes bigger problems which is why the --preserve-symlinks-main option\n          // is needed.\n          filename = path.resolve(basePath);\n        } else {\n          filename = toRealPath(basePath);\n        }\n      }\n\n      if (!filename) {\n        // Try it with each of the extensions\n        if (exts === undefined) {\n          exts = ObjectKeys(Module._extensions);\n        }\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\n      }\n    }\n\n    if (!filename && rc === 1) {  // Directory.\n      // try it with each of the extensions at "index"\n      if (exts === undefined) {\n        exts = ObjectKeys(Module._extensions);\n      }\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\n    }\n\n    if (filename) {\n      Module._pathCache[cacheKey] = filename;\n      return filename;\n    }\n\n    const extensions = [''];\n    if (exts !== undefined) {\n      ArrayPrototypePushApply(extensions\x2C exts);\n    }\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\n  }\n\n  return false;\n};\n\n/** `node_modules` character codes reversed */\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\nconst nmLen = nmChars.length;\nif (isWindows) {\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   * @returns {string[]}\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n\n    // return root node_modules when path is 'D:\\\\'.\n    // path.resolve will make sure from.length >=3 in Windows.\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\n          CHAR_BACKWARD_SLASH &&\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\n      return [from + 'node_modules'];\n    }\n\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      // The path segment separator check ('\\' and '/') was used to get\n      // node_modules path for every path segment.\n      // Use colon as an extra condition since we can get node_modules\n      // path for drive root like 'C:\\node_modules' and don't need to\n      // parse drive name.\n      if (code === CHAR_BACKWARD_SLASH ||\n          code === CHAR_FORWARD_SLASH ||\n          code === CHAR_COLON) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    return paths;\n  };\n} else { // posix\n  /**\n   * Get the paths to the `node_modules` folder for a given path.\n   * @param {string} from `__dirname` of the module\n   * @returns {string[]}\n   */\n  Module._nodeModulePaths = function(from) {\n    // Guarantee that 'from' is absolute.\n    from = path.resolve(from);\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\n    if (from === '/') {\n      return ['/node_modules'];\n    }\n\n    // note: this approach *only* works when the path is guaranteed\n    // to be absolute.  Doing a fully-edge-case-correct path.split\n    // that works on both Windows and Posix is non-trivial.\n    /** @type {string[]} */\n    const paths = [];\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\n      const code = StringPrototypeCharCodeAt(from\x2C i);\n      if (code === CHAR_FORWARD_SLASH) {\n        if (p !== nmLen) {\n          ArrayPrototypePush(\n            paths\x2C\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\n          );\n        }\n        last = i;\n        p = 0;\n      } else if (p !== -1) {\n        if (nmChars[p] === code) {\n          ++p;\n        } else {\n          p = -1;\n        }\n      }\n    }\n\n    // Append /node_modules to handle root paths.\n    ArrayPrototypePush(paths\x2C '/node_modules');\n\n    return paths;\n  };\n}\n\n/**\n * Get the paths for module resolution.\n * @param {string} request\n * @param {Module} parent\n * @returns {null|string[]}\n */\nModule._resolveLookupPaths = function(request\x2C parent) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    debug('looking for %j in []'\x2C request);\n    return null;\n  }\n\n  // Check for node modules paths.\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\n      (request.length > 1 &&\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\n\n    /** @type {string[]} */\n    let paths;\n    if (parent?.paths?.length) {\n      paths = ArrayPrototypeSlice(modulePaths);\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\n    } else {\n      paths = modulePaths;\n    }\n\n    debug('looking for %j in %j'\x2C request\x2C paths);\n    return paths.length > 0 ? paths : null;\n  }\n\n  // In REPL\x2C parent.filename is null.\n  if (!parent || !parent.id || !parent.filename) {\n    // Make require('./path/to/foo') work - normally the path is taken\n    // from realpath(__filename) but in REPL there is no filename\n    const mainPaths = ['.'];\n\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\n    return mainPaths;\n  }\n\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\n\n  const parentDir = [path.dirname(parent.filename)];\n  debug('looking for %j'\x2C parentDir);\n  return parentDir;\n};\n\n/**\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\n * @param {string} prop The name of the non-existent property.\n * @returns {void}\n */\nfunction emitCircularRequireWarning(prop) {\n  process.emitWarning(\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\n    'inside circular dependency'\x2C\n  );\n}\n\n// A Proxy that can be used as the prototype of a module.exports object and\n// warns when non-existent properties are accessed.\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\n  __proto__: null\x2C\n\n  get(target\x2C prop) {\n    // Allow __esModule access in any case because it is used in the output\n    // of transpiled code to determine whether something comes from an\n    // ES module\x2C and is not used as a regular key of `module.exports`.\n    if (prop in target || prop === '__esModule') { return target[prop]; }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n\n  getOwnPropertyDescriptor(target\x2C prop) {\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\n    }\n    emitCircularRequireWarning(prop);\n    return undefined;\n  }\x2C\n});\n\n/**\n * Returns the exports object for a module that has a circular `require`.\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\n * about circular dependencies.\n * @param {Module} module The module instance\n * @returns {object}\n */\nfunction getExportsForCircularRequire(module) {\n  const requiredESM = module[kRequiredModuleSymbol];\n  if (requiredESM && requiredESM.getStatus() !== kEvaluated) {\n    let message = `Cannot require() ES Module ${module.id} in a cycle.`;\n    const parent = module[kModuleParent];\n    if (parent) {\n      message += ` (from ${parent.filename})`;\n    }\n    throw new ERR_REQUIRE_CYCLE_MODULE(message);\n  }\n\n  if (module.exports &&\n      !isProxy(module.exports) &&\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\n      // Exclude transpiled ES6 modules / TypeScript code because those may\n      // employ unusual patterns for accessing 'module.exports'. That should\n      // be okay because ES6 modules have a different approach to circular\n      // dependencies anyway.\n      !module.exports.__esModule) {\n    // This is later unset once the module is done loading.\n    ObjectSetPrototypeOf(\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\n  }\n\n  return module.exports;\n}\n\n/**\n * Resolve a module request for CommonJS\x2C invoking hooks from module.registerHooks()\n * if necessary.\n * @param {string} specifier\n * @param {Module|undefined} parent\n * @param {boolean} isMain\n * @returns {{url?: string\x2C format?: string\x2C parentURL?: string\x2C filename: string}}\n */\nfunction resolveForCJSWithHooks(specifier\x2C parent\x2C isMain) {\n  let defaultResolvedURL;\n  let defaultResolvedFilename;\n  let format;\n\n  function defaultResolveImpl(specifier\x2C parent\x2C isMain\x2C options) {\n    // For backwards compatibility\x2C when encountering requests starting with node:\x2C\n    // throw ERR_UNKNOWN_BUILTIN_MODULE on failure or return the normalized ID on success\n    // without going into Module._resolveFilename.\n    let normalized;\n    if (StringPrototypeStartsWith(specifier\x2C 'node:')) {\n      normalized = BuiltinModule.normalizeRequirableId(specifier);\n      if (!normalized) {\n        throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\n      }\n      defaultResolvedURL = specifier;\n      format = 'builtin';\n      return normalized;\n    }\n    return Module._resolveFilename(specifier\x2C parent\x2C isMain\x2C options).toString();\n  }\n\n  // Fast path: no hooks\x2C just return simple results.\n  if (!resolveHooks.length) {\n    const filename = defaultResolveImpl(specifier\x2C parent\x2C isMain);\n    return { __proto__: null\x2C url: defaultResolvedURL\x2C filename\x2C format };\n  }\n\n  // Slow path: has hooks\x2C do the URL conversions and invoke hooks with contexts.\n  let parentURL;\n  if (parent) {\n    if (!parent[kURL] && parent.filename) {\n      parent[kURL] = convertCJSFilenameToURL(parent.filename);\n    }\n    parentURL = parent[kURL];\n  }\n\n  // This is used as the last nextResolve for the resolve hooks.\n  function defaultResolve(specifier\x2C context) {\n    // TODO(joyeecheung): parent and isMain should be part of context\x2C then we\n    // no longer need to use a different defaultResolve for every resolution.\n    // In the hooks\x2C context.conditions is passed around as an array\x2C but internally\n    // the resolution helpers expect a SafeSet. Do the conversion here.\n    let conditionSet;\n    const conditions = context.conditions;\n    if (conditions !== undefined && conditions !== getCjsConditionsArray()) {\n      if (!ArrayIsArray(conditions)) {\n        throw new ERR_INVALID_ARG_VALUE('context.conditions'\x2C conditions\x2C\n                                        'expected an array');\n      }\n      conditionSet = new SafeSet(conditions);\n    } else {\n      conditionSet = getCjsConditions();\n    }\n    defaultResolvedFilename = defaultResolveImpl(specifier\x2C parent\x2C isMain\x2C {\n      __proto__: null\x2C\n      conditions: conditionSet\x2C\n    });\n\n    defaultResolvedURL = convertCJSFilenameToURL(defaultResolvedFilename);\n    return { __proto__: null\x2C url: defaultResolvedURL };\n  }\n\n  const resolveResult = resolveWithHooks(specifier\x2C parentURL\x2C /* importAttributes */ undefined\x2C\n                                         getCjsConditionsArray()\x2C defaultResolve);\n  const { url } = resolveResult;\n  format = resolveResult.format;\n\n  let filename;\n  if (url === defaultResolvedURL) {  // Not overridden\x2C skip the re-conversion.\n    filename = defaultResolvedFilename;\n  } else {\n    filename = convertURLToCJSFilename(url);\n  }\n\n  return { __proto__: null\x2C url\x2C format\x2C filename\x2C parentURL };\n}\n\n/**\n * @typedef {import('internal/modules/customization_hooks').ModuleLoadContext} ModuleLoadContext\n * @typedef {import('internal/modules/customization_hooks').ModuleLoadResult} ModuleLoadResult\n */\n\n/**\n * Load the source code of a module based on format.\n * @param {string} filename Filename of the module.\n * @param {string|undefined|null} format Format of the module.\n * @returns {string|null}\n */\nfunction defaultLoadImpl(filename\x2C format) {\n  switch (format) {\n    case undefined:\n    case null:\n    case 'module':\n    case 'commonjs':\n    case 'json':\n    case 'module-typescript':\n    case 'commonjs-typescript':\n    case 'typescript': {\n      return fs.readFileSync(filename\x2C 'utf8');\n    }\n    case 'builtin':\n      return null;\n    default:\n      // URL is not necessarily necessary/available - convert it on the spot for errors.\n      throw new ERR_UNKNOWN_MODULE_FORMAT(format\x2C convertCJSFilenameToURL(filename));\n  }\n}\n\n/**\n * Construct a last nextLoad() for load hooks invoked for the CJS loader.\n * @param {string} url URL passed from the hook.\n * @param {string} filename Filename inferred from the URL.\n * @returns {(url: string\x2C context: ModuleLoadContext) => ModuleLoadResult}\n */\nfunction getDefaultLoad(url\x2C filename) {\n  return function defaultLoad(urlFromHook\x2C context) {\n    // If the url is the same as the original one\x2C save the conversion.\n    const isLoadingOriginalModule = (urlFromHook === url);\n    const filenameFromHook = isLoadingOriginalModule ? filename : convertURLToCJSFilename(urlFromHook);\n    const source = defaultLoadImpl(filenameFromHook\x2C context.format);\n    // Format from context is directly returned\x2C because format detection should only be\n    // done after the entire load chain is completed.\n    return { source\x2C format: context.format };\n  };\n}\n\n/**\n * Load a specified builtin module\x2C invoking load hooks if necessary.\n * @param {string} id The module ID (without the node: prefix)\n * @param {string} url The module URL (with the node: prefix)\n * @param {string} format Format from resolution.\n * @returns {any} If there are no load hooks or the load hooks do not override the format of the\n *   builtin\x2C load and return the exports of the builtin. Otherwise\x2C return undefined.\n */\nfunction loadBuiltinWithHooks(id\x2C url\x2C format) {\n  if (loadHooks.length) {\n    url ??= `node:${id}`;\n    // TODO(joyeecheung): do we really want to invoke the load hook for the builtins?\n    const loadResult = loadWithHooks(url\x2C format || 'builtin'\x2C /* importAttributes */ undefined\x2C\n                                     getCjsConditionsArray()\x2C getDefaultLoad(url\x2C id));\n    if (loadResult.format && loadResult.format !== 'builtin') {\n      return undefined;  // Format has been overridden\x2C return undefined for the caller to continue loading.\n    }\n  }\n\n  // No hooks or the hooks have not overridden the format. Load it as a builtin module and return the\n  // exports.\n  const mod = loadBuiltinModule(id);\n  return mod.exports;\n}\n\n/**\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\n * 1. If a module already exists in the cache: return its exports object.\n * 2. If the module is native: call\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\n *    Then have it load the file contents before returning its exports object.\n * @param {string} request Specifier of module to load via `require`\n * @param {Module} parent Absolute path of the module importing the child\n * @param {boolean} isMain Whether the module is the main entry point\n * @returns {object}\n */\nModule._load = function(request\x2C parent\x2C isMain) {\n  let relResolveCacheIdentifier;\n  if (parent) {\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\n    // caching is required to allow cache invalidation without changing the old\n    // cache key names.\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\n    reportModuleToWatchMode(filename);\n    if (filename !== undefined) {\n      const cachedModule = Module._cache[filename];\n      if (cachedModule !== undefined) {\n        updateChildren(parent\x2C cachedModule\x2C true);\n        if (!cachedModule.loaded) {\n          return getExportsForCircularRequire(cachedModule);\n        }\n        return cachedModule.exports;\n      }\n      delete relativeResolveCache[relResolveCacheIdentifier];\n    }\n  }\n\n  const { url\x2C format\x2C filename } = resolveForCJSWithHooks(request\x2C parent\x2C isMain);\n\n  // For backwards compatibility\x2C if the request itself starts with node:\x2C load it before checking\n  // Module._cache. Otherwise\x2C load it after the check.\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\n    const result = loadBuiltinWithHooks(filename\x2C url\x2C format);\n    if (result) {\n      return result;\n    }\n    // The format of the builtin has been overridden by user hooks. Continue loading.\n  }\n\n  const cachedModule = Module._cache[filename];\n  if (cachedModule !== undefined) {\n    updateChildren(parent\x2C cachedModule\x2C true);\n    if (cachedModule.loaded) {\n      return cachedModule.exports;\n    }\n    // If it's not cached by the ESM loader\x2C the loading request\n    // comes from required CJS\x2C and we can consider it a circular\n    // dependency when it's cached.\n    if (!cachedModule[kIsCachedByESMLoader]) {\n      return getExportsForCircularRequire(cachedModule);\n    }\n    // If it's cached by the ESM loader as a way to indirectly pass\n    // the module in to avoid creating it twice\x2C the loading request\n    // came from imported CJS. In that case use the kModuleCircularVisited\n    // to determine if it's loading or not.\n    if (cachedModule[kModuleCircularVisited]) {\n      return getExportsForCircularRequire(cachedModule);\n    }\n    // This is an ESM loader created cache entry\x2C mark it as visited and fallthrough to loading the module.\n    cachedModule[kModuleCircularVisited] = true;\n  }\n\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\n    const result = loadBuiltinWithHooks(filename\x2C url\x2C format);\n    if (result) {\n      return result;\n    }\n    // The format of the builtin has been overridden by user hooks. Continue loading.\n  }\n\n  // Don't call updateChildren()\x2C Module constructor already does.\n  const module = cachedModule || new Module(filename\x2C parent);\n\n  if (!cachedModule) {\n    if (isMain) {\n      setOwnProperty(process\x2C 'mainModule'\x2C module);\n      setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\n      module.id = '.';\n      module[kIsMainSymbol] = true;\n    } else {\n      module[kIsMainSymbol] = false;\n    }\n\n    reportModuleToWatchMode(filename);\n    Module._cache[filename] = module;\n    module[kIsCachedByESMLoader] = false;\n    // If there are resolve hooks\x2C carry the context information into the\n    // load hooks for the module keyed by the (potentially customized) filename.\n    module[kURL] = url;\n    module[kFormat] = format;\n  }\n\n  if (parent !== undefined) {\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\n  }\n\n  let threw = true;\n  try {\n    module.load(filename);\n    threw = false;\n  } finally {\n    if (threw) {\n      delete Module._cache[filename];\n      if (parent !== undefined) {\n        delete relativeResolveCache[relResolveCacheIdentifier];\n        const children = parent?.children;\n        if (ArrayIsArray(children)) {\n          const index = ArrayPrototypeIndexOf(children\x2C module);\n          if (index !== -1) {\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\n          }\n        }\n      }\n    } else if (module.exports &&\n               !isProxy(module.exports) &&\n               ObjectGetPrototypeOf(module.exports) ===\n                 CircularRequirePrototypeWarningProxy) {\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\n    }\n  }\n\n  return module.exports;\n};\n\n/**\n * Given a `require` string and its context\x2C get its absolute file path.\n * @param {string} request The specifier to resolve\n * @param {Module} parent The module containing the `require` call\n * @param {boolean} isMain Whether the module is the main entry point\n * @param {ResolveFilenameOptions} options Options object\n * @typedef {object} ResolveFilenameOptions\n * @property {string[]} paths Paths to search for modules in\n * @property {Set<string>?} conditions The conditions to use for resolution.\n * @returns {void|string}\n */\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\n  if (BuiltinModule.normalizeRequirableId(request)) {\n    return request;\n  }\n  const conditions = (options?.conditions) || getCjsConditions();\n\n  let paths;\n\n  if (typeof options === 'object' && options !== null) {\n    if (ArrayIsArray(options.paths)) {\n      if (isRelative(request)) {\n        paths = options.paths;\n      } else {\n        const fakeParent = new Module(''\x2C null);\n\n        paths = [];\n\n        for (let i = 0; i < options.paths.length; i++) {\n          const path = options.paths[i];\n          fakeParent.paths = Module._nodeModulePaths(path);\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\n\n          for (let j = 0; j < lookupPaths.length; j++) {\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\n            }\n          }\n        }\n      }\n    } else if (options.paths === undefined) {\n      paths = Module._resolveLookupPaths(request\x2C parent);\n    } else {\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\n    }\n  } else {\n    paths = Module._resolveLookupPaths(request\x2C parent);\n  }\n\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\n    const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath);\n    if (pkg?.data.imports != null) {\n      try {\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\n        return finalizeEsmResolution(\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C conditions)\x2C\n          parentPath\x2C\n          pkg.path\x2C\n        );\n      } catch (e) {\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\n          throw createEsmNotFoundErr(request);\n        }\n        throw e;\n      }\n    }\n  }\n\n  // Try module self resolution first\n  const parentPath = trySelfParentPath(parent);\n  const selfResolved = trySelf(parentPath\x2C request\x2C conditions);\n  if (selfResolved) {\n    const cacheKey = request + '\\x00' +\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\n    Module._pathCache[cacheKey] = selfResolved;\n    return selfResolved;\n  }\n\n  // Look up the filename first\x2C since that's the cache key.\n  const filename = Module._findPath(request\x2C paths\x2C isMain\x2C conditions);\n  if (filename) { return filename; }\n  const requireStack = [];\n  for (let cursor = parent;\n    cursor;\n    cursor = cursor[kModuleParent]) {\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\n  }\n  let message = `Cannot find module '${request}'`;\n  if (requireStack.length > 0) {\n    message = message + '\\nRequire stack:\\n- ' +\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\n  }\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  err.code = 'MODULE_NOT_FOUND';\n  err.requireStack = requireStack;\n  throw err;\n};\n\n/**\n * Finishes resolving an ES module specifier into an absolute file path.\n * @param {string} resolved The resolved module specifier\n * @param {string} parentPath The path of the parent module\n * @param {string} pkgPath The path of the package.json file\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\n * @throws {Error} If the module cannot be found\n * @returns {void|string|undefined}\n */\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\n    throw new ERR_INVALID_MODULE_SPECIFIER(\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\n  }\n  const filename = fileURLToPath(resolved);\n  const actual = tryFile(filename);\n  if (actual) {\n    return actual;\n  }\n  throw createEsmNotFoundErr(filename\x2C pkgPath);\n}\n\n/**\n * Creates an error object for when a requested ES module cannot be found.\n * @param {string} request The name of the requested module\n * @param {string} [path] The path to the requested module\n * @returns {Error}\n */\nfunction createEsmNotFoundErr(request\x2C path) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(`Cannot find module '${request}'`);\n  err.code = 'MODULE_NOT_FOUND';\n  if (path) {\n    err.path = path;\n  }\n  // TODO(BridgeAR): Add the requireStack as well.\n  return err;\n}\n\n/**\n * Given a file name\x2C pass it to the proper extension handler.\n * @param {string} filename The `require` specifier\n * @returns {void}\n */\nModule.prototype.load = function(filename) {\n  debug('load %j for module %j'\x2C filename\x2C this.id);\n\n  assert(!this.loaded);\n  this.filename ??= filename;\n  this.paths ??= Module._nodeModulePaths(path.dirname(filename));\n\n  const extension = findLongestRegisteredExtension(filename);\n\n  Module._extensions[extension](this\x2C filename);\n  this.loaded = true;\n\n  // Create module entry at load time to snapshot exports correctly\n  const exports = this.exports;\n  // Preemptively cache for ESM loader.\n  this[kModuleExport] = exports;\n};\n\n/**\n * Loads a module at the given file path. Returns that module's `exports` property.\n * @param {string} id\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\n * @returns {any}\n */\nModule.prototype.require = function(id) {\n  validateString(id\x2C 'id');\n  if (id === '') {\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\n                                    'must be a non-empty string');\n  }\n  requireDepth++;\n  try {\n    return wrapModuleLoad(id\x2C this\x2C /* isMain */ false);\n  } finally {\n    requireDepth--;\n  }\n};\n\nlet requireModuleWarningMode;\n/**\n * Resolve and evaluate it synchronously as ESM if it's ESM.\n * @param {Module} mod CJS module instance\n * @param {string} filename Absolute path of the file.\n * @param {string} format Format of the module. If it had types\x2C this would be what it is after type-stripping.\n * @param {string} source Source the module. If it had types\x2C this would have the type stripped.\n */\nfunction loadESMFromCJS(mod\x2C filename\x2C format\x2C source) {\n  const cascadedLoader = require('internal/modules/esm/loader').getOrInitializeCascadedLoader();\n  const isMain = mod[kIsMainSymbol];\n  if (isMain) {\n    require('internal/modules/run_main').runEntryPointWithESMLoader((cascadedLoader) => {\n      const mainURL = pathToFileURL(filename).href;\n      return cascadedLoader.import(mainURL\x2C undefined\x2C { __proto__: null }\x2C undefined\x2C true);\n    });\n    // ESM won't be accessible via process.mainModule.\n    setOwnProperty(process\x2C 'mainModule'\x2C undefined);\n  } else {\n    const parent = mod[kModuleParent];\n\n    requireModuleWarningMode ??= getOptionValue('--trace-require-module');\n    if (requireModuleWarningMode) {\n      let shouldEmitWarning = false;\n      if (requireModuleWarningMode === 'no-node-modules') {\n        // Check if the require() comes from node_modules.\n        if (parent) {\n          shouldEmitWarning = !isUnderNodeModules(parent.filename);\n        } else if (mod[kIsCachedByESMLoader]) {\n          // It comes from the require() built for `import cjs` and doesn't have a parent recorded\n          // in the CJS module instance. Inspect the stack trace to see if the require()\n          // comes from node_modules and reduce the noise. If there are more than 100 frames\x2C\n          // just give up and assume it is under node_modules.\n          shouldEmitWarning = !isInsideNodeModules(100\x2C true);\n        }\n      } else {\n        shouldEmitWarning = true;\n      }\n      if (shouldEmitWarning) {\n        let messagePrefix;\n        if (parent) {\n          // In the case of the module calling `require()`\x2C it's more useful to know its absolute path.\n          let from = parent.filename || parent.id;\n          // In the case of the module being require()d\x2C it's more useful to know the id passed into require().\n          const to = mod.id || mod.filename;\n          if (from === 'internal/preload') {\n            from = '--require';\n          } else if (from === '<repl>') {\n            from = 'The REPL';\n          } else if (from === '.') {\n            from = 'The entry point';\n          } else {\n            from &&= `CommonJS module ${from}`;\n          }\n          if (from && to) {\n            messagePrefix = `${from} is loading ES Module ${to} using require().\\n`;\n          }\n        }\n        emitExperimentalWarning('Support for loading ES Module in require()'\x2C\n                                messagePrefix\x2C\n                                undefined\x2C\n                                parent?.require);\n        requireModuleWarningMode = true;\n      }\n    }\n    const {\n      wrap\x2C\n      namespace\x2C\n    } = cascadedLoader.importSyncForRequire(mod\x2C filename\x2C source\x2C isMain\x2C parent);\n    // Tooling in the ecosystem have been using the __esModule property to recognize\n    // transpiled ESM in consuming code. For example\x2C a 'log' package written in ESM:\n    //\n    // export default function log(val) { console.log(val); }\n    //\n    // Can be transpiled as:\n    //\n    // exports.__esModule = true;\n    // exports.default = function log(val) { console.log(val); }\n    //\n    // The consuming code may be written like this in ESM:\n    //\n    // import log from 'log'\n    //\n    // Which gets transpiled to:\n    //\n    // const _mod = require('log');\n    // const log = _mod.__esModule ? _mod.default : _mod;\n    //\n    // So to allow transpiled consuming code to recognize require()'d real ESM\n    // as ESM and pick up the default exports\x2C we add a __esModule property by\n    // building a source text module facade for any module that has a default\n    // export and add .__esModule = true to the exports. This maintains the\n    // enumerability of the re-exported names and the live binding of the exports\x2C\n    // without incurring a non-trivial per-access overhead on the exports.\n    //\n    // The source of the facade is defined as a constant per-isolate property\n    // required_module_default_facade_source_string\x2C which looks like this\n    //\n    // export * from 'original';\n    // export { default } from 'original';\n    // export const __esModule = true;\n    //\n    // And the 'original' module request is always resolved by\n    // createRequiredModuleFacade() to `wrap` which is a ModuleWrap wrapping\n    // over the original module.\n\n    // We don't do this to modules that are marked as CJS ESM or that\n    // don't have default exports to avoid the unnecessary overhead.\n    // If __esModule is already defined\x2C we will also skip the extension\n    // to allow users to override it.\n    if (ObjectHasOwn(namespace\x2C 'module.exports')) {\n      mod.exports = namespace['module.exports'];\n    } else if (!ObjectHasOwn(namespace\x2C 'default') || ObjectHasOwn(namespace\x2C '__esModule')) {\n      mod.exports = namespace;\n    } else {\n      mod.exports = createRequiredModuleFacade(wrap);\n    }\n  }\n}\n\n/**\n * Wraps the given content in a script and runs it in a new context.\n * @param {string} filename The name of the file being loaded\n * @param {string} content The content of the file being loaded\n * @param {Module|undefined} cjsModuleInstance The CommonJS loader instance\n * @param {'commonjs'|undefined} format Intended format of the module.\n * @returns {object}\n */\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C format) {\n  assert(format !== 'module'\x2C 'ESM should be handled in loadESMFromCJS()');\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\n  const importModuleDynamically = vm_dynamic_import_default_internal;\n  if (patched) {\n    const wrapped = Module.wrap(content);\n    const script = makeContextifyScript(\n      wrapped\x2C                 // code\n      filename\x2C                // filename\n      0\x2C                       // lineOffset\n      0\x2C                       // columnOffset\n      undefined\x2C               // cachedData\n      false\x2C                   // produceCachedData\n      undefined\x2C               // parsingContext\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\n      importModuleDynamically\x2C // importModuleDynamically\n    );\n\n    // Cache the source map for the module if present.\n    const { sourceMapURL\x2C sourceURL } = script;\n    if (sourceMapURL) {\n      maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C false\x2C sourceURL\x2C sourceMapURL);\n    }\n\n    return {\n      __proto__: null\x2C\n      function: runScriptInThisContext(script\x2C true\x2C false)\x2C\n      sourceMapURL\x2C\n    };\n  }\n\n  let shouldDetectModule = false;\n  if (format !== 'commonjs') {\n    if (cjsModuleInstance?.[kIsMainSymbol]) {\n      // For entry points\x2C format detection is used unless explicitly disabled.\n      shouldDetectModule = getOptionValue('--experimental-detect-module');\n    } else {\n      // For modules being loaded by `require()`\x2C if require(esm) is disabled\x2C\n      // don't try to reparse to detect format and just throw for ESM syntax.\n      shouldDetectModule = getOptionValue('--experimental-require-module');\n    }\n  }\n  const result = compileFunctionForCJSLoader(content\x2C filename\x2C false /* is_sea_main */\x2C shouldDetectModule);\n\n  // Cache the source map for the module if present.\n  if (result.sourceMapURL) {\n    maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C false\x2C result.sourceURL\x2C result.sourceMapURL);\n  }\n\n  return result;\n}\n\n/**\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\n * `exports`) to the file. Returns exception\x2C if any.\n * @param {string} content The source code of the module\n * @param {string} filename The file path of the module\n * @param {'module'|'commonjs'|'commonjs-typescript'|'module-typescript'|'typescript'} format\n *   Intended format of the module.\n * @returns {any}\n */\nModule.prototype._compile = function(content\x2C filename\x2C format) {\n  if (format === 'commonjs-typescript' || format === 'module-typescript' || format === 'typescript') {\n    content = stripTypeScriptModuleTypes(content\x2C filename);\n    switch (format) {\n      case 'commonjs-typescript': {\n        format = 'commonjs';\n        break;\n      }\n      case 'module-typescript': {\n        format = 'module';\n        break;\n      }\n      // If the format is still unknown i.e. 'typescript'\x2C detect it in\n      // wrapSafe using the type-stripped source.\n      default:\n        format = undefined;\n        break;\n    }\n  }\n\n  let redirects;\n\n  let compiledWrapper;\n  if (format !== 'module') {\n    const result = wrapSafe(filename\x2C content\x2C this\x2C format);\n    compiledWrapper = result.function;\n    if (result.canParseAsESM) {\n      format = 'module';\n    }\n  }\n\n  if (format === 'module') {\n    loadESMFromCJS(this\x2C filename\x2C format\x2C content);\n    return;\n  }\n\n  const dirname = path.dirname(filename);\n  const require = makeRequireFunction(this\x2C redirects);\n  let result;\n  const exports = this.exports;\n  const thisValue = exports;\n  const module = this;\n  if (requireDepth === 0) { statCache = new SafeMap(); }\n  setHasStartedUserCJSExecution();\n  this[kIsExecuting] = true;\n  if (this[kIsMainSymbol] && getOptionValue('--inspect-brk')) {\n    const { callAndPauseOnStart } = internalBinding('inspector');\n    result = callAndPauseOnStart(compiledWrapper\x2C thisValue\x2C exports\x2C\n                                 require\x2C module\x2C filename\x2C dirname);\n  } else {\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\n  }\n  this[kIsExecuting] = false;\n  if (requireDepth === 0) { statCache = null; }\n  return result;\n};\n\n/**\n * Get the source code of a module\x2C using cached ones if it's cached. This is used\n * for TypeScript\x2C JavaScript and JSON loading.\n * After this returns\x2C mod[kFormat]\x2C mod[kModuleSource] and mod[kURL] will be set.\n * @param {Module} mod Module instance whose source is potentially already cached.\n * @param {string} filename Absolute path to the file of the module.\n * @returns {{source: string\x2C format?: string}}\n */\nfunction loadSource(mod\x2C filename\x2C formatFromNode) {\n  if (mod[kFormat] === undefined) {\n    mod[kFormat] = formatFromNode;\n  }\n  // If the module was loaded before\x2C just return.\n  if (mod[kModuleSource] !== undefined) {\n    return { source: mod[kModuleSource]\x2C format: mod[kFormat] };\n  }\n\n  // Fast path: no hooks\x2C just load it and return.\n  if (!loadHooks.length) {\n    const source = defaultLoadImpl(filename\x2C formatFromNode);\n    return { source\x2C format: formatFromNode };\n  }\n\n  if (mod[kURL] === undefined) {\n    mod[kURL] = convertCJSFilenameToURL(filename);\n  }\n\n  const loadResult = loadWithHooks(mod[kURL]\x2C mod[kFormat]\x2C /* importAttributes */ undefined\x2C\n                                   getCjsConditionsArray()\x2C\n                                   getDefaultLoad(mod[kURL]\x2C filename));\n\n  // Reset the module properties with load hook results.\n  if (loadResult.format !== undefined) {\n    mod[kFormat] = loadResult.format;\n  }\n  mod[kModuleSource] = loadResult.source;\n  return { source: mod[kModuleSource]\x2C format: mod[kFormat] };\n}\n\nfunction reconstructErrorStack(err\x2C parentPath\x2C parentSource) {\n  const errLine = StringPrototypeSplit(\n    StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\n      err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\n  const { 1: line\x2C 2: col } =\n    RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\n  if (line && col) {\n    const srcLine = StringPrototypeSplit(parentSource\x2C '\\n'\x2C line)[line - 1];\n    const frame = `${parentPath}:${line}\\n${srcLine}\\n${StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\n    setArrowMessage(err\x2C frame);\n  }\n}\n\n/**\n * Generate the legacy ERR_REQUIRE_ESM for the cases where require(esm) is disabled.\n * @param {Module} mod The module being required.\n * @param {undefined|object} pkg Data of the nearest package.json of the module.\n * @param {string} content Source code of the module.\n * @param {string} filename Filename of the module\n * @returns {Error}\n */\nfunction getRequireESMError(mod\x2C pkg\x2C content\x2C filename) {\n  // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\n  const parent = mod[kModuleParent];\n  const parentPath = parent?.filename;\n  const packageJsonPath = pkg?.path;\n  const usesEsm = containsModuleSyntax(content\x2C filename);\n  const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\n                                  packageJsonPath);\n  // Attempt to reconstruct the parent require frame.\n  const parentModule = Module._cache[parentPath];\n  if (parentModule) {\n    let parentSource;\n    try {\n      ({ source: parentSource } = loadSource(parentModule\x2C parentPath));\n    } catch {\n      // Continue regardless of error.\n    }\n    if (parentSource) {\n      // TODO(joyeecheung): trim off internal frames from the stack.\n      reconstructErrorStack(err\x2C parentPath\x2C parentSource);\n    }\n  }\n  return err;\n}\n\n/**\n * Built-in handler for `.js` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.js'] = function(module\x2C filename) {\n  let format\x2C pkg;\n  const tsEnabled = getOptionValue('--experimental-strip-types');\n  if (StringPrototypeEndsWith(filename\x2C '.cjs')) {\n    format = 'commonjs';\n  } else if (StringPrototypeEndsWith(filename\x2C '.mjs')) {\n    format = 'module';\n  } else if (StringPrototypeEndsWith(filename\x2C '.js')) {\n    pkg = packageJsonReader.getNearestParentPackageJSON(filename);\n    const typeFromPjson = pkg?.data.type;\n    if (typeFromPjson === 'module' || typeFromPjson === 'commonjs' || !typeFromPjson) {\n      format = typeFromPjson;\n    }\n  } else if (StringPrototypeEndsWith(filename\x2C '.mts') && tsEnabled) {\n    format = 'module-typescript';\n  } else if (StringPrototypeEndsWith(filename\x2C '.cts') && tsEnabled) {\n    format = 'commonjs-typescript';\n  } else if (StringPrototypeEndsWith(filename\x2C '.ts') && tsEnabled) {\n    pkg = packageJsonReader.getNearestParentPackageJSON(filename);\n    const typeFromPjson = pkg?.data.type;\n    if (typeFromPjson === 'module') {\n      format = 'module-typescript';\n    } else if (typeFromPjson === 'commonjs') {\n      format = 'commonjs-typescript';\n    } else {\n      format = 'typescript';\n    }\n  }\n  const { source\x2C format: loadedFormat } = loadSource(module\x2C filename\x2C format);\n  // Function require shouldn't be used in ES modules when require(esm) is disabled.\n  if ((loadedFormat === 'module' || loadedFormat === 'module-typescript') &&\n    !getOptionValue('--experimental-require-module')) {\n    const err = getRequireESMError(module\x2C pkg\x2C source\x2C filename);\n    throw err;\n  }\n  module._compile(source\x2C filename\x2C loadedFormat);\n};\n\n/**\n * Native handler for `.json` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n */\nModule._extensions['.json'] = function(module\x2C filename) {\n  const { source: content } = loadSource(module\x2C filename\x2C 'json');\n\n  try {\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\n  } catch (err) {\n    err.message = filename + ': ' + err.message;\n    throw err;\n  }\n};\n\n/**\n * Native handler for `.node` files.\n * @param {Module} module The module to compile\n * @param {string} filename The file path of the module\n * @returns {any}\n */\nModule._extensions['.node'] = function(module\x2C filename) {\n  // Be aware this doesn't use `content`\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\n};\n\n/**\n * Creates a `require` function that can be used to load modules from the specified path.\n * @param {string} filename The path to the module\n * @returns {any}\n */\nfunction createRequireFromPath(filename) {\n  // Allow a directory to be passed as the filename\n  const trailingSlash =\n    StringPrototypeEndsWith(filename\x2C '/') ||\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\n\n  const proxyPath = trailingSlash ?\n    path.join(filename\x2C 'noop.js') :\n    filename;\n\n  const m = new Module(proxyPath);\n  m.filename = proxyPath;\n\n  m.paths = Module._nodeModulePaths(m.path);\n  return makeRequireFunction(m\x2C null);\n}\n\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\n  'absolute path string';\n\n/**\n * Creates a new `require` function that can be used to load modules.\n * @param {string | URL} filename The path or URL to the module context for this `require`\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\n * resolved to an absolute path.\n * @returns {object}\n */\nfunction createRequire(filename) {\n  let filepath;\n\n  if (isURL(filename) ||\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\n    try {\n      filepath = fileURLToPath(filename);\n    } catch {\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\n                                      createRequireError);\n    }\n  } else if (typeof filename !== 'string') {\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\n  } else {\n    filepath = filename;\n  }\n  return createRequireFromPath(filepath);\n}\n\n/**\n * Checks if a path is relative\n * @param {string} path the target path\n * @returns {boolean} true if the path is relative\x2C false otherwise\n */\nfunction isRelative(path) {\n  if (StringPrototypeCharCodeAt(path\x2C 0) !== CHAR_DOT) { return false; }\n\n  return path.length === 1 || path === '..' ||\n  StringPrototypeStartsWith(path\x2C './') ||\n  StringPrototypeStartsWith(path\x2C '../') ||\n  ((isWindows && StringPrototypeStartsWith(path\x2C '.\\\\')) ||\n  StringPrototypeStartsWith(path\x2C '..\\\\'));\n}\n\nModule.createRequire = createRequire;\n\n/**\n * Define the paths to use for resolving a module.\n */\nModule._initPaths = function() {\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\n\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\n  const prefixDir = isWindows ?\n    path.resolve(process.execPath\x2C '..') :\n    path.resolve(process.execPath\x2C '..'\x2C '..');\n\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\n\n  if (homeDir) {\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\n  }\n\n  if (nodePath) {\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\n      Boolean\x2C\n    ));\n  }\n\n  modulePaths = paths;\n\n  // Clone as a shallow copy\x2C for introspection.\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\n};\n\n/**\n * Handle modules loaded via `--require`.\n * @param {string[]} requests The values of `--require`\n */\nModule._preloadModules = function(requests) {\n  if (!ArrayIsArray(requests)) { return; }\n\n  isPreloading = true;\n\n  // Preloaded modules have a dummy parent module which is deemed to exist\n  // in the current working directory. This seeds the search path for\n  // preloaded modules.\n  const parent = new Module('internal/preload'\x2C null);\n  try {\n    parent.paths = Module._nodeModulePaths(process.cwd());\n  } catch (e) {\n    if (e.code !== 'ENOENT') {\n      isPreloading = false;\n      throw e;\n    }\n  }\n  for (let n = 0; n < requests.length; n++) {\n    parent.require(requests[n]);\n  }\n  isPreloading = false;\n};\n\n/**\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\n * both CommonJS and ES module contexts.\n */\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\n  for (const mod of BuiltinModule.map.values()) {\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\n      mod.syncExports();\n    }\n  }\n};\n\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return Module;\n  }\x2C\n  configurable: false\x2C\n  enumerable: false\x2C\n});\n\n// Backwards compatibility\nModule.Module = Module;\nModule.registerHooks = registerHooks;\n
code-source-info,0x148001ee0,65,12320,12344,,,
code-creation,JS,10,20666,0x148001f80,376,SafeSet node:internal/per_context/primordials:422:16,0x3699125c07f8,^
code-source-info,0x148001f80,3,11967,11984,,,
tick,0x1014d1e54,20666,0,0x0,9,0x3231531c8eef,0x3231531c958e,0x3231531c2e58,0x3231531c5370,0x3231531c4482,0x3231531c41f3,0x3231531c4bec,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,20708,0x148002120,2424,resolve node:path:1206:10,0xb1c4a40a690,^
code-source-info,0x148002120,37,37912,39234,,,
code-creation,JS,10,20708,0x148002ac0,1672, node:internal/modules/cjs/loader:865:37,0x1f2675701768,^
code-source-info,0x148002ac0,65,25612,26792,,,
code-creation,JS,11,21083,0x148003180,272,isPosixPathSeparator node:path:68:30,0xb1c4a409690,+'
code-source-info,0x148003180,37,2128,2176,,,
code-creation,Eval,9,21125,0x277c96e815a0,5, /opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js:1:1,0x7143c169f8,~
script-source,76,/opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js,const cluster = require('cluster')\n\ncluster.on('fork'\x2C () => {\n  throw new Error('0x does not support clustering.')\n})\n
code-source-info,0x277c96e815a0,76,0,119,C0O0C4O119,,
code-creation,JS,9,21125,0x277c96e81648,29, /opt/homebrew/lib/node_modules/0x/lib/preload/no-cluster.js:1:1,0x7143c16ac8,~
code-source-info,0x277c96e81648,76,0,119,C0O16C3O16C8O44C21O44C28O118,,
code-creation,Eval,9,21166,0x277c96e816e0,5, node:cluster:1:1,0x7143c17200,~
script-source,77,node:cluster,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectPrototypeHasOwnProperty: ObjectHasOwn\x2C\n} = primordials;\n\nconst childOrPrimary = ObjectHasOwn(process.env\x2C 'NODE_UNIQUE_ID') ? 'child' : 'primary';\nmodule.exports = require(`internal/cluster/${childOrPrimary}`);\n
code-source-info,0x277c96e816e0,77,0,1376,C0O0C4O1376,,
code-creation,JS,9,21208,0x277c96e81788,47, node:cluster:1:1,0x7143c172d0,~
code-source-info,0x277c96e81788,77,0,1376,C0O1190C5O1266C13O1245C27O1312C32O1357C37O1329C41O1327C46O1375,,
tick,0x10169afdc,21375,0,0x0,2,0x148000544,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,21416,0x277c96e81838,5, node:internal/cluster/primary:1:1,0x7143c18578,~
script-source,78,node:internal/cluster/primary,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSome\x2C\n  ObjectKeys\x2C\n  ObjectValues\x2C\n  SafeMap\x2C\n  StringPrototypeStartsWith\x2C\n} = primordials;\nconst {\n  codes: {\n    ERR_SOCKET_BAD_PORT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst assert = require('internal/assert');\nconst { fork } = require('child_process');\nconst path = require('path');\nconst EventEmitter = require('events');\nconst RoundRobinHandle = require('internal/cluster/round_robin_handle');\nconst SharedHandle = require('internal/cluster/shared_handle');\nconst Worker = require('internal/cluster/worker');\nconst { getInspectPort\x2C isUsingInspector } = require('internal/util/inspector');\nconst { internal\x2C sendHelper } = require('internal/cluster/utils');\nconst cluster = new EventEmitter();\nconst intercom = new EventEmitter();\nconst SCHED_NONE = 1;\nconst SCHED_RR = 2;\n\nmodule.exports = cluster;\n\nconst handles = new SafeMap();\ncluster.isWorker = false;\ncluster.isMaster = true; // Deprecated alias. Must be same as isPrimary.\ncluster.isPrimary = true;\ncluster.Worker = Worker;\ncluster.workers = {};\ncluster.settings = {};\ncluster.SCHED_NONE = SCHED_NONE;  // Leave it to the operating system.\ncluster.SCHED_RR = SCHED_RR;      // Primary distributes connections.\n\nlet ids = 0;\nlet initialized = false;\n\n// XXX(bnoordhuis) Fold cluster.schedulingPolicy into cluster.settings?\nlet schedulingPolicy = process.env.NODE_CLUSTER_SCHED_POLICY;\nif (schedulingPolicy === 'rr')\n  schedulingPolicy = SCHED_RR;\nelse if (schedulingPolicy === 'none')\n  schedulingPolicy = SCHED_NONE;\nelse if (process.platform === 'win32') {\n  // Round-robin doesn't perform well on\n  // Windows due to the way IOCP is wired up.\n  schedulingPolicy = SCHED_NONE;\n} else\n  schedulingPolicy = SCHED_RR;\n\ncluster.schedulingPolicy = schedulingPolicy;\n\ncluster.setupPrimary = function(options) {\n  const settings = {\n    args: ArrayPrototypeSlice(process.argv\x2C 2)\x2C\n    exec: process.argv[1]\x2C\n    execArgv: process.execArgv\x2C\n    silent: false\x2C\n    ...cluster.settings\x2C\n    ...options\x2C\n  };\n\n  // Tell V8 to write profile data for each process to a separate file.\n  // Without --logfile=v8-%p.log\x2C everything ends up in a single\x2C unusable\n  // file. (Unusable because what V8 logs are memory addresses and each\n  // process has its own memory mappings.)\n  if (ArrayPrototypeSome(settings.execArgv\x2C\n                         (s) => StringPrototypeStartsWith(s\x2C '--prof')) &&\n      !ArrayPrototypeSome(settings.execArgv\x2C\n                          (s) => StringPrototypeStartsWith(s\x2C '--logfile='))) {\n    settings.execArgv = [...settings.execArgv\x2C '--logfile=v8-%p.log'];\n  }\n\n  cluster.settings = settings;\n\n  if (initialized === true)\n    return process.nextTick(setupSettingsNT\x2C settings);\n\n  initialized = true;\n  schedulingPolicy = cluster.schedulingPolicy;  // Freeze policy.\n  assert(schedulingPolicy === SCHED_NONE || schedulingPolicy === SCHED_RR\x2C\n         `Bad cluster.schedulingPolicy: ${schedulingPolicy}`);\n\n  process.nextTick(setupSettingsNT\x2C settings);\n\n  process.on('internalMessage'\x2C (message) => {\n    if (message.cmd !== 'NODE_DEBUG_ENABLED')\n      return;\n\n    for (const worker of ObjectValues(cluster.workers)) {\n      if (worker.state === 'online' || worker.state === 'listening') {\n        process._debugProcess(worker.process.pid);\n      } else {\n        worker.once('online'\x2C function() {\n          process._debugProcess(this.process.pid);\n        });\n      }\n    }\n  });\n};\n\n// Deprecated alias must be same as setupPrimary\ncluster.setupMaster = cluster.setupPrimary;\n\nfunction setupSettingsNT(settings) {\n  cluster.emit('setup'\x2C settings);\n}\n\nfunction createWorkerProcess(id\x2C env) {\n  const workerEnv = { ...process.env\x2C ...env\x2C NODE_UNIQUE_ID: `${id}` };\n  const execArgv = [...cluster.settings.execArgv];\n\n  if (cluster.settings.inspectPort === null) {\n    throw new ERR_SOCKET_BAD_PORT('Port'\x2C null\x2C true);\n  }\n  if (isUsingInspector(cluster.settings.execArgv)) {\n    ArrayPrototypePush(execArgv\x2C `--inspect-port=${getInspectPort(cluster.settings.inspectPort)}`);\n  }\n\n  return fork(cluster.settings.exec\x2C cluster.settings.args\x2C {\n    cwd: cluster.settings.cwd\x2C\n    env: workerEnv\x2C\n    serialization: cluster.settings.serialization\x2C\n    silent: cluster.settings.silent\x2C\n    windowsHide: cluster.settings.windowsHide\x2C\n    execArgv: execArgv\x2C\n    stdio: cluster.settings.stdio\x2C\n    gid: cluster.settings.gid\x2C\n    uid: cluster.settings.uid\x2C\n  });\n}\n\nfunction removeWorker(worker) {\n  assert(worker);\n  delete cluster.workers[worker.id];\n\n  if (ObjectKeys(cluster.workers).length === 0) {\n    assert(handles.size === 0\x2C 'Resource leak detected.');\n    intercom.emit('disconnect');\n  }\n}\n\nfunction removeHandlesForWorker(worker) {\n  assert(worker);\n\n  for (const { 0: key\x2C 1: handle } of handles) {\n    if (handle.remove(worker))\n      handles.delete(key);\n  }\n}\n\ncluster.fork = function(env) {\n  cluster.setupPrimary();\n  const id = ++ids;\n  const workerProcess = createWorkerProcess(id\x2C env);\n  const worker = new Worker({\n    id: id\x2C\n    process: workerProcess\x2C\n  });\n\n  worker.on('message'\x2C function(message\x2C handle) {\n    cluster.emit('message'\x2C this\x2C message\x2C handle);\n  });\n\n  worker.process.once('exit'\x2C (exitCode\x2C signalCode) => {\n    /*\n     * Remove the worker from the workers list only\n     * if it has disconnected\x2C otherwise we might\n     * still want to access it.\n     */\n    if (!worker.isConnected()) {\n      removeHandlesForWorker(worker);\n      removeWorker(worker);\n    }\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'dead';\n    worker.emit('exit'\x2C exitCode\x2C signalCode);\n    cluster.emit('exit'\x2C worker\x2C exitCode\x2C signalCode);\n  });\n\n  worker.process.once('disconnect'\x2C () => {\n    /*\n     * Now is a good time to remove the handles\n     * associated with this worker because it is\n     * not connected to the primary anymore.\n     */\n    removeHandlesForWorker(worker);\n\n    /*\n     * Remove the worker from the workers list only\n     * if its process has exited. Otherwise\x2C we might\n     * still want to access it.\n     */\n    if (worker.isDead())\n      removeWorker(worker);\n\n    worker.exitedAfterDisconnect = !!worker.exitedAfterDisconnect;\n    worker.state = 'disconnected';\n    worker.emit('disconnect');\n    cluster.emit('disconnect'\x2C worker);\n  });\n\n  worker.process.on('internalMessage'\x2C internal(worker\x2C onmessage));\n  process.nextTick(emitForkNT\x2C worker);\n  cluster.workers[worker.id] = worker;\n  return worker;\n};\n\nfunction emitForkNT(worker) {\n  cluster.emit('fork'\x2C worker);\n}\n\ncluster.disconnect = function(cb) {\n  const workers = ObjectValues(cluster.workers);\n\n  if (workers.length === 0) {\n    process.nextTick(() => intercom.emit('disconnect'));\n  } else {\n    for (const worker of workers) {\n      if (worker.isConnected()) {\n        worker.disconnect();\n      }\n    }\n  }\n\n  if (typeof cb === 'function')\n    intercom.once('disconnect'\x2C cb);\n};\n\nconst methodMessageMapping = {\n  close\x2C\n  exitedAfterDisconnect\x2C\n  listening\x2C\n  online\x2C\n  queryServer\x2C\n};\n\nfunction onmessage(message\x2C handle) {\n  const worker = this;\n\n  const fn = methodMessageMapping[message.act];\n\n  if (typeof fn === 'function')\n    fn(worker\x2C message);\n}\n\nfunction online(worker) {\n  worker.state = 'online';\n  worker.emit('online');\n  cluster.emit('online'\x2C worker);\n}\n\nfunction exitedAfterDisconnect(worker\x2C message) {\n  worker.exitedAfterDisconnect = true;\n  send(worker\x2C { ack: message.seq });\n}\n\nfunction queryServer(worker\x2C message) {\n  // Stop processing if worker already disconnecting\n  if (worker.exitedAfterDisconnect)\n    return;\n\n  const key = `${message.address}:${message.port}:${message.addressType}:` +\n              `${message.fd}:${message.index}`;\n  let handle = handles.get(key);\n\n  if (handle === undefined) {\n    let address = message.address;\n\n    // Find shortest path for unix sockets because of the ~100 byte limit\n    if (message.port < 0 && typeof address === 'string' &&\n        process.platform !== 'win32') {\n\n      address = path.relative(process.cwd()\x2C address);\n\n      if (message.address.length < address.length)\n        address = message.address;\n    }\n\n    // UDP is exempt from round-robin connection balancing for what should\n    // be obvious reasons: it's connectionless. There is nothing to send to\n    // the workers except raw datagrams and that's pointless.\n    if (schedulingPolicy !== SCHED_RR ||\n        message.addressType === 'udp4' ||\n        message.addressType === 'udp6') {\n      handle = new SharedHandle(key\x2C address\x2C message);\n    } else {\n      handle = new RoundRobinHandle(key\x2C address\x2C message);\n    }\n\n    handles.set(key\x2C handle);\n  }\n\n  handle.data ||= message.data;\n\n  // Set custom server data\n  handle.add(worker\x2C (errno\x2C reply\x2C handle) => {\n    const { data } = handles.get(key);\n\n    if (errno)\n      handles.delete(key);  // Gives other workers a chance to retry.\n\n    send(worker\x2C {\n      errno\x2C\n      key\x2C\n      ack: message.seq\x2C\n      data\x2C\n      ...reply\x2C\n    }\x2C handle);\n  });\n}\n\nfunction listening(worker\x2C message) {\n  const info = {\n    addressType: message.addressType\x2C\n    address: message.address\x2C\n    port: message.port\x2C\n    fd: message.fd\x2C\n  };\n\n  worker.state = 'listening';\n  worker.emit('listening'\x2C info);\n  cluster.emit('listening'\x2C worker\x2C info);\n}\n\n// Server in worker is closing\x2C remove from list. The handle may have been\n// removed by a prior call to removeHandlesForWorker() so guard against that.\nfunction close(worker\x2C message) {\n  const key = message.key;\n  const handle = handles.get(key);\n\n  if (handle && handle.remove(worker))\n    handles.delete(key);\n}\n\nfunction send(worker\x2C message\x2C handle\x2C cb) {\n  return sendHelper(worker.process\x2C message\x2C handle\x2C cb);\n}\n\n// Extend generic Worker with methods specific to the primary process.\nWorker.prototype.disconnect = function() {\n  this.exitedAfterDisconnect = true;\n  send(this\x2C { act: 'disconnect' });\n  removeHandlesForWorker(this);\n  removeWorker(this);\n  return this;\n};\n\nWorker.prototype.destroy = function(signo) {\n  const signal = signo || 'SIGTERM';\n  this.process.kill(signal);\n};\n
code-source-info,0x277c96e81838,78,0,10075,C0O0C4O10075,,
code-creation,JS,9,21666,0x277c96e81c78,632, node:internal/cluster/primary:1:1,0x7143c18868,~
code-source-info,0x277c96e81c
code-creation,Eval,9,22166,0x277c96e82068,5, node:child_process:1:1,0x7143c1bd08,~
script-source,79,node:child_process,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeLastIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperty\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  PromiseWithResolvers\x2C\n  RegExpPrototypeExec\x2C\n  SafeSet\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeToUpperCase\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  assignFunctionName\x2C\n  convertToValidSignal\x2C\n  getSystemErrorName\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n} = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nlet debug = require('internal/util/debuglog').debuglog(\n  'child_process'\x2C\n  (fn) => {\n    debug = fn;\n  }\x2C\n);\nconst { Buffer } = require('buffer');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_CHILD_PROCESS_IPC_REQUIRED\x2C\n    ERR_CHILD_PROCESS_STDIO_MAXBUFFER\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { getValidatedPath } = require('internal/fs/utils');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateArray\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst child_process = require('internal/child_process');\nconst {\n  getValidStdio\x2C\n  setupChannel\x2C\n  ChildProcess\x2C\n  stdioStringToArray\x2C\n} = child_process;\n\nconst MAX_BUFFER = 1024 * 1024;\n\nconst permission = require('internal/process/permission');\n\nconst isZOS = process.platform === 'os390';\nlet addAbortListener;\n\n/**\n * Spawns a new Node.js process + fork.\n * @param {string|URL} modulePath\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   detached?: boolean;\n *   env?: Record<string\x2C string>;\n *   execPath?: string;\n *   execArgv?: string[];\n *   gid?: number;\n *   serialization?: string;\n *   signal?: AbortSignal;\n *   killSignal?: string | number;\n *   silent?: boolean;\n *   stdio?: Array | string;\n *   uid?: number;\n *   windowsVerbatimArguments?: boolean;\n *   timeout?: number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction fork(modulePath\x2C args = []\x2C options) {\n  modulePath = getValidatedPath(modulePath\x2C 'modulePath');\n\n  // Get options and args arguments.\n  let execArgv;\n\n  if (args == null) {\n    args = [];\n  } else if (typeof args === 'object' && !ArrayIsArray(args)) {\n    options = args;\n    args = [];\n  } else {\n    validateArray(args\x2C 'args');\n  }\n\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  options = { __proto__: null\x2C ...options\x2C shell: false };\n  options.execPath ||= process.execPath;\n  validateArgumentNullCheck(options.execPath\x2C 'options.execPath');\n\n  // Prepare arguments for fork:\n  execArgv = options.execArgv || process.execArgv;\n  validateArgumentsNullCheck(execArgv\x2C 'options.execArgv');\n\n  if (execArgv === process.execArgv && process._eval != null) {\n    const index = ArrayPrototypeLastIndexOf(execArgv\x2C process._eval);\n    if (index > 0) {\n      // Remove the -e switch to avoid fork bombing ourselves.\n      execArgv = ArrayPrototypeSlice(execArgv);\n      ArrayPrototypeSplice(execArgv\x2C index - 1\x2C 2);\n    }\n  }\n\n  args = [...execArgv\x2C modulePath\x2C ...args];\n\n  if (typeof options.stdio === 'string') {\n    options.stdio = stdioStringToArray(options.stdio\x2C 'ipc');\n  } else if (!ArrayIsArray(options.stdio)) {\n    // Use a separate fd=3 for the IPC channel. Inherit stdin\x2C stdout\x2C\n    // and stderr from the parent if silent isn't set.\n    options.stdio = stdioStringToArray(\n      options.silent ? 'pipe' : 'inherit'\x2C\n      'ipc');\n  } else if (!ArrayPrototypeIncludes(options.stdio\x2C 'ipc')) {\n    throw new ERR_CHILD_PROCESS_IPC_REQUIRED('options.stdio');\n  }\n\n  return spawn(options.execPath\x2C args\x2C options);\n}\n\nfunction _forkChild(fd\x2C serializationMode) {\n  // set process.send()\n  const p = new Pipe(PipeConstants.IPC);\n  p.open(fd);\n  p.unref();\n  const control = setupChannel(process\x2C p\x2C serializationMode);\n  process.on('newListener'\x2C function onNewListener(name) {\n    if (name === 'message' || name === 'disconnect') control.refCounted();\n  });\n  process.on('removeListener'\x2C function onRemoveListener(name) {\n    if (name === 'message' || name === 'disconnect') control.unrefCounted();\n  });\n}\n\nfunction normalizeExecArgs(command\x2C options\x2C callback) {\n  validateString(command\x2C 'command');\n  validateArgumentNullCheck(command\x2C 'command');\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  // Make a shallow copy so we don't clobber the user's options object.\n  options = { __proto__: null\x2C ...options };\n  options.shell = typeof options.shell === 'string' ? options.shell : true;\n\n  return {\n    file: command\x2C\n    options: options\x2C\n    callback: callback\x2C\n  };\n}\n\n/**\n * Spawns a shell executing the given command.\n * @param {string} command\n * @param {{\n *   cmd?: string;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   shell?: string;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction exec(command\x2C options\x2C callback) {\n  const opts = normalizeExecArgs(command\x2C options\x2C callback);\n  return module.exports.execFile(opts.file\x2C\n                                 opts.options\x2C\n                                 opts.callback);\n}\n\nconst customPromiseExecFunction = (orig) => {\n  return assignFunctionName(orig.name\x2C function(...args) {\n    const { promise\x2C resolve\x2C reject } = PromiseWithResolvers();\n\n    promise.child = orig(...args\x2C (err\x2C stdout\x2C stderr) => {\n      if (err !== null) {\n        err.stdout = stdout;\n        err.stderr = stderr;\n        reject(err);\n      } else {\n        resolve({ stdout\x2C stderr });\n      }\n    });\n\n    return promise;\n  });\n};\n\nObjectDefineProperty(exec\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(exec)\x2C\n});\n\nfunction normalizeExecFileArgs(file\x2C args\x2C options\x2C callback) {\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args != null && typeof args === 'object') {\n    callback = options;\n    options = args;\n    args = null;\n  } else if (typeof args === 'function') {\n    callback = args;\n    options = null;\n    args = null;\n  }\n\n  args ??= [];\n\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n\n  options ??= kEmptyObject;\n\n  if (callback != null) {\n    validateFunction(callback\x2C 'callback');\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  return { file\x2C args\x2C options\x2C callback };\n}\n\n/**\n * Spawns the specified file as a shell.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   encoding?: string;\n *   timeout?: number;\n *   maxBuffer?: number;\n *   killSignal?: string | number;\n *   uid?: number;\n *   gid?: number;\n *   windowsHide?: boolean;\n *   windowsVerbatimArguments?: boolean;\n *   shell?: boolean | string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   error?: Error\x2C\n *   stdout?: string | Buffer\x2C\n *   stderr?: string | Buffer\n *   ) => any} [callback]\n * @returns {ChildProcess}\n */\nfunction execFile(file\x2C args\x2C options\x2C callback) {\n  ({ file\x2C args\x2C options\x2C callback } = normalizeExecFileArgs(file\x2C args\x2C options\x2C callback));\n\n  options = {\n    __proto__: null\x2C\n    encoding: 'utf8'\x2C\n    timeout: 0\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    killSignal: 'SIGTERM'\x2C\n    cwd: null\x2C\n    env: null\x2C\n    shell: false\x2C\n    ...options\x2C\n  };\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  const child = spawn(file\x2C args\x2C {\n    cwd: options.cwd\x2C\n    env: options.env\x2C\n    gid: options.gid\x2C\n    shell: options.shell\x2C\n    signal: options.signal\x2C\n    uid: options.uid\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!options.windowsVerbatimArguments\x2C\n  });\n\n  let encoding;\n  const _stdout = [];\n  const _stderr = [];\n  if (options.encoding !== 'buffer' && Buffer.isEncoding(options.encoding)) {\n    encoding = options.encoding;\n  } else {\n    encoding = null;\n  }\n  let stdoutLen = 0;\n  let stderrLen = 0;\n  let killed = false;\n  let exited = false;\n  let timeoutId;\n\n  let ex = null;\n\n  let cmd = file;\n\n  function exithandler(code\x2C signal) {\n    if (exited) return;\n    exited = true;\n\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n\n    if (!callback) return;\n\n    // merge chunks\n    let stdout;\n    let stderr;\n    if (encoding ||\n      (\n        child.stdout?.readableEncoding\n      )) {\n      stdout = ArrayPrototypeJoin(_stdout\x2C '');\n    } else {\n      stdout = Buffer.concat(_stdout);\n    }\n    if (encoding ||\n      (\n        child.stderr?.readableEncoding\n      )) {\n      stderr = ArrayPrototypeJoin(_stderr\x2C '');\n    } else {\n      stderr = Buffer.concat(_stderr);\n    }\n\n    if (!ex && code === 0 && signal === null) {\n      callback(null\x2C stdout\x2C stderr);\n      return;\n    }\n\n    if (args?.length)\n      cmd += ` ${ArrayPrototypeJoin(args\x2C ' ')}`;\n\n    ex ||= genericNodeError(`Command failed: ${cmd}\\n${stderr}`\x2C {\n      code: code < 0 ? getSystemErrorName(code) : code\x2C\n      killed: child.killed || killed\x2C\n      signal: signal\x2C\n    });\n\n    ex.cmd = cmd;\n    callback(ex\x2C stdout\x2C stderr);\n  }\n\n  function errorhandler(e) {\n    ex = e;\n\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    exithandler();\n  }\n\n  function kill() {\n    if (child.stdout)\n      child.stdout.destroy();\n\n    if (child.stderr)\n      child.stderr.destroy();\n\n    killed = true;\n    try {\n      child.kill(options.killSignal);\n    } catch (e) {\n      ex = e;\n      exithandler();\n    }\n  }\n\n  if (options.timeout > 0) {\n    timeoutId = setTimeout(function delayedKill() {\n      kill();\n      timeoutId = null;\n    }\x2C options.timeout);\n  }\n\n  if (child.stdout) {\n    if (encoding)\n      child.stdout.setEncoding(encoding);\n\n    child.stdout.on('data'\x2C function onChildStdout(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stdout\x2C chunk);\n        return;\n      }\n      const encoding = child.stdout.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      const slice = encoding ? StringPrototypeSlice :\n        (buf\x2C ...args) => buf.slice(...args);\n      stdoutLen += length;\n\n      if (stdoutLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stdoutLen - length);\n        ArrayPrototypePush(_stdout\x2C slice(chunk\x2C 0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stdout');\n        kill();\n      } else {\n        ArrayPrototypePush(_stdout\x2C chunk);\n      }\n    });\n  }\n\n  if (child.stderr) {\n    if (encoding)\n      child.stderr.setEncoding(encoding);\n\n    child.stderr.on('data'\x2C function onChildStderr(chunk) {\n      // Do not need to count the length\n      if (options.maxBuffer === Infinity) {\n        ArrayPrototypePush(_stderr\x2C chunk);\n        return;\n      }\n      const encoding = child.stderr.readableEncoding;\n      const length = encoding ?\n        Buffer.byteLength(chunk\x2C encoding) :\n        chunk.length;\n      stderrLen += length;\n\n      if (stderrLen > options.maxBuffer) {\n        const truncatedLen = options.maxBuffer - (stderrLen - length);\n        ArrayPrototypePush(_stderr\x2C\n                           chunk.slice(0\x2C truncatedLen));\n\n        ex = new ERR_CHILD_PROCESS_STDIO_MAXBUFFER('stderr');\n        kill();\n      } else {\n        ArrayPrototypePush(_stderr\x2C chunk);\n      }\n    });\n  }\n\n  child.addListener('close'\x2C exithandler);\n  child.addListener('error'\x2C errorhandler);\n\n  return child;\n}\n\nObjectDefineProperty(execFile\x2C promisify.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  value: customPromiseExecFunction(execFile)\x2C\n});\n\nfunction copyProcessEnvToEnv(env\x2C name\x2C optionEnv) {\n  if (process.env[name] &&\n      (!optionEnv ||\n       !ObjectPrototypeHasOwnProperty(optionEnv\x2C name))) {\n    env[name] = process.env[name];\n  }\n}\n\nlet permissionModelFlagsToCopy;\n\nfunction getPermissionModelFlagsToCopy() {\n  if (permissionModelFlagsToCopy === undefined) {\n    permissionModelFlagsToCopy = [...permission.availableFlags()\x2C '--permission'];\n  }\n  return permissionModelFlagsToCopy;\n}\n\nfunction copyPermissionModelFlagsToEnv(env\x2C key\x2C args) {\n  // Do not override if permission was already passed to file\n  if (args.includes('--permission') || (env[key] && env[key].indexOf('--permission') !== -1)) {\n    return;\n  }\n\n  const flagsToCopy = getPermissionModelFlagsToCopy();\n  for (const arg of process.execArgv) {\n    for (const flag of flagsToCopy) {\n      if (arg.startsWith(flag)) {\n        env[key] = `${env[key] ? env[key] + ' ' + arg : arg}`;\n      }\n    }\n  }\n}\n\nlet emittedDEP0190Already = false;\nfunction normalizeSpawnArguments(file\x2C args\x2C options) {\n  validateString(file\x2C 'file');\n  validateArgumentNullCheck(file\x2C 'file');\n\n  if (file.length === 0)\n    throw new ERR_INVALID_ARG_VALUE('file'\x2C file\x2C 'cannot be empty');\n\n  if (ArrayIsArray(args)) {\n    args = ArrayPrototypeSlice(args);\n  } else if (args == null) {\n    args = [];\n  } else if (typeof args !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('args'\x2C 'object'\x2C args);\n  } else {\n    options = args;\n    args = [];\n  }\n\n  validateArgumentsNullCheck(args\x2C 'args');\n\n  if (options === undefined)\n    options = kEmptyObject;\n  else\n    validateObject(options\x2C 'options');\n\n  options = { __proto__: null\x2C ...options };\n  let cwd = options.cwd;\n\n  // Validate the cwd\x2C if present.\n  if (cwd != null) {\n    cwd = getValidatedPath(cwd\x2C 'options.cwd');\n  }\n\n  // Validate detached\x2C if present.\n  if (options.detached != null) {\n    validateBoolean(options.detached\x2C 'options.detached');\n  }\n\n  // Validate the uid\x2C if present.\n  if (options.uid != null && !isInt32(options.uid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.uid'\x2C 'int32'\x2C options.uid);\n  }\n\n  // Validate the gid\x2C if present.\n  if (options.gid != null && !isInt32(options.gid)) {\n    throw new ERR_INVALID_ARG_TYPE('options.gid'\x2C 'int32'\x2C options.gid);\n  }\n\n  // Validate the shell\x2C if present.\n  if (options.shell != null &&\n      typeof options.shell !== 'boolean' &&\n      typeof options.shell !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE('options.shell'\x2C\n                                   ['boolean'\x2C 'string']\x2C options.shell);\n  }\n\n  // Validate argv0\x2C if present.\n  if (options.argv0 != null) {\n    validateString(options.argv0\x2C 'options.argv0');\n    validateArgumentNullCheck(options.argv0\x2C 'options.argv0');\n  }\n\n  // Validate windowsHide\x2C if present.\n  if (options.windowsHide != null) {\n    validateBoolean(options.windowsHide\x2C 'options.windowsHide');\n  }\n\n  // Validate windowsVerbatimArguments\x2C if present.\n  let { windowsVerbatimArguments } = options;\n  if (windowsVerbatimArguments != null) {\n    validateBoolean(windowsVerbatimArguments\x2C\n                    'options.windowsVerbatimArguments');\n  }\n\n  if (options.shell) {\n    validateArgumentNullCheck(options.shell\x2C 'options.shell');\n    if (args.length > 0 && !emittedDEP0190Already) {\n      process.emitWarning(\n        'Passing args to a child process with shell option true can lead to security ' +\n        'vulnerabilities\x2C as the arguments are not escaped\x2C only concatenated.'\x2C\n        'DeprecationWarning'\x2C\n        'DEP0190');\n      emittedDEP0190Already = true;\n    }\n    const command = ArrayPrototypeJoin([file\x2C ...args]\x2C ' ');\n    // Set the shell\x2C switches\x2C and commands.\n    if (process.platform === 'win32') {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else\n        file = process.env.comspec || 'cmd.exe';\n      // '/d /s /c' is used only for cmd.exe.\n      if (RegExpPrototypeExec(/^(?:.*\\\\)?cmd(?:\\.exe)?$/i\x2C file) !== null) {\n        args = ['/d'\x2C '/s'\x2C '/c'\x2C `"${command}"`];\n        windowsVerbatimArguments = true;\n      } else {\n        args = ['-c'\x2C command];\n      }\n    } else {\n      if (typeof options.shell === 'string')\n        file = options.shell;\n      else if (process.platform === 'android')\n        file = '/system/bin/sh';\n      else\n        file = '/bin/sh';\n      args = ['-c'\x2C command];\n    }\n  }\n\n  if (typeof options.argv0 === 'string') {\n    ArrayPrototypeUnshift(args\x2C options.argv0);\n  } else {\n    ArrayPrototypeUnshift(args\x2C file);\n  }\n\n  // Shallow copy to guarantee changes won't impact process.env\n  const env = options.env || { ...process.env };\n  const envPairs = [];\n\n  // process.env.NODE_V8_COVERAGE always propagates\x2C making it possible to\n  // collect coverage for programs that spawn with white-listed environment.\n  copyProcessEnvToEnv(env\x2C 'NODE_V8_COVERAGE'\x2C options.env);\n\n  if (isZOS) {\n    // The following environment variables must always propagate if set.\n    copyProcessEnvToEnv(env\x2C '_BPXK_AUTOCVT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_CEE_RUNOPTS'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_ERR'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_IN'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_TAG_REDIR_OUT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'STEPLIB'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C 'LIBPATH'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SIG_DFLT'\x2C options.env);\n    copyProcessEnvToEnv(env\x2C '_EDC_SUSV3'\x2C options.env);\n  }\n\n  if (permission.isEnabled()) {\n    copyPermissionModelFlagsToEnv(env\x2C 'NODE_OPTIONS'\x2C args);\n  }\n\n  let envKeys = [];\n  // Prototype values are intentionally included.\n  for (const key in env) {\n    ArrayPrototypePush(envKeys\x2C key);\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows env keys are case insensitive. Filter out duplicates\x2C\n    // keeping only the first one (in lexicographic order)\n    const sawKey = new SafeSet();\n    envKeys = ArrayPrototypeFilter(\n      ArrayPrototypeSort(envKeys)\x2C\n      (key) => {\n        const uppercaseKey = StringPrototypeToUpperCase(key);\n        if (sawKey.has(uppercaseKey)) {\n          return false;\n        }\n        sawKey.add(uppercaseKey);\n        return true;\n      }\x2C\n    );\n  }\n\n  for (const key of envKeys) {\n    const value = env[key];\n    if (value !== undefined) {\n      validateArgumentNullCheck(key\x2C `options.env['${key}']`);\n      validateArgumentNullCheck(value\x2C `options.env['${key}']`);\n      ArrayPrototypePush(envPairs\x2C `${key}=${value}`);\n    }\n  }\n\n  return {\n    // Make a shallow copy so we don't clobber the user's options object.\n    __proto__: null\x2C\n    ...options\x2C\n    args\x2C\n    cwd\x2C\n    detached: !!options.detached\x2C\n    envPairs\x2C\n    file\x2C\n    windowsHide: !!options.windowsHide\x2C\n    windowsVerbatimArguments: !!windowsVerbatimArguments\x2C\n  };\n}\n\nfunction abortChildProcess(child\x2C killSignal\x2C reason) {\n  if (!child)\n    return;\n  try {\n    if (child.kill(killSignal)) {\n      child.emit('error'\x2C new AbortError(undefined\x2C { cause: reason }));\n    }\n  } catch (err) {\n    child.emit('error'\x2C err);\n  }\n}\n\n/**\n * Spawns a new process using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   env?: Record<string\x2C string>;\n *   argv0?: string;\n *   stdio?: Array | string;\n *   detached?: boolean;\n *   uid?: number;\n *   gid?: number;\n *   serialization?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   signal?: AbortSignal;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   }} [options]\n * @returns {ChildProcess}\n */\nfunction spawn(file\x2C args\x2C options) {\n  options = normalizeSpawnArguments(file\x2C args\x2C options);\n  validateTimeout(options.timeout);\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const killSignal = sanitizeKillSignal(options.killSignal);\n  const child = new ChildProcess();\n\n  debug('spawn'\x2C options);\n  child.spawn(options);\n\n  if (options.timeout > 0) {\n    let timeoutId = setTimeout(() => {\n      if (timeoutId) {\n        try {\n          child.kill(killSignal);\n        } catch (err) {\n          child.emit('error'\x2C err);\n        }\n        timeoutId = null;\n      }\n    }\x2C options.timeout);\n\n    child.once('exit'\x2C () => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n        timeoutId = null;\n      }\n    });\n  }\n\n  if (options.signal) {\n    const signal = options.signal;\n    if (signal.aborted) {\n      process.nextTick(onAbortListener);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(signal\x2C onAbortListener);\n      child.once('exit'\x2C disposable[SymbolDispose]);\n    }\n\n    function onAbortListener() {\n      abortChildProcess(child\x2C killSignal\x2C options.signal.reason);\n    }\n  }\n\n  return child;\n}\n\n/**\n * Spawns a new process synchronously using the given `file`.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   argv0?: string;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   shell?: boolean | string;\n *   windowsVerbatimArguments?: boolean;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {{\n *   pid: number;\n *   output: Array;\n *   stdout: Buffer | string;\n *   stderr: Buffer | string;\n *   status: number | null;\n *   signal: string | null;\n *   error: Error;\n *   }}\n */\nfunction spawnSync(file\x2C args\x2C options) {\n  options = {\n    __proto__: null\x2C\n    maxBuffer: MAX_BUFFER\x2C\n    ...normalizeSpawnArguments(file\x2C args\x2C options)\x2C\n  };\n\n  debug('spawnSync'\x2C options);\n\n  // Validate the timeout\x2C if present.\n  validateTimeout(options.timeout);\n\n  // Validate maxBuffer\x2C if present.\n  validateMaxBuffer(options.maxBuffer);\n\n  // Validate and translate the kill signal\x2C if present.\n  options.killSignal = sanitizeKillSignal(options.killSignal);\n\n  options.stdio = getValidStdio(options.stdio || 'pipe'\x2C true).stdio;\n\n  if (options.input) {\n    const stdin = options.stdio[0] = { ...options.stdio[0] };\n    stdin.input = options.input;\n  }\n\n  // We may want to pass data in on any given fd\x2C ensure it is a valid buffer\n  for (let i = 0; i < options.stdio.length; i++) {\n    const input = options.stdio[i]?.input;\n    if (input != null) {\n      const pipe = options.stdio[i] = { ...options.stdio[i] };\n      if (isArrayBufferView(input)) {\n        pipe.input = input;\n      } else if (typeof input === 'string') {\n        pipe.input = Buffer.from(input\x2C options.encoding);\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(`options.stdio[${i}]`\x2C\n                                       ['Buffer'\x2C\n                                        'TypedArray'\x2C\n                                        'DataView'\x2C\n                                        'string']\x2C\n                                       input);\n      }\n    }\n  }\n\n  return child_process.spawnSync(options);\n}\n\n\nfunction checkExecSyncError(ret\x2C args\x2C cmd) {\n  let err;\n  if (ret.error) {\n    err = ret.error;\n    ObjectAssign(err\x2C ret);\n  } else if (ret.status !== 0) {\n    let msg = 'Command failed: ';\n    msg += cmd || ArrayPrototypeJoin(args\x2C ' ');\n    if (ret.stderr && ret.stderr.length > 0)\n      msg += `\\n${ret.stderr.toString()}`;\n    err = genericNodeError(msg\x2C ret);\n  }\n  return err;\n}\n\n/**\n * Spawns a file as a shell synchronously.\n * @param {string} file\n * @param {string[]} [args]\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   shell?: boolean | string;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execFileSync(file\x2C args\x2C options) {\n  ({ file\x2C args\x2C options } = normalizeExecFileArgs(file\x2C args\x2C options));\n\n  const inheritStderr = !options.stdio;\n  const ret = spawnSync(file\x2C args\x2C options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const errArgs = [options.argv0 || file];\n  ArrayPrototypePushApply(errArgs\x2C args);\n  const err = checkExecSyncError(ret\x2C errArgs);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n/**\n * Spawns a shell executing the given `command` synchronously.\n * @param {string} command\n * @param {{\n *   cwd?: string | URL;\n *   input?: string | Buffer | TypedArray | DataView;\n *   stdio?: string | Array;\n *   env?: Record<string\x2C string>;\n *   shell?: string;\n *   uid?: number;\n *   gid?: number;\n *   timeout?: number;\n *   killSignal?: string | number;\n *   maxBuffer?: number;\n *   encoding?: string;\n *   windowsHide?: boolean;\n *   }} [options]\n * @returns {Buffer | string}\n */\nfunction execSync(command\x2C options) {\n  const opts = normalizeExecArgs(command\x2C options\x2C null);\n  const inheritStderr = !opts.options.stdio;\n\n  const ret = spawnSync(opts.file\x2C opts.options);\n\n  if (inheritStderr && ret.stderr)\n    process.stderr.write(ret.stderr);\n\n  const err = checkExecSyncError(ret\x2C undefined\x2C command);\n\n  if (err)\n    throw err;\n\n  return ret.stdout;\n}\n\n\nfunction validateArgumentNullCheck(arg\x2C propName) {\n  if (typeof arg === 'string' && StringPrototypeIncludes(arg\x2C '\\u0000')) {\n    throw new ERR_INVALID_ARG_VALUE(propName\x2C arg\x2C 'must be a string without null bytes');\n  }\n}\n\n\nfunction validateArgumentsNullCheck(args\x2C propName) {\n  for (let i = 0; i < args.length; ++i) {\n    validateArgumentNullCheck(args[i]\x2C `${propName}[${i}]`);\n  }\n}\n\n\nfunction validateTimeout(timeout) {\n  if (timeout != null && !(NumberIsInteger(timeout) && timeout >= 0)) {\n    throw new ERR_OUT_OF_RANGE('timeout'\x2C 'an unsigned integer'\x2C timeout);\n  }\n}\n\n\nfunction validateMaxBuffer(maxBuffer) {\n  if (maxBuffer != null && !(typeof maxBuffer === 'number' && maxBuffer >= 0)) {\n    throw new ERR_OUT_OF_RANGE('options.maxBuffer'\x2C\n                               'a positive number'\x2C\n                               maxBuffer);\n  }\n}\n\n\nfunction sanitizeKillSignal(killSignal) {\n  if (typeof killSignal === 'string' || typeof killSignal === 'number') {\n    return convertToValidSignal(killSignal);\n  } else if (killSignal != null) {\n    throw new ERR_INVALID_ARG_TYPE('options.killSignal'\x2C\n                                   ['string'\x2C 'number']\x2C\n                                   killSignal);\n  }\n}\n\nmodule.exports = {\n  _forkChild\x2C\n  ChildProcess\x2C\n  exec\x2C\n  execFile\x2C\n  execFileSync\x2C\n  execSync\x2C\n  fork\x2C\n  spawn\x2C\n  spawnSync\x2C\n};\n
code-source-info,0x277c96e82068,79,0,28480,C0O0C4O28480,,
code-creation,JS,9,22833,0x277c96e82668,929, node:child_process:1:1,0x7143c1c868,~
code-source-info,0x277c96e
tick,0x1010153c4,22833,0,0x0,9,0x148000544,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,23166,0x277c96e82b88,5, node:internal/child_process:1:1,0x7143c22528,~
script-source,80,node:internal/child_process,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  FunctionPrototype\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  StringPrototypeSlice\x2C\n  Symbol\x2C\n  SymbolDispose\x2C\n  Uint8Array\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_SYNC_FORK_INPUT\x2C\n    ERR_IPC_CHANNEL_CLOSED\x2C\n    ERR_IPC_DISCONNECTED\x2C\n    ERR_IPC_ONE_PIPE\x2C\n    ERR_IPC_SYNC_FORK\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateArray\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst EventEmitter = require('events');\nconst net = require('net');\nconst dgram = require('dgram');\nconst inspect = require('internal/util/inspect').inspect;\nconst assert = require('internal/assert');\n\nconst { Process } = internalBinding('process_wrap');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { Pipe\x2C constants: PipeConstants } = internalBinding('pipe_wrap');\nconst { TCP } = internalBinding('tcp_wrap');\nconst { TTY } = internalBinding('tty_wrap');\nconst { UDP } = internalBinding('udp_wrap');\nconst SocketList = require('internal/socket_list');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst { convertToValidSignal\x2C deprecate } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst spawn_sync = internalBinding('spawn_sync');\nconst { kStateSymbol } = require('internal/dgram');\nconst dc = require('diagnostics_channel');\nconst childProcessChannel = dc.channel('child_process');\n\nconst {\n  UV_EACCES\x2C\n  UV_EAGAIN\x2C\n  UV_EINVAL\x2C\n  UV_EMFILE\x2C\n  UV_ENFILE\x2C\n  UV_ENOENT\x2C\n  UV_ENOSYS\x2C\n  UV_ESRCH\x2C\n} = internalBinding('uv');\n\nconst { SocketListSend\x2C SocketListReceive } = SocketList;\n\n// Lazy loaded for startup performance and to allow monkey patching of\n// internalBinding('http_parser').HTTPParser.\nlet freeParser;\nlet HTTPParser;\n\nconst MAX_HANDLE_RETRANSMISSIONS = 3;\nconst kChannelHandle = Symbol('kChannelHandle');\nconst kIsUsedAsStdio = Symbol('kIsUsedAsStdio');\nconst kPendingMessages = Symbol('kPendingMessages');\n\n// This object contain function to convert TCP objects to native handle objects\n// and back again.\nconst handleConversion = {\n  'net.Native': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'net.Server': {\n    simultaneousAccepts: true\x2C\n\n    send(message\x2C server\x2C options) {\n      return server._handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const server = new net.Server();\n      server.listen(handle\x2C () => {\n        emit(server);\n      });\n    }\x2C\n  }\x2C\n\n  'net.Socket': {\n    send(message\x2C socket\x2C options) {\n      if (!socket._handle)\n        return;\n\n      // If the socket was created by net.Server\n      if (socket.server) {\n        // The worker should keep track of the socket\n        message.key = socket.server._connectionKey;\n\n        const firstTime = !this[kChannelHandle].sockets.send[message.key];\n        const socketList = getSocketList('send'\x2C this\x2C message.key);\n\n        // The server should no longer expose a .connection property\n        // and when asked to close it should query the socket status from\n        // the workers\n        if (firstTime) socket.server._setupWorker(socketList);\n\n        // Act like socket is detached\n        if (!options.keepOpen)\n          socket.server._connections--;\n      }\n\n      const handle = socket._handle;\n\n      // Remove handle from socket object\x2C it will be closed when the socket\n      // will be sent\n      if (!options.keepOpen) {\n        handle.onread = nop;\n        socket._handle = null;\n        socket.setTimeout(0);\n\n        if (freeParser === undefined)\n          freeParser = require('_http_common').freeParser;\n        if (HTTPParser === undefined)\n          HTTPParser = require('_http_common').HTTPParser;\n\n        // In case of an HTTP connection socket\x2C release the associated\n        // resources\n        if (socket.parser && socket.parser instanceof HTTPParser) {\n          freeParser(socket.parser\x2C null\x2C socket);\n          if (socket._httpMessage)\n            socket._httpMessage.detachSocket(socket);\n        }\n      }\n\n      return handle;\n    }\x2C\n\n    postSend(message\x2C handle\x2C options\x2C callback\x2C target) {\n      // Store the handle after successfully sending it\x2C so it can be closed\n      // when the NODE_HANDLE_ACK is received. If the handle could not be sent\x2C\n      // just close it.\n      if (handle && !options.keepOpen) {\n        if (target) {\n          // There can only be one _pendingMessage as passing handles are\n          // processed one at a time: handles are stored in _handleQueue while\n          // waiting for the NODE_HANDLE_ACK of the current passing handle.\n          assert(!target._pendingMessage);\n          target._pendingMessage =\n              { callback\x2C message\x2C handle\x2C options\x2C retransmissions: 0 };\n        } else {\n          handle.close();\n        }\n      }\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new net.Socket({\n        handle: handle\x2C\n        readable: true\x2C\n        writable: true\x2C\n      });\n\n      // If the socket was created by net.Server we will track the socket\n      if (message.key) {\n\n        // Add socket to connections list\n        const socketList = getSocketList('got'\x2C this\x2C message.key);\n        socketList.add({\n          socket: socket\x2C\n        });\n      }\n\n      emit(socket);\n    }\x2C\n  }\x2C\n\n  'dgram.Native': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C handle\x2C options) {\n      return handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      emit(handle);\n    }\x2C\n  }\x2C\n\n  'dgram.Socket': {\n    simultaneousAccepts: false\x2C\n\n    send(message\x2C socket\x2C options) {\n      message.dgramType = socket.type;\n\n      return socket[kStateSymbol].handle;\n    }\x2C\n\n    got(message\x2C handle\x2C emit) {\n      const socket = new dgram.Socket(message.dgramType);\n\n      socket.bind(handle\x2C () => {\n        emit(socket);\n      });\n    }\x2C\n  }\x2C\n};\n\nfunction stdioStringToArray(stdio\x2C channel) {\n  const options = [];\n\n  switch (stdio) {\n    case 'ignore':\n    case 'overlapped':\n    case 'pipe': ArrayPrototypePush(options\x2C stdio\x2C stdio\x2C stdio); break;\n    case 'inherit': ArrayPrototypePush(options\x2C 0\x2C 1\x2C 2); break;\n    default:\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  if (channel) ArrayPrototypePush(options\x2C channel);\n\n  return options;\n}\n\nfunction ChildProcess() {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n\n  this._closesNeeded = 1;\n  this._closesGot = 0;\n  this.connected = false;\n\n  this.signalCode = null;\n  this.exitCode = null;\n  this.killed = false;\n  this.spawnfile = null;\n\n  this._handle = new Process();\n  this._handle[owner_symbol] = this;\n\n  this._handle.onexit = (exitCode\x2C signalCode) => {\n    if (signalCode) {\n      this.signalCode = signalCode;\n    } else {\n      this.exitCode = exitCode;\n    }\n\n    if (this.stdin) {\n      this.stdin.destroy();\n    }\n\n    this._handle.close();\n    this._handle = null;\n\n    if (exitCode < 0) {\n      const syscall = this.spawnfile ? 'spawn ' + this.spawnfile : 'spawn';\n      const err = new ErrnoException(exitCode\x2C syscall);\n\n      if (this.spawnfile)\n        err.path = this.spawnfile;\n\n      err.spawnargs = ArrayPrototypeSlice(this.spawnargs\x2C 1);\n      this.emit('error'\x2C err);\n    } else {\n      this.emit('exit'\x2C this.exitCode\x2C this.signalCode);\n    }\n\n    // If any of the stdio streams have not been touched\x2C\n    // then pull all the data through so that it can get the\n    // eof and emit a 'close' event.\n    // Do it on nextTick so that the user has one last chance\n    // to consume the output\x2C if for example they only want to\n    // start reading the data once the process exits.\n    process.nextTick(flushStdio\x2C this);\n\n    maybeClose(this);\n  };\n  if (childProcessChannel.hasSubscribers) {\n    childProcessChannel.publish({\n      process: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(ChildProcess.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(ChildProcess\x2C EventEmitter);\n\n\nfunction flushStdio(subprocess) {\n  const stdio = subprocess.stdio;\n\n  if (stdio == null) return;\n\n  for (let i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    // TODO(addaleax): This doesn't necessarily account for all the ways in\n    // which data can be read from a stream\x2C e.g. being consumed on the\n    // native layer directly as a StreamBase.\n    if (!stream || !stream.readable || stream[kIsUsedAsStdio]) {\n      continue;\n    }\n    stream.resume();\n  }\n}\n\n\nfunction createSocket(pipe\x2C readable) {\n  return net.Socket({ handle: pipe\x2C readable });\n}\n\n\nfunction getHandleWrapType(stream) {\n  if (stream instanceof Pipe) return 'pipe';\n  if (stream instanceof TTY) return 'tty';\n  if (stream instanceof TCP) return 'tcp';\n  if (stream instanceof UDP) return 'udp';\n\n  return false;\n}\n\nfunction closePendingHandle(target) {\n  target._pendingMessage.handle.close();\n  target._pendingMessage = null;\n}\n\n\nChildProcess.prototype.spawn = function spawn(options) {\n  let i = 0;\n\n  validateObject(options\x2C 'options');\n\n  // If no `stdio` option was given - use default\n  let stdio = options.stdio || 'pipe';\n\n  stdio = getValidStdio(stdio\x2C false);\n\n  const ipc = stdio.ipc;\n  const ipcFd = stdio.ipcFd;\n  stdio = options.stdio = stdio.stdio;\n\n\n  validateOneOf(options.serialization\x2C 'options.serialization'\x2C\n                [undefined\x2C 'json'\x2C 'advanced']);\n  const serialization = options.serialization || 'json';\n\n  if (ipc !== undefined) {\n    // Let child process know about opened IPC channel\n    if (options.envPairs === undefined)\n      options.envPairs = [];\n    else\n      validateArray(options.envPairs\x2C 'options.envPairs');\n\n    ArrayPrototypePush(options.envPairs\x2C `NODE_CHANNEL_FD=${ipcFd}`);\n    ArrayPrototypePush(options.envPairs\x2C\n                       `NODE_CHANNEL_SERIALIZATION_MODE=${serialization}`);\n  }\n\n  validateString(options.file\x2C 'options.file');\n  this.spawnfile = options.file;\n\n  if (options.args === undefined) {\n    this.spawnargs = [];\n  } else {\n    validateArray(options.args\x2C 'options.args');\n    this.spawnargs = options.args;\n  }\n\n  const err = this._handle.spawn(options);\n\n  // Run-time errors should emit an error\x2C not throw an exception.\n  if (err === UV_EACCES ||\n      err === UV_EAGAIN ||\n      err === UV_EMFILE ||\n      err === UV_ENFILE ||\n      err === UV_ENOENT) {\n    process.nextTick(onErrorNT\x2C this\x2C err);\n\n    // There is no point in continuing when we've hit EMFILE or ENFILE\n    // because we won't be able to set up the stdio file descriptors.\n    if (err === UV_EMFILE || err === UV_ENFILE)\n      return err;\n  } else if (err) {\n    // Close all opened fds on error\n    for (i = 0; i < stdio.length; i++) {\n      const stream = stdio[i];\n      if (stream.type === 'pipe') {\n        stream.handle.close();\n      }\n    }\n\n    this._handle.close();\n    this._handle = null;\n    throw new ErrnoException(err\x2C 'spawn');\n  } else {\n    process.nextTick(onSpawnNT\x2C this);\n  }\n\n  this.pid = this._handle.pid;\n\n  for (i = 0; i < stdio.length; i++) {\n    const stream = stdio[i];\n    if (stream.type === 'ignore') continue;\n\n    if (stream.ipc) {\n      this._closesNeeded++;\n      continue;\n    }\n\n    // The stream is already cloned and piped\x2C thus stop its readable side\x2C\n    // otherwise we might attempt to read from the stream when at the same time\n    // the child process does.\n    if (stream.type === 'wrap') {\n      stream.handle.reading = false;\n      stream.handle.readStop();\n      stream._stdio.pause();\n      stream._stdio.readableFlowing = false;\n      stream._stdio._readableState.reading = false;\n      stream._stdio[kIsUsedAsStdio] = true;\n      continue;\n    }\n\n    if (stream.handle) {\n      stream.socket = createSocket(this.pid !== 0 ?\n        stream.handle : null\x2C i > 0);\n\n      if (i > 0 && this.pid !== 0) {\n        this._closesNeeded++;\n        stream.socket.on('close'\x2C () => {\n          maybeClose(this);\n        });\n      }\n    }\n  }\n\n  this.stdin = stdio.length >= 1 && stdio[0].socket !== undefined ?\n    stdio[0].socket : null;\n  this.stdout = stdio.length >= 2 && stdio[1].socket !== undefined ?\n    stdio[1].socket : null;\n  this.stderr = stdio.length >= 3 && stdio[2].socket !== undefined ?\n    stdio[2].socket : null;\n\n  this.stdio = [];\n\n  for (i = 0; i < stdio.length; i++)\n    ArrayPrototypePush(this.stdio\x2C\n                       stdio[i].socket === undefined ? null : stdio[i].socket);\n\n  // Add .send() method and start listening for IPC data\n  if (ipc !== undefined) setupChannel(this\x2C ipc\x2C serialization);\n\n  return err;\n};\n\n\nfunction onErrorNT(self\x2C err) {\n  self._handle.onexit(err);\n}\n\n\nfunction onSpawnNT(self) {\n  self.emit('spawn');\n}\n\n\nChildProcess.prototype.kill = function kill(sig) {\n\n  const signal = sig === 0 ? sig :\n    convertToValidSignal(sig === undefined ? 'SIGTERM' : sig);\n\n  if (this._handle) {\n    const err = this._handle.kill(signal);\n    if (err === 0) {\n      /* Success. */\n      this.killed = true;\n      return true;\n    }\n    if (err === UV_ESRCH) {\n      /* Already dead. */\n    } else if (err === UV_EINVAL || err === UV_ENOSYS) {\n      /* The underlying platform doesn't support this signal. */\n      throw new ErrnoException(err\x2C 'kill');\n    } else {\n      /* Other error\x2C almost certainly EPERM. */\n      this.emit('error'\x2C new ErrnoException(err\x2C 'kill'));\n    }\n  }\n\n  /* Kill didn't succeed. */\n  return false;\n};\n\nChildProcess.prototype[SymbolDispose] = function() {\n  if (!this.killed) {\n    this.kill();\n  }\n};\n\n\nChildProcess.prototype.ref = function ref() {\n  if (this._handle) this._handle.ref();\n};\n\n\nChildProcess.prototype.unref = function unref() {\n  if (this._handle) this._handle.unref();\n};\n\nclass Control extends EventEmitter {\n  #channel = null;\n  #refs = 0;\n  #refExplicitlySet = false;\n\n  constructor(channel) {\n    super();\n    this.#channel = channel;\n    this[kPendingMessages] = [];\n  }\n\n  // The methods keeping track of the counter are being used to track the\n  // listener count on the child process object as well as when writes are\n  // in progress. Once the user has explicitly requested a certain state\x2C these\n  // methods become no-ops in order to not interfere with the user's intentions.\n  refCounted() {\n    if (++this.#refs === 1 && !this.#refExplicitlySet) {\n      this.#channel.ref();\n    }\n  }\n\n  unrefCounted() {\n    if (--this.#refs === 0 && !this.#refExplicitlySet) {\n      this.#channel.unref();\n    }\n  }\n\n  ref() {\n    this.#refExplicitlySet = true;\n    this.#channel.ref();\n  }\n\n  unref() {\n    this.#refExplicitlySet = true;\n    this.#channel.unref();\n  }\n\n  get fd() {\n    return this.#channel ? this.#channel.fd : undefined;\n  }\n}\n\nconst channelDeprecationMsg = '_channel is deprecated. ' +\n                              'Use ChildProcess.channel instead.';\n\nlet serialization;\nfunction setupChannel(target\x2C channel\x2C serializationMode) {\n  const control = new Control(channel);\n  target.channel = control;\n  target[kChannelHandle] = channel;\n\n  ObjectDefineProperty(target\x2C '_channel'\x2C {\n    __proto__: null\x2C\n    get: deprecate(() => {\n      return target.channel;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    set: deprecate((val) => {\n      target.channel = val;\n    }\x2C channelDeprecationMsg\x2C 'DEP0129')\x2C\n    configurable: true\x2C\n    enumerable: false\x2C\n  });\n\n  target._handleQueue = null;\n  target._pendingMessage = null;\n\n  if (serialization === undefined)\n    serialization = require('internal/child_process/serialization');\n  const {\n    initMessageChannel\x2C\n    parseChannelMessages\x2C\n    writeChannelMessage\x2C\n  } = serialization[serializationMode];\n\n  let pendingHandle = null;\n  initMessageChannel(channel);\n  channel.pendingHandle = null;\n  channel.onread = function(arrayBuffer) {\n    const recvHandle = channel.pendingHandle;\n    channel.pendingHandle = null;\n    if (arrayBuffer) {\n      const nread = streamBaseState[kReadBytesOrError];\n      const offset = streamBaseState[kArrayBufferOffset];\n      const pool = new Uint8Array(arrayBuffer\x2C offset\x2C nread);\n      if (recvHandle)\n        pendingHandle = recvHandle;\n\n      for (const message of parseChannelMessages(channel\x2C pool)) {\n        // There will be at most one NODE_HANDLE message in every chunk we\n        // read because SCM_RIGHTS messages don't get coalesced. Make sure\n        // that we deliver the handle with the right message however.\n        if (isInternal(message)) {\n          if (message.cmd === 'NODE_HANDLE') {\n            handleMessage(message\x2C pendingHandle\x2C true);\n            pendingHandle = null;\n          } else {\n            handleMessage(message\x2C undefined\x2C true);\n          }\n        } else {\n          handleMessage(message\x2C undefined\x2C false);\n        }\n      }\n    } else {\n      this.buffering = false;\n      target.disconnect();\n      channel.onread = nop;\n      channel.close();\n      target.channel = null;\n      maybeClose(target);\n    }\n  };\n\n  // Object where socket lists will live\n  channel.sockets = { got: {}\x2C send: {} };\n\n  // Handlers will go through this\n  target.on('internalMessage'\x2C function(message\x2C handle) {\n    // Once acknowledged - continue sending handles.\n    if (message.cmd === 'NODE_HANDLE_ACK' ||\n        message.cmd === 'NODE_HANDLE_NACK') {\n\n      if (target._pendingMessage) {\n        if (message.cmd === 'NODE_HANDLE_ACK') {\n          closePendingHandle(target);\n        } else if (target._pendingMessage.retransmissions++ ===\n                   MAX_HANDLE_RETRANSMISSIONS) {\n          closePendingHandle(target);\n          process.emitWarning('Handle did not reach the receiving process ' +\n                              'correctly'\x2C 'SentHandleNotReceivedWarning');\n        }\n      }\n\n      assert(ArrayIsArray(target._handleQueue));\n      const queue = target._handleQueue;\n      target._handleQueue = null;\n\n      if (target._pendingMessage) {\n        target._send(target._pendingMessage.message\x2C\n                     target._pendingMessage.handle\x2C\n                     target._pendingMessage.options\x2C\n                     target._pendingMessage.callback);\n      }\n\n      for (let i = 0; i < queue.length; i++) {\n        const args = queue[i];\n        target._send(args.message\x2C args.handle\x2C args.options\x2C args.callback);\n      }\n\n      // Process a pending disconnect (if any).\n      if (!target.connected && target.channel && !target._handleQueue)\n        target._disconnect();\n\n      return;\n    }\n\n    if (message.cmd !== 'NODE_HANDLE') return;\n\n    // It is possible that the handle is not received because of some error on\n    // ancillary data reception such as MSG_CTRUNC. In this case\x2C report the\n    // sender about it by sending a NODE_HANDLE_NACK message.\n    if (!handle)\n      return target._send({ cmd: 'NODE_HANDLE_NACK' }\x2C null\x2C true);\n\n    // Acknowledge handle receival. Don't emit error events (for example if\n    // the other side has disconnected) because this call to send() is not\n    // initiated by the user and it shouldn't be fatal to be unable to ACK\n    // a message.\n    target._send({ cmd: 'NODE_HANDLE_ACK' }\x2C null\x2C true);\n\n    const obj = handleConversion[message.type];\n\n    // Update simultaneous accepts on Windows\n    if (process.platform === 'win32') {\n      handle.setSimultaneousAccepts(false);\n    }\n\n    // Convert handle object\n    obj.got.call(this\x2C message\x2C handle\x2C (handle) => {\n      handleMessage(message.msg\x2C handle\x2C isInternal(message.msg));\n    });\n  });\n\n  target.on('newListener'\x2C function() {\n\n    process.nextTick(() => {\n      if (!target.channel || !target.listenerCount('message'))\n        return;\n\n      const messages = target.channel[kPendingMessages];\n      const { length } = messages;\n      if (!length) return;\n\n      for (let i = 0; i < length; i++) {\n        ReflectApply(target.emit\x2C target\x2C messages[i]);\n      }\n\n      target.channel[kPendingMessages] = [];\n    });\n  });\n\n  target.send = function(message\x2C handle\x2C options\x2C callback) {\n    if (typeof handle === 'function') {\n      callback = handle;\n      handle = undefined;\n      options = undefined;\n    } else if (typeof options === 'function') {\n      callback = options;\n      options = undefined;\n    } else if (options !== undefined) {\n      validateObject(options\x2C 'options');\n    }\n\n    options = { swallowErrors: false\x2C ...options };\n\n    if (this.connected) {\n      return this._send(message\x2C handle\x2C options\x2C callback);\n    }\n    const ex = new ERR_IPC_CHANNEL_CLOSED();\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n    } else {\n      process.nextTick(() => this.emit('error'\x2C ex));\n    }\n    return false;\n  };\n\n  target._send = function(message\x2C handle\x2C options\x2C callback) {\n    assert(this.connected || this.channel);\n\n    if (message === undefined)\n      throw new ERR_MISSING_ARGS('message');\n\n    // Non-serializable messages should not reach the remote\n    // end point; as any failure in the stringification there\n    // will result in error message that is weakly consumable.\n    // So perform a final check on message prior to sending.\n    if (typeof message !== 'string' &&\n        typeof message !== 'object' &&\n        typeof message !== 'number' &&\n        typeof message !== 'boolean') {\n      throw new ERR_INVALID_ARG_TYPE(\n        'message'\x2C ['string'\x2C 'object'\x2C 'number'\x2C 'boolean']\x2C message);\n    }\n\n    // Support legacy function signature\n    if (typeof options === 'boolean') {\n      options = { swallowErrors: options };\n    }\n\n    let obj;\n\n    // Package messages with a handle object\n    if (handle) {\n      // This message will be handled by an internalMessage event handler\n      message = {\n        cmd: 'NODE_HANDLE'\x2C\n        type: null\x2C\n        msg: message\x2C\n      };\n\n      if (handle instanceof net.Socket) {\n        message.type = 'net.Socket';\n      } else if (handle instanceof net.Server) {\n        message.type = 'net.Server';\n      } else if (handle instanceof TCP || handle instanceof Pipe) {\n        message.type = 'net.Native';\n      } else if (handle instanceof dgram.Socket) {\n        message.type = 'dgram.Socket';\n      } else if (handle instanceof UDP) {\n        message.type = 'dgram.Native';\n      } else {\n        throw new ERR_INVALID_HANDLE_TYPE();\n      }\n\n      // Queue-up message and handle if we haven't received ACK yet.\n      if (this._handleQueue) {\n        ArrayPrototypePush(this._handleQueue\x2C {\n          callback: callback\x2C\n          handle: handle\x2C\n          options: options\x2C\n          message: message.msg\x2C\n        });\n        return this._handleQueue.length === 1;\n      }\n\n      obj = handleConversion[message.type];\n\n      // convert TCP object to native handle object\n      handle = ReflectApply(handleConversion[message.type].send\x2C\n                            target\x2C [message\x2C handle\x2C options]);\n\n      // If handle was sent twice\x2C or it is impossible to get native handle\n      // out of it - just send a text without the handle.\n      if (!handle)\n        message = message.msg;\n\n      // Update simultaneous accepts on Windows\n      if (obj.simultaneousAccepts && process.platform === 'win32') {\n        handle.setSimultaneousAccepts(true);\n      }\n    } else if (this._handleQueue &&\n               !(message && (message.cmd === 'NODE_HANDLE_ACK' ||\n                             message.cmd === 'NODE_HANDLE_NACK'))) {\n      // Queue request anyway to avoid out-of-order messages.\n      ArrayPrototypePush(this._handleQueue\x2C {\n        callback: callback\x2C\n        handle: null\x2C\n        options: options\x2C\n        message: message\x2C\n      });\n      return this._handleQueue.length === 1;\n    }\n\n    const req = new WriteWrap();\n\n    const err = writeChannelMessage(channel\x2C req\x2C message\x2C handle);\n    const wasAsyncWrite = streamBaseState[kLastWriteWasAsync];\n\n    if (err === 0) {\n      if (handle) {\n        this._handleQueue ||= [];\n        if (obj?.postSend)\n          obj.postSend(message\x2C handle\x2C options\x2C callback\x2C target);\n      }\n\n      if (wasAsyncWrite) {\n        req.oncomplete = () => {\n          control.unrefCounted();\n          if (typeof callback === 'function')\n            callback(null);\n        };\n        control.refCounted();\n      } else if (typeof callback === 'function') {\n        process.nextTick(callback\x2C null);\n      }\n    } else {\n      // Cleanup handle on error\n      if (obj?.postSend)\n        obj.postSend(message\x2C handle\x2C options\x2C callback);\n\n      if (!options.swallowErrors) {\n        const ex = new ErrnoException(err\x2C 'write');\n        if (typeof callback === 'function') {\n          process.nextTick(callback\x2C ex);\n        } else {\n          process.nextTick(() => this.emit('error'\x2C ex));\n        }\n      }\n    }\n\n    /* If the primary is > 2 read() calls behind\x2C please stop sending. */\n    return channel.writeQueueSize < (65536 * 2);\n  };\n\n  // Connected will be set to false immediately when a disconnect() is\n  // requested\x2C even though the channel might still be alive internally to\n  // process queued messages. The three states are distinguished as follows:\n  // - disconnect() never requested: channel is not null and connected\n  //   is true\n  // - disconnect() requested\x2C messages in the queue: channel is not null\n  //   and connected is false\n  // - disconnect() requested\x2C channel actually disconnected: channel is\n  //   null and connected is false\n  target.connected = true;\n\n  target.disconnect = function() {\n    if (!this.connected) {\n      this.emit('error'\x2C new ERR_IPC_DISCONNECTED());\n      return;\n    }\n\n    // Do not allow any new messages to be written.\n    this.connected = false;\n\n    // If there are no queued messages\x2C disconnect immediately. Otherwise\x2C\n    // postpone the disconnect so that it happens internally after the\n    // queue is flushed.\n    if (!this._handleQueue)\n      this._disconnect();\n  };\n\n  target._disconnect = function() {\n    assert(this.channel);\n\n    // This marks the fact that the channel is actually disconnected.\n    this.channel = null;\n    this[kChannelHandle] = null;\n\n    if (this._pendingMessage)\n      closePendingHandle(this);\n\n    let fired = false;\n    function finish() {\n      if (fired) return;\n      fired = true;\n\n      channel.close();\n      target.emit('disconnect');\n    }\n\n    // If a message is being read\x2C then wait for it to complete.\n    if (channel.buffering) {\n      this.once('message'\x2C finish);\n      this.once('internalMessage'\x2C finish);\n\n      return;\n    }\n\n    process.nextTick(finish);\n  };\n\n  function emit(event\x2C message\x2C handle) {\n    if ('internalMessage' === event || target.listenerCount('message')) {\n      target.emit(event\x2C message\x2C handle);\n      return;\n    }\n\n    ArrayPrototypePush(\n      target.channel[kPendingMessages]\x2C\n      [event\x2C message\x2C handle]\x2C\n    );\n  }\n\n  function handleMessage(message\x2C handle\x2C internal) {\n    if (!target.channel)\n      return;\n\n    const eventName = (internal ? 'internalMessage' : 'message');\n\n    process.nextTick(emit\x2C eventName\x2C message\x2C handle);\n  }\n\n  channel.readStart();\n  return control;\n}\n\nconst INTERNAL_PREFIX = 'NODE_';\nfunction isInternal(message) {\n  return (message !== null &&\n          typeof message === 'object' &&\n          typeof message.cmd === 'string' &&\n          message.cmd.length > INTERNAL_PREFIX.length &&\n          StringPrototypeSlice(message.cmd\x2C 0\x2C INTERNAL_PREFIX.length) ===\n            INTERNAL_PREFIX);\n}\n\nconst nop = FunctionPrototype;\n\nfunction getValidStdio(stdio\x2C sync) {\n  let ipc;\n  let ipcFd;\n\n  // Replace shortcut with an array\n  if (typeof stdio === 'string') {\n    stdio = stdioStringToArray(stdio);\n  } else if (!ArrayIsArray(stdio)) {\n    throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n  }\n\n  // At least 3 stdio will be created\n  // Don't concat() a new Array() because it would be sparse\x2C and\n  // stdio.reduce() would skip the sparse elements of stdio.\n  // See https://stackoverflow.com/a/5501711/3561\n  while (stdio.length < 3) ArrayPrototypePush(stdio\x2C undefined);\n\n  // Translate stdio into C++-readable form\n  // (i.e. PipeWraps or fds)\n  stdio = ArrayPrototypeReduce(stdio\x2C (acc\x2C stdio\x2C i) => {\n    function cleanup() {\n      for (let i = 0; i < acc.length; i++) {\n        if ((acc[i].type === 'pipe' || acc[i].type === 'ipc') && acc[i].handle)\n          acc[i].handle.close();\n      }\n    }\n\n    // Defaults\n    stdio ??= i < 3 ? 'pipe' : 'ignore';\n\n    if (stdio === 'ignore') {\n      ArrayPrototypePush(acc\x2C { type: 'ignore' });\n    } else if (stdio === 'pipe' || stdio === 'overlapped' ||\n               (typeof stdio === 'number' && stdio < 0)) {\n      const a = {\n        type: stdio === 'overlapped' ? 'overlapped' : 'pipe'\x2C\n        readable: i === 0\x2C\n        writable: i !== 0\x2C\n      };\n\n      if (!sync)\n        a.handle = new Pipe(PipeConstants.SOCKET);\n\n      ArrayPrototypePush(acc\x2C a);\n    } else if (stdio === 'ipc') {\n      if (sync || ipc !== undefined) {\n        // Cleanup previously created pipes\n        cleanup();\n        if (!sync)\n          throw new ERR_IPC_ONE_PIPE();\n        else\n          throw new ERR_IPC_SYNC_FORK();\n      }\n\n      ipc = new Pipe(PipeConstants.IPC);\n      ipcFd = i;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'pipe'\x2C\n        handle: ipc\x2C\n        ipc: true\x2C\n      });\n    } else if (stdio === 'inherit') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'inherit'\x2C\n        fd: i\x2C\n      });\n    } else if (typeof stdio === 'number' || typeof stdio.fd === 'number') {\n      ArrayPrototypePush(acc\x2C {\n        type: 'fd'\x2C\n        fd: typeof stdio === 'number' ? stdio : stdio.fd\x2C\n      });\n    } else if (getHandleWrapType(stdio) || getHandleWrapType(stdio.handle) ||\n               getHandleWrapType(stdio._handle)) {\n      const handle = getHandleWrapType(stdio) ?\n        stdio :\n        getHandleWrapType(stdio.handle) ? stdio.handle : stdio._handle;\n\n      ArrayPrototypePush(acc\x2C {\n        type: 'wrap'\x2C\n        wrapType: getHandleWrapType(handle)\x2C\n        handle: handle\x2C\n        _stdio: stdio\x2C\n      });\n    } else if (isArrayBufferView(stdio) || typeof stdio === 'string') {\n      if (!sync) {\n        cleanup();\n        throw new ERR_INVALID_SYNC_FORK_INPUT(inspect(stdio));\n      }\n    } else {\n      // Cleanup\n      cleanup();\n      throw new ERR_INVALID_ARG_VALUE('stdio'\x2C stdio);\n    }\n\n    return acc;\n  }\x2C []);\n\n  return { stdio\x2C ipc\x2C ipcFd };\n}\n\n\nfunction getSocketList(type\x2C worker\x2C key) {\n  const sockets = worker[kChannelHandle].sockets[type];\n  let socketList = sockets[key];\n  if (!socketList) {\n    const Construct = type === 'send' ? SocketListSend : SocketListReceive;\n    socketList = sockets[key] = new Construct(worker\x2C key);\n  }\n  return socketList;\n}\n\n\nfunction maybeClose(subprocess) {\n  subprocess._closesGot++;\n\n  if (subprocess._closesGot === subprocess._closesNeeded) {\n    subprocess.emit('close'\x2C subprocess.exitCode\x2C subprocess.signalCode);\n  }\n}\n\nfunction spawnSync(options) {\n  const result = spawn_sync.spawn(options);\n\n  if (result.output && options.encoding && options.encoding !== 'buffer') {\n    for (let i = 0; i < result.output.length; i++) {\n      if (!result.output[i])\n        continue;\n      result.output[i] = result.output[i].toString(options.encoding);\n    }\n  }\n\n  result.stdout = result.output?.[1];\n  result.stderr = result.output?.[2];\n\n  if (result.error) {\n    result.error = new ErrnoException(result.error\x2C 'spawnSync ' + options.file);\n    result.error.path = options.file;\n    result.error.spawnargs = ArrayPrototypeSlice(options.args\x2C 1);\n  }\n\n  return result;\n}\n\nmodule.exports = {\n  ChildProcess\x2C\n  kChannelHandle\x2C\n  setupChannel\x2C\n  getValidStdio\x2C\n  stdioStringToArray\x2C\n  spawnSync\x2C\n};\n
code-source-info,0x277c96e82b88,80,0,31691,C0O0C4O31691,,
code-creation,JS,9,23916,0x277c96e83438,1306, node:internal/child_process:1:1,0x7143c23170,~
code-source-info,0x277c96e
code-creation,JS,9,23958,0x277c96e83b50,29,Control node:internal/child_process:537:3,0x7143c23d10,~
code-source-info,0x277c96e83b50,80,13966,14023,C3O13977C12O13993C21O14018C28O14023,,
tick,0x1010153c4,23958,0,0x0,9,0x148000544,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,24666,0x277c96e83be8,5, node:net:1:1,0x7143c2b100,~
script-source,81,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst stream = require('stream');\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\n  debug = fn;\n});\nconst {\n  kReinitializeHandle\x2C\n  isIP\x2C\n  isIPv4\x2C\n  isIPv6\x2C\n  normalizedArgsSymbol\x2C\n  makeSyncWrite\x2C\n} = require('internal/net');\nconst assert = require('internal/assert');\nconst {\n  UV_EADDRINUSE\x2C\n  UV_EINVAL\x2C\n  UV_ENOTCONN\x2C\n  UV_ECANCELED\x2C\n  UV_ETIMEDOUT\x2C\n} = internalBinding('uv');\nconst { convertIpv6StringToBuffer } = internalBinding('cares_wrap');\n\nconst { Buffer } = require('buffer');\nconst { ShutdownWrap } = internalBinding('stream_wrap');\nconst {\n  TCP\x2C\n  TCPConnectWrap\x2C\n  constants: TCPConstants\x2C\n} = internalBinding('tcp_wrap');\nconst {\n  Pipe\x2C\n  PipeConnectWrap\x2C\n  constants: PipeConstants\x2C\n} = internalBinding('pipe_wrap');\nconst {\n  newAsyncId\x2C\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kHandle\x2C\n  kUpdateTimer\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n} = require('internal/stream_base_commons');\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  NodeAggregateError\x2C\n  UVExceptionWithHostPort\x2C\n  codes: {\n    ERR_INVALID_ADDRESS_FAMILY\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_INVALID_HANDLE_TYPE\x2C\n    ERR_INVALID_IP_ADDRESS\x2C\n    ERR_IP_BLOCKED\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_SERVER_ALREADY_LISTEN\x2C\n    ERR_SERVER_NOT_RUNNING\x2C\n    ERR_SOCKET_CLOSED\x2C\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\n  }\x2C\n  genericNodeError\x2C\n} = require('internal/errors');\nconst { isUint8Array } = require('internal/util/types');\nconst { queueMicrotask } = require('internal/process/task_queues');\nconst {\n  guessHandleType\x2C\n  isWindows\x2C\n  kEmptyObject\x2C\n  promisify\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateString\x2C\n} = require('internal/validators');\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\nconst { getOptionValue } = require('internal/options');\n\n// Lazy loaded to improve startup performance.\nlet cluster;\nlet dns;\nlet BlockList;\nlet SocketAddress;\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\nlet autoSelectFamilyAttemptTimeoutDefault = getOptionValue('--network-family-autoselection-attempt-timeout');\n\nconst { clearTimeout\x2C setTimeout } = require('timers');\nconst { kTimeout } = require('internal/timers');\n\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\nconst DEFAULT_IPV6_ADDR = '::';\n\nconst noop = () => {};\n\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\n\nconst dc = require('diagnostics_channel');\nconst netClientSocketChannel = dc.channel('net.client.socket');\nconst netServerSocketChannel = dc.channel('net.server.socket');\nconst netServerListen = dc.tracingChannel('net.server.listen');\n\nconst {\n  hasObserver\x2C\n  startPerf\x2C\n  stopPerf\x2C\n} = require('internal/perf/observe');\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\n\nfunction getFlags(options) {\n  let flags = 0;\n  if (options.ipv6Only === true) {\n    flags |= TCPConstants.UV_TCP_IPV6ONLY;\n  }\n  if (options.reusePort === true) {\n    flags |= TCPConstants.UV_TCP_REUSEPORT;\n  }\n  return flags;\n}\n\nfunction createHandle(fd\x2C is_server) {\n  validateInt32(fd\x2C 'fd'\x2C 0);\n  const type = guessHandleType(fd);\n  if (type === 'PIPE') {\n    return new Pipe(\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\n    );\n  }\n\n  if (type === 'TCP') {\n    return new TCP(\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\n    );\n  }\n\n  throw new ERR_INVALID_FD_TYPE(type);\n}\n\n\nfunction getNewAsyncId(handle) {\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\n    newAsyncId() : handle.getAsyncId();\n}\n\n\nfunction isPipeName(s) {\n  return typeof s === 'string' && toNumber(s) === false;\n}\n\n/**\n * Creates a new TCP or IPC server\n * @param {{\n *   allowHalfOpen?: boolean;\n *   pauseOnConnect?: boolean;\n *   }} [options]\n * @param {Function} [connectionListener]\n * @returns {Server}\n */\n\nfunction createServer(options\x2C connectionListener) {\n  return new Server(options\x2C connectionListener);\n}\n\n\n// Target API:\n//\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\n//   ...\n// });\n//\n// There are various forms:\n//\n// connect(options\x2C [cb])\n// connect(port\x2C [host]\x2C [cb])\n// connect(path\x2C [cb]);\n//\nfunction connect(...args) {\n  const normalized = normalizeArgs(args);\n  const options = normalized[0];\n  debug('createConnection'\x2C normalized);\n  const socket = new Socket(options);\n\n  if (options.timeout) {\n    socket.setTimeout(options.timeout);\n  }\n\n  return socket.connect(normalized);\n}\n\nfunction getDefaultAutoSelectFamily() {\n  return autoSelectFamilyDefault;\n}\n\nfunction setDefaultAutoSelectFamily(value) {\n  validateBoolean(value\x2C 'value');\n  autoSelectFamilyDefault = value;\n}\n\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\n  return autoSelectFamilyAttemptTimeoutDefault;\n}\n\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\n  validateInt32(value\x2C 'value'\x2C 1);\n\n  if (value < 10) {\n    value = 10;\n  }\n\n  autoSelectFamilyAttemptTimeoutDefault = value;\n}\n\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\n// cb is either a function or null.\n// Used to normalize arguments of Socket.prototype.connect() and\n// Server.prototype.listen(). Possible combinations of parameters:\n//   (options[...][\x2C cb])\n//   (path[...][\x2C cb])\n//   ([port][\x2C host][...][\x2C cb])\n// For Socket.prototype.connect()\x2C the [...] part is ignored\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\n// but will not be handled here (handled in listen())\nfunction normalizeArgs(args) {\n  let arr;\n\n  if (args.length === 0) {\n    arr = [{}\x2C null];\n    arr[normalizedArgsSymbol] = true;\n    return arr;\n  }\n\n  const arg0 = args[0];\n  let options = {};\n  if (typeof arg0 === 'object' && arg0 !== null) {\n    // (options[...][\x2C cb])\n    options = arg0;\n  } else if (isPipeName(arg0)) {\n    // (path[...][\x2C cb])\n    options.path = arg0;\n  } else {\n    // ([port][\x2C host][...][\x2C cb])\n    options.port = arg0;\n    if (args.length > 1 && typeof args[1] === 'string') {\n      options.host = args[1];\n    }\n  }\n\n  const cb = args[args.length - 1];\n  if (typeof cb !== 'function')\n    arr = [options\x2C null];\n  else\n    arr = [options\x2C cb];\n\n  arr[normalizedArgsSymbol] = true;\n  return arr;\n}\n\n\n// Called when creating new Socket\x2C or when re-using a closed Socket\nfunction initSocketHandle(self) {\n  self._undestroy();\n  self._sockname = null;\n\n  // Handle creation may be deferred to bind() or connect() time.\n  if (self._handle) {\n    self._handle[owner_symbol] = self;\n    self._handle.onread = onStreamRead;\n    self[async_id_symbol] = getNewAsyncId(self._handle);\n\n    let userBuf = self[kBuffer];\n    if (userBuf) {\n      const bufGen = self[kBufferGen];\n      if (bufGen !== null) {\n        userBuf = bufGen();\n        if (!isUint8Array(userBuf))\n          return;\n        self[kBuffer] = userBuf;\n      }\n      self._handle.useUserBuffer(userBuf);\n    }\n  }\n}\n\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\n  if (self._handle) {\n    self._handle.close(() => {\n      debug('emit close');\n      self.emit('close'\x2C isException);\n      if (isCleanupPending) {\n        self._handle.onread = noop;\n        self._handle = null;\n        self._sockname = null;\n      }\n    });\n  }\n}\n\nconst kBytesRead = Symbol('kBytesRead');\nconst kBytesWritten = Symbol('kBytesWritten');\nconst kSetNoDelay = Symbol('kSetNoDelay');\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\n\nfunction Socket(options) {\n  if (!(this instanceof Socket)) return new Socket(options);\n  if (options?.objectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      'options.objectMode'\x2C\n      options.objectMode\x2C\n      'is not supported'\x2C\n    );\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\n    throw new ERR_INVALID_ARG_VALUE(\n      `options.${\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\n      }`\x2C\n      options.readableObjectMode || options.writableObjectMode\x2C\n      'is not supported'\x2C\n    );\n  }\n  if (options?.keepAliveInitialDelay !== undefined) {\n    validateNumber(\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n\n  this.connecting = false;\n  // Problem with this is that users can supply their own handle\x2C that may not\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\n  // probably be supplied by async_hooks.\n  this[async_id_symbol] = -1;\n  this._hadError = false;\n  this[kHandle] = null;\n  this._parent = null;\n  this._host = null;\n  this[kLastWriteQueueSize] = 0;\n  this[kTimeout] = null;\n  this[kBuffer] = null;\n  this[kBufferCb] = null;\n  this[kBufferGen] = null;\n  this._closeAfterHandlingError = false;\n\n  if (typeof options === 'number')\n    options = { fd: options }; // Legacy interface.\n  else\n    options = { ...options };\n\n  // Default to *not* allowing half open sockets.\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\n  // For backwards compat do not emit close on destroy.\n  options.emitClose = false;\n  options.autoDestroy = true;\n  // Handle strings directly.\n  options.decodeStrings = false;\n  stream.Duplex.call(this\x2C options);\n\n  if (options.handle) {\n    this._handle = options.handle; // private\n    this[async_id_symbol] = getNewAsyncId(this._handle);\n  } else if (options.fd !== undefined) {\n    const { fd } = options;\n    let err;\n\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\n    // a valid `PIPE` or `TCP` descriptor\n    this._handle = createHandle(fd\x2C false);\n\n    err = this._handle.open(fd);\n\n    // While difficult to fabricate\x2C in some architectures\n    // `open` may return an error code for valid file descriptors\n    // which cannot be opened. This is difficult to test as most\n    // un-openable fds will throw on `createHandle`\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    this[async_id_symbol] = this._handle.getAsyncId();\n\n    if ((fd === 1 || fd === 2) &&\n        (this._handle instanceof Pipe) && isWindows) {\n      // Make stdout and stderr blocking on Windows\n      err = this._handle.setBlocking(true);\n      if (err)\n        throw new ErrnoException(err\x2C 'setBlocking');\n\n      this._writev = null;\n      this._write = makeSyncWrite(fd);\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\n      // we need to let it do that by turning it into a writable\x2C own\n      // property.\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\n        __proto__: null\x2C\n        value: 0\x2C writable: true\x2C\n      });\n    }\n  }\n\n  const onread = options.onread;\n  if (onread !== null && typeof onread === 'object' &&\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\n      typeof onread.callback === 'function') {\n    if (typeof onread.buffer === 'function') {\n      this[kBuffer] = true;\n      this[kBufferGen] = onread.buffer;\n    } else {\n      this[kBuffer] = onread.buffer;\n    }\n    this[kBufferCb] = onread.callback;\n  }\n\n  this[kSetNoDelay] = Boolean(options.noDelay);\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\n\n  // Shut down the socket when we're finished with it.\n  this.on('end'\x2C onReadableStreamEnd);\n\n  initSocketHandle(this);\n\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  // If we have a handle\x2C then start the flow of data into the\n  // buffer.  if not\x2C then this will happen when we connect\n  if (this._handle && options.readable !== false) {\n    if (options.pauseOnCreate) {\n      // Stop the handle from reading and pause the stream\n      this._handle.reading = false;\n      this._handle.readStop();\n      this.readableFlowing = false;\n    } else if (!options.manualStart) {\n      this.read(0);\n    }\n  }\n\n  if (options.signal) {\n    addClientAbortSignalOption(this\x2C options);\n  }\n\n  // Reserve properties\n  this.server = null;\n  this._server = null;\n\n  // Used after `.destroy()`\n  this[kBytesRead] = 0;\n  this[kBytesWritten] = 0;\n  if (options.blockList) {\n    if (!module.exports.BlockList.isBlockList(options.blockList)) {\n      throw new ERR_INVALID_ARG_TYPE('options.blockList'\x2C 'net.BlockList'\x2C options.blockList);\n    }\n    this.blockList = options.blockList;\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\n\n// Refresh existing timeouts.\nSocket.prototype._unrefTimer = function _unrefTimer() {\n  for (let s = this; s !== null; s = s._parent) {\n    if (s[kTimeout])\n      s[kTimeout].refresh();\n  }\n};\n\n\n// The user has called .end()\x2C and all the bytes have been\n// sent out to the other side.\nSocket.prototype._final = function(cb) {\n  // If still connecting - defer handling `_final` until 'connect' will happen\n  if (this.connecting) {\n    debug('_final: not yet connected');\n    return this.once('connect'\x2C () => this._final(cb));\n  }\n\n  if (!this._handle)\n    return cb();\n\n  debug('_final: not ended\x2C call shutdown()');\n\n  const req = new ShutdownWrap();\n  req.oncomplete = afterShutdown;\n  req.handle = this._handle;\n  req.callback = cb;\n  const err = this._handle.shutdown(req);\n\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\n    return cb();\n  else if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'shutdown'));\n};\n\nfunction afterShutdown() {\n  const self = this.handle[owner_symbol];\n\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\n\n  this.callback();\n}\n\n// Provide a better error message when we call end() as a result\n// of the other side sending a FIN.  The standard 'write after end'\n// is overly vague\x2C and makes it seem like the user's code is to blame.\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\n  if (!this.writableEnded) {\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  const er = genericNodeError(\n    'This socket has been ended by the other party'\x2C\n    { code: 'EPIPE' }\x2C\n  );\n  if (typeof cb === 'function') {\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\n  }\n  this.destroy(er);\n\n  return false;\n}\n\nSocket.prototype.setTimeout = setStreamTimeout;\n\n\nSocket.prototype._onTimeout = function() {\n  const handle = this._handle;\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\n  if (lastWriteQueueSize > 0 && handle) {\n    // `lastWriteQueueSize !== writeQueueSize` means there is\n    // an active write in progress\x2C so we suppress the timeout.\n    const { writeQueueSize } = handle;\n    if (lastWriteQueueSize !== writeQueueSize) {\n      this[kLastWriteQueueSize] = writeQueueSize;\n      this._unrefTimer();\n      return;\n    }\n  }\n  debug('_onTimeout');\n  this.emit('timeout');\n};\n\n\nSocket.prototype.setNoDelay = function(enable) {\n  // Backwards compatibility: assume true when `enable` is omitted\n  enable = Boolean(enable === undefined ? true : enable);\n\n  if (!this._handle) {\n    this[kSetNoDelay] = enable;\n    return this;\n  }\n\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\n    this[kSetNoDelay] = enable;\n    this._handle.setNoDelay(enable);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\n  enable = Boolean(enable);\n  const initialDelay = ~~(initialDelayMsecs / 1000);\n\n  if (!this._handle) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    return this;\n  }\n\n  if (!this._handle.setKeepAlive) {\n    return this;\n  }\n\n  if (enable !== this[kSetKeepAlive] ||\n      (\n        enable &&\n        this[kSetKeepAliveInitialDelay] !== initialDelay\n      )\n  ) {\n    this[kSetKeepAlive] = enable;\n    this[kSetKeepAliveInitialDelay] = initialDelay;\n    this._handle.setKeepAlive(enable\x2C initialDelay);\n  }\n\n  return this;\n};\n\n\nSocket.prototype.address = function() {\n  return this._getsockname();\n};\n\n\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this.connecting;\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\n  __proto__: null\x2C\n  get() {\n    return !this._handle || this.connecting;\n  }\x2C\n  configurable: true\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this.connecting) {\n      return 'opening';\n    } else if (this.readable && this.writable) {\n      return 'open';\n    } else if (this.readable && !this.writable) {\n      return 'readOnly';\n    } else if (!this.readable && this.writable) {\n      return 'writeOnly';\n    }\n    return 'closed';\n  }\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    if (this._handle) {\n      return this.writableLength;\n    }\n  }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return this._unrefTimer;\n  }\x2C\n});\n\n\nfunction tryReadStart(socket) {\n  // Not already reading\x2C start the flow\n  debug('Socket._handle.readStart');\n  socket._handle.reading = true;\n  const err = socket._handle.readStart();\n  if (err)\n    socket.destroy(new ErrnoException(err\x2C 'read'));\n}\n\n// Just call handle.readStart until we have enough in the buffer\nSocket.prototype._read = function(n) {\n  debug(\n    '_read - n'\x2C n\x2C\n    'isConnecting?'\x2C !!this.connecting\x2C\n    'hasHandle?'\x2C !!this._handle\x2C\n  );\n\n  if (this.connecting || !this._handle) {\n    debug('_read wait for connection');\n    this.once('connect'\x2C () => this._read(n));\n  } else if (!this._handle.reading) {\n    tryReadStart(this);\n  }\n};\n\n\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\n  stream.Duplex.prototype.end.call(this\x2C\n                                   data\x2C encoding\x2C callback);\n  return this;\n};\n\nSocket.prototype.resetAndDestroy = function() {\n  if (this._handle) {\n    if (!(this._handle instanceof TCP))\n      throw new ERR_INVALID_HANDLE_TYPE();\n    if (this.connecting) {\n      debug('reset wait for connection');\n      this.once('connect'\x2C () => this._reset());\n    } else {\n      this._reset();\n    }\n  } else {\n    this.destroy(new ERR_SOCKET_CLOSED());\n  }\n  return this;\n};\n\nSocket.prototype.pause = function() {\n  if (this[kBuffer] && !this.connecting && this._handle?.reading) {\n    this._handle.reading = false;\n    if (!this.destroyed) {\n      const err = this._handle.readStop();\n      if (err)\n        this.destroy(new ErrnoException(err\x2C 'read'));\n    }\n  }\n  return stream.Duplex.prototype.pause.call(this);\n};\n\n\nSocket.prototype.resume = function() {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.resume.call(this);\n};\n\n\nSocket.prototype.read = function(n) {\n  if (this[kBuffer] && !this.connecting && this._handle &&\n      !this._handle.reading) {\n    tryReadStart(this);\n  }\n  return stream.Duplex.prototype.read.call(this\x2C n);\n};\n\n\n// Called when the 'end' event is emitted.\nfunction onReadableStreamEnd() {\n  if (!this.allowHalfOpen) {\n    this.write = writeAfterFIN;\n  }\n}\n\n\nSocket.prototype.destroySoon = function() {\n  if (this.writable)\n    this.end();\n\n  if (this.writableFinished)\n    this.destroy();\n  else\n    this.once('finish'\x2C this.destroy);\n};\n\n\nSocket.prototype._destroy = function(exception\x2C cb) {\n  debug('destroy');\n\n  this.connecting = false;\n\n  for (let s = this; s !== null; s = s._parent) {\n    clearTimeout(s[kTimeout]);\n  }\n\n  debug('close');\n  if (this._handle) {\n    if (this !== process.stderr)\n      debug('close handle');\n    const isException = exception ? true : false;\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\n    this[kBytesRead] = this._handle.bytesRead;\n    this[kBytesWritten] = this._handle.bytesWritten;\n\n    if (this.resetAndClosing) {\n      this.resetAndClosing = false;\n      const err = this._handle.reset(() => {\n        debug('emit close');\n        this.emit('close'\x2C isException);\n      });\n      if (err)\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\n    } else if (this._closeAfterHandlingError) {\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\n      // accessible when an `error` event is handled in the `next tick queue`.\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\n    } else {\n      closeSocketHandle(this\x2C isException);\n    }\n\n    if (!this._closeAfterHandlingError) {\n      this._handle.onread = noop;\n      this._handle = null;\n      this._sockname = null;\n    }\n    cb(exception);\n  } else {\n    cb(exception);\n    process.nextTick(emitCloseNT\x2C this);\n  }\n\n  if (this._server) {\n    debug('has server');\n    this._server._connections--;\n    if (this._server._emitCloseIfDrained) {\n      this._server._emitCloseIfDrained();\n    }\n  }\n};\n\nSocket.prototype._reset = function() {\n  debug('reset connection');\n  this.resetAndClosing = true;\n  return this.destroy();\n};\n\nSocket.prototype._getpeername = function() {\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\n    return this._peername || {};\n  } else if (!this._peername) {\n    const out = {};\n    const err = this._handle.getpeername(out);\n    if (err) return out;\n    this._peername = out;\n  }\n  return this._peername;\n};\n\nfunction protoGetter(name\x2C callback) {\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    get: callback\x2C\n  });\n}\n\nprotoGetter('bytesRead'\x2C function bytesRead() {\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\n});\n\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\n  return this._getpeername().address;\n});\n\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\n  return this._getpeername().family;\n});\n\nprotoGetter('remotePort'\x2C function remotePort() {\n  return this._getpeername().port;\n});\n\n\nSocket.prototype._getsockname = function() {\n  if (!this._handle || !this._handle.getsockname) {\n    return {};\n  } else if (!this._sockname) {\n    this._sockname = {};\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\n    this._handle.getsockname(this._sockname);\n  }\n  return this._sockname;\n};\n\n\nprotoGetter('localAddress'\x2C function localAddress() {\n  return this._getsockname().address;\n});\n\n\nprotoGetter('localPort'\x2C function localPort() {\n  return this._getsockname().port;\n});\n\nprotoGetter('localFamily'\x2C function localFamily() {\n  return this._getsockname().family;\n});\n\nSocket.prototype[kAfterAsyncWrite] = function() {\n  this[kLastWriteQueueSize] = 0;\n};\n\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\n  // If we are still connecting\x2C then buffer this for later.\n  // The Writable logic will buffer up any more writes while\n  // waiting for this one to be done.\n  if (this.connecting) {\n    this._pendingData = data;\n    this._pendingEncoding = encoding;\n    this.once('connect'\x2C function connect() {\n      this.off('close'\x2C onClose);\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\n    });\n    function onClose() {\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\n    }\n    this.once('close'\x2C onClose);\n    return;\n  }\n  this._pendingData = null;\n  this._pendingEncoding = '';\n\n  if (!this._handle) {\n    cb(new ERR_SOCKET_CLOSED());\n    return false;\n  }\n\n  this._unrefTimer();\n\n  let req;\n  if (writev)\n    req = writevGeneric(this\x2C data\x2C cb);\n  else\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\n  if (req.async)\n    this[kLastWriteQueueSize] = req.bytes;\n};\n\n\nSocket.prototype._writev = function(chunks\x2C cb) {\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\n};\n\n\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\n};\n\n\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\n// really hurt anyone either. This can probably be removed safely if desired.\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\n});\n\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\n  let bytes = this._bytesDispatched;\n  const data = this._pendingData;\n  const encoding = this._pendingEncoding;\n  const writableBuffer = this.writableBuffer;\n\n  if (!writableBuffer)\n    return undefined;\n\n  for (const el of writableBuffer) {\n    bytes += el.chunk instanceof Buffer ?\n      el.chunk.length :\n      Buffer.byteLength(el.chunk\x2C el.encoding);\n  }\n\n  if (ArrayIsArray(data)) {\n    // Was a writev\x2C iterate over chunks to get total length\n    for (let i = 0; i < data.length; i++) {\n      const chunk = data[i];\n\n      if (data.allBuffers || chunk instanceof Buffer)\n        bytes += chunk.length;\n      else\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\n    }\n  } else if (data) {\n    // Writes are either a string or a Buffer.\n    if (typeof data !== 'string')\n      bytes += data.length;\n    else\n      bytes += Buffer.byteLength(data\x2C encoding);\n  }\n\n  return bytes;\n});\n\n\nfunction checkBindError(err\x2C port\x2C handle) {\n  // EADDRINUSE may not be reported until we call listen() or connect().\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\n  // bound to the expected port before calling listen() or connect().\n  //\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\n  // really support pipes anyway.\n  if (err === 0 && port > 0 && handle.getsockname) {\n    const out = {};\n    err = handle.getsockname(out);\n    if (err === 0 && port !== out.port) {\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\n      err = UV_EADDRINUSE;\n    }\n  }\n  return err;\n}\n\n\nfunction internalConnect(\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\n  // TODO return promise from Socket.prototype.connect which\n  // wraps _connectReq.\n\n  assert(self.connecting);\n\n  let err;\n\n  if (localAddress || localPort) {\n    if (addressType === 4) {\n      localAddress ||= DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress ||= DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\n      self.destroy(ex);\n      return;\n    }\n  }\n\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  if (addressType === 6 || addressType === 4) {\n    if (self.blockList?.check(address\x2C `ipv${addressType}`)) {\n      self.destroy(new ERR_IP_BLOCKED(address));\n      return;\n    }\n    const req = new TCPConnectWrap();\n    req.oncomplete = afterConnect;\n    req.address = address;\n    req.port = port;\n    req.localAddress = localAddress;\n    req.localPort = localPort;\n    req.addressType = addressType;\n\n    if (addressType === 4)\n      err = self._handle.connect(req\x2C address\x2C port);\n    else\n      err = self._handle.connect6(req\x2C address\x2C port);\n  } else {\n    const req = new PipeConnectWrap();\n    req.address = address;\n    req.oncomplete = afterConnect;\n\n    err = self._handle.connect(req\x2C address);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    self.destroy(ex);\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\n  }\n}\n\n\nfunction internalConnectMultiple(context\x2C canceled) {\n  clearTimeout(context[kTimeout]);\n  const self = context.socket;\n\n  // We were requested to abort. Stop all operations\n  if (self._aborted) {\n    return;\n  }\n\n  // All connections have been tried without success\x2C destroy with error\n  if (canceled || context.current === context.addresses.length) {\n    if (context.errors.length === 0) {\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\n      return;\n    }\n\n    self.destroy(new NodeAggregateError(context.errors));\n    return;\n  }\n\n  assert(self.connecting);\n\n  const current = context.current++;\n\n  if (current > 0) {\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\n  }\n\n  const { localPort\x2C port\x2C flags } = context;\n  const { address\x2C family: addressType } = context.addresses[current];\n  let localAddress;\n  let err;\n\n  if (localPort) {\n    if (addressType === 4) {\n      localAddress = DEFAULT_IPV4_ADDR;\n      err = self._handle.bind(localAddress\x2C localPort);\n    } else { // addressType === 6\n      localAddress = DEFAULT_IPV6_ADDR;\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\n    }\n\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\n          localAddress\x2C localPort\x2C addressType);\n\n    err = checkBindError(err\x2C localPort\x2C self._handle);\n    if (err) {\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\n      internalConnectMultiple(context);\n      return;\n    }\n  }\n\n  if (self.blockList?.check(address\x2C `ipv${addressType}`)) {\n    const ex = new ERR_IP_BLOCKED(address);\n    ArrayPrototypePush(context.errors\x2C ex);\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\n    internalConnectMultiple(context);\n    return;\n  }\n\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\n\n  const req = new TCPConnectWrap();\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\n  req.address = address;\n  req.port = port;\n  req.localAddress = localAddress;\n  req.localPort = localPort;\n  req.addressType = addressType;\n\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\n\n  if (addressType === 4) {\n    err = self._handle.connect(req\x2C address\x2C port);\n  } else {\n    err = self._handle.connect6(req\x2C address\x2C port);\n  }\n\n  if (err) {\n    const sockname = self._getsockname();\n    let details;\n\n    if (sockname) {\n      details = sockname.address + ':' + sockname.port;\n    }\n\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\n    internalConnectMultiple(context);\n    return;\n  }\n\n  if (current < context.addresses.length - 1) {\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\n\n    // If the attempt has not returned an error\x2C start the connection timer\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\n  }\n}\n\nSocket.prototype.connect = function(...args) {\n  let normalized;\n  // If passed an array\x2C it's treated as an array of arguments that have\n  // already been normalized (so we don't normalize more than once). This has\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\n  // reverted as it had unintended side effects.\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\n    normalized = args[0];\n  } else {\n    normalized = normalizeArgs(args);\n  }\n  const options = normalized[0];\n  const cb = normalized[1];\n\n  if (netClientSocketChannel.hasSubscribers) {\n    netClientSocketChannel.publish({\n      socket: this\x2C\n    });\n  }\n\n  if (cb !== null) {\n    this.once('connect'\x2C cb);\n  }\n\n  // If the parent is already connecting\x2C do not attempt to connect again\n  if (this._parent?.connecting) {\n    return this;\n  }\n\n  // options.port === null will be checked later.\n  if (options.port === undefined && options.path == null)\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\n\n  if (this.write !== Socket.prototype.write)\n    this.write = Socket.prototype.write;\n\n  if (this.destroyed) {\n    this._handle = null;\n    this._peername = null;\n    this._sockname = null;\n  }\n\n  const { path } = options;\n  const pipe = !!path;\n  debug('pipe'\x2C pipe\x2C path);\n\n  if (!this._handle) {\n    this._handle = pipe ?\n      new Pipe(PipeConstants.SOCKET) :\n      new TCP(TCPConstants.SOCKET);\n    initSocketHandle(this);\n  }\n\n  this._unrefTimer();\n\n  this.connecting = true;\n\n  if (pipe) {\n    validateString(path\x2C 'options.path');\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\n    );\n  } else {\n    lookupAndConnect(this\x2C options);\n  }\n  return this;\n};\n\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\n  this._handle?.close();\n\n  this._handle = handle;\n  this._handle[owner_symbol] = this;\n\n  initSocketHandle(this);\n};\n\nfunction socketToDnsFamily(family) {\n  switch (family) {\n    case 'IPv4':\n      return 4;\n    case 'IPv6':\n      return 6;\n  }\n\n  return family;\n}\n\nfunction lookupAndConnect(self\x2C options) {\n  const { localAddress\x2C localPort } = options;\n  const host = options.host || 'localhost';\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\n\n  validateString(host\x2C 'options.host');\n\n  if (localAddress && !isIP(localAddress)) {\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\n  }\n\n  if (localPort) {\n    validateNumber(localPort\x2C 'options.localPort');\n  }\n\n  if (port !== undefined) {\n    if (typeof port !== 'number' && typeof port !== 'string') {\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\n                                     ['number'\x2C 'string']\x2C port);\n    }\n    validatePort(port);\n  }\n  port |= 0;\n\n\n  if (autoSelectFamily != null) {\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\n  } else {\n    autoSelectFamily = autoSelectFamilyDefault;\n  }\n\n  if (autoSelectFamilyAttemptTimeout != null) {\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\n\n    if (autoSelectFamilyAttemptTimeout < 10) {\n      autoSelectFamilyAttemptTimeout = 10;\n    }\n  } else {\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\n  }\n\n  // If host is an IP\x2C skip performing a lookup\n  const addressType = isIP(host);\n  if (addressType) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\n      if (self.connecting)\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n    });\n    return;\n  }\n\n  if (options.lookup != null)\n    validateFunction(options.lookup\x2C 'options.lookup');\n\n  if (dns === undefined) dns = require('dns');\n  const dnsopts = {\n    family: socketToDnsFamily(options.family)\x2C\n    hints: options.hints || 0\x2C\n  };\n\n  if (!isWindows &&\n      dnsopts.family !== 4 &&\n      dnsopts.family !== 6 &&\n      dnsopts.hints === 0) {\n    dnsopts.hints = dns.ADDRCONFIG;\n  }\n\n  debug('connect: find host'\x2C host);\n  debug('connect: dns options'\x2C dnsopts);\n  self._host = host;\n  const lookup = options.lookup || dns.lookup;\n\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\n    debug('connect: autodetecting');\n\n    dnsopts.all = true;\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n      lookupAndConnectMultiple(\n        self\x2C\n        async_id_symbol\x2C\n        lookup\x2C\n        host\x2C\n        options\x2C\n        dnsopts\x2C\n        port\x2C\n        localAddress\x2C\n        localPort\x2C\n        autoSelectFamilyAttemptTimeout\x2C\n      );\n    });\n\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) return;\n\n      if (err) {\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if ((typeof ip !== 'string') || !isIP(ip)) {\n        err = new ERR_INVALID_IP_ADDRESS(ip);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else if (addressType !== 4 && addressType !== 6) {\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\n                                             options.host\x2C\n                                             options.port);\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n      } else {\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\n        );\n      }\n    });\n  });\n}\n\nfunction lookupAndConnectMultiple(\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\n) {\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\n      // It's possible we were destroyed while looking this up.\n      // XXX it would be great if we could cancel the promise returned by\n      // the look up.\n      if (!self.connecting) {\n        return;\n      } else if (err) {\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\n\n        // net.createConnection() creates a net.Socket object and immediately\n        // calls net.Socket.connect() on it (that's us). There are no event\n        // listeners registered yet so defer the error event to the next tick.\n        process.nextTick(connectErrorNT\x2C self\x2C err);\n        return;\n      }\n\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\n      // The first valid address determines which group has preference on the\n      // alternate family sorting which happens later.\n      const validAddresses = [[]\x2C []];\n      const validIps = [[]\x2C []];\n      let destinations;\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\n        const address = addresses[i];\n        const { address: ip\x2C family: addressType } = address;\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\n        // It's possible we were destroyed while looking this up.\n        if (!self.connecting) {\n          return;\n        }\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\n          destinations ||= addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\n\n          const destination = destinations[addressType];\n\n          // Only try an address once\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\n            ArrayPrototypePush(validIps[destination]\x2C ip);\n          }\n        }\n      }\n\n\n      // When no AAAA or A records are available\x2C fail on the first one\n      if (!validAddresses[0].length && !validAddresses[1].length) {\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\n\n        if (!isIP(firstIp)) {\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\n                                               options.host\x2C\n                                               options.port);\n          process.nextTick(connectErrorNT\x2C self\x2C err);\n        }\n\n        return;\n      }\n\n      // Sort addresses alternating families\n      const toAttempt = [];\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\n        if (i in validAddresses[0]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\n        }\n        if (i in validAddresses[1]) {\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\n        }\n      }\n\n      if (toAttempt.length === 1) {\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\n        const { address: ip\x2C family: addressType } = toAttempt[0];\n\n        self._unrefTimer();\n        defaultTriggerAsyncIdScope(\n          self[async_id_symbol]\x2C\n          internalConnect\x2C\n          self\x2C\n          ip\x2C\n          port\x2C\n          addressType\x2C\n          localAddress\x2C\n          localPort\x2C\n        );\n\n        return;\n      }\n\n      self.autoSelectFamilyAttemptedAddresses = [];\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\n\n      const context = {\n        socket: self\x2C\n        addresses: toAttempt\x2C\n        current: 0\x2C\n        port\x2C\n        localPort\x2C\n        timeout\x2C\n        [kTimeout]: null\x2C\n        errors: []\x2C\n      };\n\n      self._unrefTimer();\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\n    });\n  });\n}\n\nfunction connectErrorNT(self\x2C err) {\n  self.destroy(err);\n}\n\n\nSocket.prototype.ref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.ref);\n    return this;\n  }\n\n  if (typeof this._handle.ref === 'function') {\n    this._handle.ref();\n  }\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  if (!this._handle) {\n    this.once('connect'\x2C this.unref);\n    return this;\n  }\n\n  if (typeof this._handle.unref === 'function') {\n    this._handle.unref();\n  }\n\n  return this;\n};\n\n\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\n  const self = handle[owner_symbol];\n\n  // Callback may come after call to destroy\n  if (self.destroyed) {\n    return;\n  }\n\n  debug('afterConnect');\n\n  assert(self.connecting);\n  self.connecting = false;\n  self._sockname = null;\n\n  if (status === 0) {\n    if (self.readable && !readable) {\n      self.push(null);\n      self.read();\n    }\n    if (self.writable && !writable) {\n      self.end();\n    }\n    self._unrefTimer();\n\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\n      self._handle.setNoDelay(true);\n    }\n\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\n    }\n\n    self.emit('connect');\n    self.emit('ready');\n\n    // Start the first read\x2C or get an immediate EOF.\n    // this doesn't actually consume any bytes\x2C because len=0.\n    if (readable && !self.isPaused())\n      self.read(0);\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\n    }\n  } else {\n    let details;\n    if (req.localAddress && req.localPort) {\n      details = req.localAddress + ':' + req.localPort;\n    }\n    const ex = new ExceptionWithHostPort(status\x2C\n                                         'connect'\x2C\n                                         req.address\x2C\n                                         req.port\x2C\n                                         details);\n    if (details) {\n      ex.localAddress = req.localAddress;\n      ex.localPort = req.localPort;\n    }\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n    self.destroy(ex);\n  }\n}\n\nfunction addClientAbortSignalOption(self\x2C options) {\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  let disposable;\n\n  function onAbort() {\n    disposable?.[SymbolDispose]();\n    self._aborted = true;\n  }\n\n  if (signal.aborted) {\n    process.nextTick(onAbort);\n  } else {\n    process.nextTick(() => {\n      disposable = addAbortListener(signal\x2C onAbort);\n    });\n  }\n}\n\nfunction createConnectionError(req\x2C status) {\n  let details;\n\n  if (req.localAddress && req.localPort) {\n    details = req.localAddress + ':' + req.localPort;\n  }\n\n  const ex = new ExceptionWithHostPort(status\x2C\n                                       'connect'\x2C\n                                       req.address\x2C\n                                       req.port\x2C\n                                       details);\n  if (details) {\n    ex.localAddress = req.localAddress;\n    ex.localPort = req.localPort;\n  }\n\n  return ex;\n}\n\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\n\n  // Make sure another connection is not spawned\n  clearTimeout(context[kTimeout]);\n\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\n  if (status === 0 && current !== context.current - 1) {\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\n    handle.close();\n    return;\n  }\n\n  const self = context.socket;\n\n  // Some error occurred\x2C add to the list of exceptions\n  if (status !== 0) {\n    const ex = createConnectionError(req\x2C status);\n    ArrayPrototypePush(context.errors\x2C ex);\n\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\n\n    // Try the next address\x2C unless we were aborted\n    if (context.socket.connecting) {\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\n    }\n\n    return;\n  }\n\n  if (hasObserver('net')) {\n    startPerf(\n      self\x2C\n      kPerfHooksNetConnectContext\x2C\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\n    );\n  }\n\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\n}\n\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\n\n  req.oncomplete = undefined;\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\n  handle.close();\n\n  // Try the next address\x2C unless we were aborted\n  if (context.socket.connecting) {\n    internalConnectMultiple(context);\n  }\n}\n\nfunction addServerAbortSignalOption(self\x2C options) {\n  if (options?.signal === undefined) {\n    return;\n  }\n  validateAbortSignal(options.signal\x2C 'options.signal');\n  const { signal } = options;\n  const onAborted = () => {\n    self.close();\n  };\n  if (signal.aborted) {\n    process.nextTick(onAborted);\n  } else {\n    const disposable = addAbortListener(signal\x2C onAborted);\n    self.once('close'\x2C disposable[SymbolDispose]);\n  }\n}\n\nfunction Server(options\x2C connectionListener) {\n  if (!(this instanceof Server))\n    return new Server(options\x2C connectionListener);\n\n  EventEmitter.call(this);\n\n  if (typeof options === 'function') {\n    connectionListener = options;\n    options = kEmptyObject;\n    this.on('connection'\x2C connectionListener);\n  } else if (options == null || typeof options === 'object') {\n    options = { ...options };\n\n    if (typeof connectionListener === 'function') {\n      this.on('connection'\x2C connectionListener);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n  }\n  if (options.keepAliveInitialDelay !== undefined) {\n    validateNumber(\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\n    );\n\n    if (options.keepAliveInitialDelay < 0) {\n      options.keepAliveInitialDelay = 0;\n    }\n  }\n  if (options.highWaterMark !== undefined) {\n    validateNumber(\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\n    );\n\n    if (options.highWaterMark < 0) {\n      options.highWaterMark = getDefaultHighWaterMark();\n    }\n  }\n\n  this._connections = 0;\n\n  this[async_id_symbol] = -1;\n  this._handle = null;\n  this._usingWorkers = false;\n  this._workers = [];\n  this._unref = false;\n  this._listeningId = 1;\n\n  this.allowHalfOpen = options.allowHalfOpen || false;\n  this.pauseOnConnect = !!options.pauseOnConnect;\n  this.noDelay = Boolean(options.noDelay);\n  this.keepAlive = Boolean(options.keepAlive);\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\n  if (options.blockList) {\n    if (!module.exports.BlockList.isBlockList(options.blockList)) {\n      throw new ERR_INVALID_ARG_TYPE('options.blockList'\x2C 'net.BlockList'\x2C options.blockList);\n    }\n    this.blockList = options.blockList;\n  }\n}\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Server\x2C EventEmitter);\n\n\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\n\n// Returns handle if it can be created\x2C or error code if it can't\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  let err = 0;\n  // Assign handle in listen\x2C and clean up if bind or listen fails\n  let handle;\n\n  let isTCP = false;\n  if (typeof fd === 'number' && fd >= 0) {\n    try {\n      handle = createHandle(fd\x2C true);\n    } catch (e) {\n      // Not a fd we can listen on.  This will trigger an error.\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\n      return UV_EINVAL;\n    }\n\n    err = handle.open(fd);\n    if (err)\n      return err;\n\n    assert(!address && !port);\n  } else if (port === -1 && addressType === -1) {\n    handle = new Pipe(PipeConstants.SERVER);\n    if (isWindows) {\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\n      if (!NumberIsNaN(instances)) {\n        handle.setPendingInstances(instances);\n      }\n    }\n  } else {\n    handle = new TCP(TCPConstants.SERVER);\n    isTCP = true;\n  }\n\n  if (address || port || isTCP) {\n    debug('bind to'\x2C address || 'any');\n    if (!address) {\n      // Try binding to ipv6 first\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\n      if (err) {\n        handle.close();\n        // Fallback to ipv4\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port\x2C undefined\x2C undefined\x2C flags);\n      }\n    } else if (addressType === 6) {\n      err = handle.bind6(address\x2C port\x2C flags);\n    } else {\n      err = handle.bind(address\x2C port\x2C flags);\n    }\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\n\n  // If there is not yet a handle\x2C we need to create one and bind.\n  // In the case of a server sent via IPC\x2C we don't need to do this.\n  if (this._handle) {\n    debug('setupListenHandle: have a handle already');\n  } else {\n    debug('setupListenHandle: create a handle');\n\n    let rval = null;\n\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\n    if (!address && typeof fd !== 'number') {\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\n\n      if (typeof rval === 'number') {\n        rval = null;\n        address = DEFAULT_IPV4_ADDR;\n        addressType = 4;\n      } else {\n        address = DEFAULT_IPV6_ADDR;\n        addressType = 6;\n      }\n    }\n\n    if (rval === null)\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n    if (typeof rval === 'number') {\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\n\n      if (netServerListen.hasSubscribers) {\n        netServerListen.error.publish({ server: this\x2C error });\n      }\n\n      process.nextTick(emitErrorNT\x2C this\x2C error);\n      return;\n    }\n    this._handle = rval;\n  }\n\n  this[async_id_symbol] = getNewAsyncId(this._handle);\n  this._handle.onconnection = onconnection;\n  this._handle[owner_symbol] = this;\n\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\n  // which will thus give us a backlog of 512 entries.\n  const err = this._handle.listen(backlog || 511);\n\n  if (err) {\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\n    this._handle.close();\n    this._handle = null;\n\n    if (netServerListen.hasSubscribers) {\n      netServerListen.error.publish({ server: this\x2C error: ex });\n    }\n\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               emitErrorNT\x2C\n                               this\x2C\n                               ex);\n    return;\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncEnd.publish({ server: this });\n  }\n\n  // Generate connection key\x2C this should be unique to the connection\n  this._connectionKey = addressType + ':' + address + ':' + port;\n\n  // Unref the handle if the server was unref'ed prior to listening\n  if (this._unref)\n    this.unref();\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitListeningNT\x2C\n                             this);\n}\n\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\n\nfunction emitErrorNT(self\x2C err) {\n  self.emit('error'\x2C err);\n}\n\n\nfunction emitListeningNT(self) {\n  // Ensure handle hasn't closed\n  if (self._handle)\n    self.emit('listening');\n}\n\n\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\n  exclusive = !!exclusive;\n\n  if (cluster === undefined) cluster = require('cluster');\n\n  if (cluster.isPrimary || exclusive) {\n    // Will create a new handle\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n    return;\n  }\n\n  const serverQuery = {\n    address: address\x2C\n    port: port\x2C\n    addressType: addressType\x2C\n    fd: fd\x2C\n    flags\x2C\n    backlog\x2C\n    ...options\x2C\n  };\n  const listeningId = server._listeningId;\n  // Get the primary's server handle\x2C and listen on it\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\n  function listenOnPrimaryHandle(err\x2C handle) {\n    if (listeningId !== server._listeningId) {\n      handle.close();\n      return;\n    }\n    err = checkBindError(err\x2C port\x2C handle);\n\n    if (err) {\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\n      return server.emit('error'\x2C ex);\n    }\n    // If there was a handle\x2C just close it to avoid fd leak\n    // but it doesn't look like that's going to happen right now\n    if (server._handle) {\n      server._handle.close();\n    }\n    // Reuse primary's server handle\n    server._handle = handle;\n    // _listen2 sets up the listened handle\x2C it is still named like this\n    // to avoid breaking code that wraps this method\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\n  }\n}\n\n\nServer.prototype.listen = function(...args) {\n  const normalized = normalizeArgs(args);\n  let options = normalized[0];\n  const cb = normalized[1];\n\n  if (this._handle) {\n    throw new ERR_SERVER_ALREADY_LISTEN();\n  }\n\n  if (netServerListen.hasSubscribers) {\n    netServerListen.asyncStart.publish({ server: this\x2C options });\n  }\n\n  if (cb !== null) {\n    this.once('listening'\x2C cb);\n  }\n  const backlogFromArgs =\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\n    toNumber(args.length > 1 && args[1]) ||\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\n\n  options = options._handle || options.handle || options;\n  const flags = getFlags(options);\n  //  Refresh the id to make the previous call invalid\n  this._listeningId++;\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\n  if (options instanceof TCP) {\n    this._handle = options;\n    this[async_id_symbol] = this._handle.getAsyncId();\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs\x2C undefined\x2C true);\n    return this;\n  }\n  addServerAbortSignalOption(this\x2C options);\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\n  if (typeof options.fd === 'number' && options.fd >= 0) {\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\n    return this;\n  }\n\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\n  // null\x2C bind to an arbitrary unused port\n  if (args.length === 0 || typeof args[0] === 'function' ||\n      (options.port === undefined && 'port' in options) ||\n      options.port === null) {\n    options.port = 0;\n  }\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\n  // or (options[\x2C cb]) where options.port is specified\n  // or if options.port is normalized as 0 before\n  let backlog;\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\n    validatePort(options.port\x2C 'options.port');\n    backlog = options.backlog || backlogFromArgs;\n    if (options.reusePort === true) {\n      options.exclusive = true;\n    }\n    // start TCP server listening on host:port\n    if (options.host) {\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\n                      options.exclusive\x2C flags);\n    } else { // Undefined host\x2C listens on unspecified address\n      // Default addressType 4 will be used to search for primary server\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\n                      backlog\x2C undefined\x2C options.exclusive\x2C flags);\n    }\n    return this;\n  }\n\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\n  // where path or options.path is a UNIX domain socket or Windows pipe\n  if (options.path && isPipeName(options.path)) {\n    // We can not call fchmod on abstract unix socket\n    if (options.path[0] === '\\0' &&\n        (options.readableAll || options.writableAll)) {\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\n    }\n    const pipeName = this._pipeName = options.path;\n    backlog = options.backlog || backlogFromArgs;\n    listenInCluster(this\x2C\n                    pipeName\x2C\n                    -1\x2C\n                    -1\x2C\n                    backlog\x2C\n                    undefined\x2C\n                    options.exclusive\x2C\n                    undefined\x2C\n                    {\n                      readableAll: options.readableAll\x2C\n                      writableAll: options.writableAll\x2C\n                    });\n\n    if (!this._handle) {\n      // Failed and an error shall be emitted in the next tick.\n      // Therefore\x2C we directly return.\n      return this;\n    }\n\n    let mode = 0;\n    if (options.readableAll === true)\n      mode |= PipeConstants.UV_READABLE;\n    if (options.writableAll === true)\n      mode |= PipeConstants.UV_WRITABLE;\n    if (mode !== 0) {\n      const err = this._handle.fchmod(mode);\n      if (err) {\n        this._handle.close();\n        this._handle = null;\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\n      }\n    }\n    return this;\n  }\n\n  if (!(('port' in options) || ('path' in options))) {\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\n                                    'must have the property "port" or "path"');\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\n};\n\nfunction isIpv6LinkLocal(ip) {\n  if (!isIPv6(ip)) { return false; }\n\n  const ipv6Buffer = convertIpv6StringToBuffer(ip);\n  const firstByte = ipv6Buffer[0];  // The first 8 bits\n  const secondByte = ipv6Buffer[1]; // The next 8 bits\n\n  // The link-local prefix is `1111111010`\x2C which in hexadecimal is `fe80`\n  // First 8 bits (firstByte) should be `11111110` (0xfe)\n  // The next 2 bits of the second byte should be `10` (0x80)\n\n  const isFirstByteCorrect = (firstByte === 0xfe); // 0b11111110 == 0xfe\n  const isSecondByteCorrect = (secondByte & 0xc0) === 0x80; // 0b10xxxxxx == 0x80\n\n  return isFirstByteCorrect && isSecondByteCorrect;\n}\n\nfunction filterOnlyValidAddress(addresses) {\n  // Return the first non IPV6 link-local address if present\n  for (const address of addresses) {\n    if (!isIpv6LinkLocal(address.address)) {\n      return address;\n    }\n  }\n\n  // Otherwise return the first address\n  return addresses[0];\n}\n\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\n                         exclusive\x2C flags) {\n  if (dns === undefined) dns = require('dns');\n  const listeningId = self._listeningId;\n\n  dns.lookup(address\x2C { all: true }\x2C (err\x2C addresses) => {\n    if (listeningId !== self._listeningId) {\n      return;\n    }\n    if (err) {\n      self.emit('error'\x2C err);\n    } else {\n      const validAddress = filterOnlyValidAddress(addresses);\n      const family = validAddress?.family || 4;\n\n      listenInCluster(self\x2C validAddress.address\x2C port\x2C family\x2C\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\n    }\n  });\n}\n\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\n  __proto__: null\x2C\n  get: function() {\n    return !!this._handle;\n  }\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n});\n\nServer.prototype.address = function() {\n  if (this._handle?.getsockname) {\n    const out = {};\n    const err = this._handle.getsockname(out);\n    if (err) {\n      throw new ErrnoException(err\x2C 'address');\n    }\n    return out;\n  } else if (this._pipeName) {\n    return this._pipeName;\n  }\n  return null;\n};\n\nfunction onconnection(err\x2C clientHandle) {\n  const handle = this;\n  const self = handle[owner_symbol];\n\n  debug('onconnection');\n\n  if (err) {\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\n    return;\n  }\n\n  if (self.maxConnections != null && self._connections >= self.maxConnections) {\n    if (clientHandle.getsockname || clientHandle.getpeername) {\n      const data = { __proto__: null };\n      if (clientHandle.getsockname) {\n        const localInfo = { __proto__: null };\n        clientHandle.getsockname(localInfo);\n        data.localAddress = localInfo.address;\n        data.localPort = localInfo.port;\n        data.localFamily = localInfo.family;\n      }\n      if (clientHandle.getpeername) {\n        const remoteInfo = { __proto__: null };\n        clientHandle.getpeername(remoteInfo);\n        data.remoteAddress = remoteInfo.address;\n        data.remotePort = remoteInfo.port;\n        data.remoteFamily = remoteInfo.family;\n      }\n      self.emit('drop'\x2C data);\n    } else {\n      self.emit('drop');\n    }\n    clientHandle.close();\n    return;\n  }\n  if (self.blockList && typeof clientHandle.getpeername === 'function') {\n    const remoteInfo = { __proto__: null };\n    clientHandle.getpeername(remoteInfo);\n    const addressType = isIP(remoteInfo.address);\n    if (addressType && self.blockList.check(remoteInfo.address\x2C `ipv${addressType}`)) {\n      clientHandle.close();\n      return;\n    }\n  }\n  const socket = new Socket({\n    handle: clientHandle\x2C\n    allowHalfOpen: self.allowHalfOpen\x2C\n    pauseOnCreate: self.pauseOnConnect\x2C\n    readable: true\x2C\n    writable: true\x2C\n    readableHighWaterMark: self.highWaterMark\x2C\n    writableHighWaterMark: self.highWaterMark\x2C\n  });\n\n  if (self.noDelay && clientHandle.setNoDelay) {\n    socket[kSetNoDelay] = true;\n    clientHandle.setNoDelay(true);\n  }\n  if (self.keepAlive && clientHandle.setKeepAlive) {\n    socket[kSetKeepAlive] = true;\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\n  }\n\n  self._connections++;\n  socket.server = self;\n  socket._server = self;\n  self.emit('connection'\x2C socket);\n  if (netServerSocketChannel.hasSubscribers) {\n    netServerSocketChannel.publish({\n      socket\x2C\n    });\n  }\n}\n\n/**\n * Gets the number of concurrent connections on the server\n * @param {Function} cb\n * @returns {Server}\n */\n\nServer.prototype.getConnections = function(cb) {\n  const self = this;\n\n  function end(err\x2C connections) {\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\n                               process.nextTick\x2C\n                               cb\x2C\n                               err\x2C\n                               connections);\n  }\n\n  if (!this._usingWorkers) {\n    end(null\x2C this._connections);\n    return this;\n  }\n\n  // Poll workers\n  let left = this._workers.length;\n  let total = this._connections;\n\n  function oncount(err\x2C count) {\n    if (err) {\n      left = -1;\n      return end(err);\n    }\n\n    total += count;\n    if (--left === 0) return end(null\x2C total);\n  }\n\n  for (let n = 0; n < this._workers.length; n++) {\n    this._workers[n].getConnections(oncount);\n  }\n\n  return this;\n};\n\n\nServer.prototype.close = function(cb) {\n  this._listeningId++;\n  if (typeof cb === 'function') {\n    if (!this._handle) {\n      this.once('close'\x2C function close() {\n        cb(new ERR_SERVER_NOT_RUNNING());\n      });\n    } else {\n      this.once('close'\x2C cb);\n    }\n  }\n\n  if (this._handle) {\n    this._handle.close();\n    this._handle = null;\n  }\n\n  if (this._usingWorkers) {\n    let left = this._workers.length;\n    const onWorkerClose = () => {\n      if (--left !== 0) return;\n\n      this._connections = 0;\n      this._emitCloseIfDrained();\n    };\n\n    // Increment connections to be sure that\x2C even if all sockets will be closed\n    // during polling of workers\x2C `close` event will be emitted only once.\n    this._connections++;\n\n    // Poll workers\n    for (let n = 0; n < this._workers.length; n++)\n      this._workers[n].close(onWorkerClose);\n  } else {\n    this._emitCloseIfDrained();\n  }\n\n  return this;\n};\n\nServer.prototype[SymbolAsyncDispose] = async function() {\n  if (!this._handle) {\n    return;\n  }\n  await FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\nServer.prototype._emitCloseIfDrained = function() {\n  debug('SERVER _emitCloseIfDrained');\n\n  if (this._handle || this._connections) {\n    debug('SERVER handle? %j   connections? %d'\x2C\n          !!this._handle\x2C this._connections);\n    return;\n  }\n\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             emitCloseNT\x2C\n                             this);\n};\n\n\nfunction emitCloseNT(self) {\n  debug('SERVER: emit close');\n  self.emit('close');\n}\n\n\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\n  err\x2C event\x2C sock) {\n\n  switch (event) {\n    case 'connection':\n      sock.destroy(err);\n      break;\n    default:\n      this.emit('error'\x2C err);\n  }\n};\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get() { return this[kHandle]; }\x2C\n  set(v) { return this[kHandle] = v; }\x2C\n});\n\nServer.prototype._setupWorker = function(socketList) {\n  this._usingWorkers = true;\n  this._workers.push(socketList);\n  socketList.once('exit'\x2C (socketList) => {\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\n    this._workers.splice(index\x2C 1);\n  });\n};\n\nServer.prototype.ref = function() {\n  this._unref = false;\n\n  if (this._handle)\n    this._handle.ref();\n\n  return this;\n};\n\nServer.prototype.unref = function() {\n  this._unref = true;\n\n  if (this._handle)\n    this._handle.unref();\n\n  return this;\n};\n\nmodule.exports = {\n  _createServerHandle: createServerHandle\x2C\n  _normalizeArgs: normalizeArgs\x2C\n  get BlockList() {\n    BlockList ??= require('internal/blocklist').BlockList;\n    return BlockList;\n  }\x2C\n  get SocketAddress() {\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\n    return SocketAddress;\n  }\x2C\n  connect\x2C\n  createConnection: connect\x2C\n  createServer\x2C\n  isIP: isIP\x2C\n  isIPv4: isIPv4\x2C\n  isIPv6: isIPv6\x2C\n  Server\x2C\n  Socket\x2C\n  Stream: Socket\x2C // Legacy naming\n  getDefaultAutoSelectFamily\x2C\n  setDefaultAutoSelectFamily\x2C\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\n};\n
code-source-info,0x277c96e83be8,81,0,69770,C0O0C4O69770,,
code-creation,JS,9,26250,0x277c96e84fd0,3704, node:net:1:1,0x7143c2c680,~
code-source-info,0x277c96e84fd
tick,0x1937c89b8,26333,0,0x0,9,0x148000544,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
tick,0x101743638,26375,0,0x0,0,0x148000544,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,26500,0x277c96e86268,5, node:stream:1:1,0x7143c307e0,~
script-source,82,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ObjectDefineProperty\x2C\n  ObjectKeys\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst {\n  promisify: { custom: customPromisify }\x2C\n} = require('internal/util');\n\nconst {\n  streamReturningOperators\x2C\n  promiseReturningOperators\x2C\n} = require('internal/streams/operators');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\nconst compose = require('internal/streams/compose');\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\nconst { pipeline } = require('internal/streams/pipeline');\nconst { destroyer } = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\nconst internalBuffer = require('internal/buffer');\n\nconst promises = require('stream/promises');\nconst utils = require('internal/streams/utils');\nconst { isArrayBufferView\x2C isUint8Array } = require('internal/util/types');\n\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\n\nStream.isDestroyed = utils.isDestroyed;\nStream.isDisturbed = utils.isDisturbed;\nStream.isErrored = utils.isErrored;\nStream.isReadable = utils.isReadable;\nStream.isWritable = utils.isWritable;\n\nStream.Readable = require('internal/streams/readable');\nconst streamKeys = ObjectKeys(streamReturningOperators);\nfor (let i = 0; i < streamKeys.length; i++) {\n  const key = streamKeys[i];\n  const op = streamReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nconst promiseKeys = ObjectKeys(promiseReturningOperators);\nfor (let i = 0; i < promiseKeys.length; i++) {\n  const key = promiseKeys[i];\n  const op = promiseReturningOperators[key];\n  function fn(...args) {\n    if (new.target) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    return ReflectApply(op\x2C this\x2C args);\n  }\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\n    __proto__: null\x2C\n    value: fn\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    writable: true\x2C\n  });\n}\nStream.Writable = require('internal/streams/writable');\nStream.Duplex = require('internal/streams/duplex');\nStream.Transform = require('internal/streams/transform');\nStream.PassThrough = require('internal/streams/passthrough');\nStream.duplexPair = require('internal/streams/duplexpair');\nStream.pipeline = pipeline;\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\nStream.addAbortSignal = addAbortSignal;\nStream.finished = eos;\nStream.destroy = destroyer;\nStream.compose = compose;\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\n\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\n  __proto__: null\x2C\n  configurable: true\x2C\n  enumerable: true\x2C\n  get() {\n    return promises;\n  }\x2C\n});\n\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.pipeline;\n  }\x2C\n});\n\nObjectDefineProperty(eos\x2C customPromisify\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  get() {\n    return promises.finished;\n  }\x2C\n});\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream._isArrayBufferView = isArrayBufferView;\nStream._isUint8Array = isUint8Array;\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\n                                       chunk.byteOffset\x2C\n                                       chunk.byteLength);\n};\n
code-source-info,0x277c96e86268,82,0,5095,C0O0C4O5095,,
code-creation,JS,9,26666,0x277c96e865e0,1023, node:stream:1:1,0x7143c30990,~
code-source-info,0x277c96e865e
code-creation,Eval,9,26916,0x277c96e86be0,5, node:internal/streams/operators:1:1,0x7143c32180,~
script-source,83,node:internal/streams/operators,'use strict';\n\nconst {\n  ArrayPrototypePush\x2C\n  Boolean\x2C\n  MathFloor\x2C\n  Number\x2C\n  NumberIsNaN\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateAbortSignal\x2C\n  validateInteger\x2C\n  validateObject\x2C\n} = require('internal/validators');\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\nconst { finished } = require('internal/streams/end-of-stream');\nconst staticCompose = require('internal/streams/compose');\nconst {\n  addAbortSignalNoValidate\x2C\n} = require('internal/streams/add-abort-signal');\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\n\nconst kEmpty = Symbol('kEmpty');\nconst kEof = Symbol('kEof');\n\nfunction compose(stream\x2C options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  if (isNodeStream(stream) && !isWritable(stream)) {\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\n  }\n\n  const composedStream = staticCompose(this\x2C stream);\n\n  if (options?.signal) {\n    // Not validating as we already validated before\n    addAbortSignalNoValidate(\n      options.signal\x2C\n      composedStream\x2C\n    );\n  }\n\n  return composedStream;\n}\n\nfunction map(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let concurrency = 1;\n  if (options?.concurrency != null) {\n    concurrency = MathFloor(options.concurrency);\n  }\n\n  let highWaterMark = concurrency - 1;\n  if (options?.highWaterMark != null) {\n    highWaterMark = MathFloor(options.highWaterMark);\n  }\n\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\n\n  highWaterMark += concurrency;\n\n  return async function* map() {\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\n    const stream = this;\n    const queue = [];\n    const signalOpt = { signal };\n\n    let next;\n    let resume;\n    let done = false;\n    let cnt = 0;\n\n    function onCatch() {\n      done = true;\n      afterItemProcessed();\n    }\n\n    function afterItemProcessed() {\n      cnt -= 1;\n      maybeResume();\n    }\n\n    function maybeResume() {\n      if (\n        resume &&\n        !done &&\n        cnt < concurrency &&\n        queue.length < highWaterMark\n      ) {\n        resume();\n        resume = null;\n      }\n    }\n\n    async function pump() {\n      try {\n        for await (let val of stream) {\n          if (done) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          try {\n            val = fn(val\x2C signalOpt);\n\n            if (val === kEmpty) {\n              continue;\n            }\n\n            val = PromiseResolve(val);\n          } catch (err) {\n            val = PromiseReject(err);\n          }\n\n          cnt += 1;\n\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n\n          queue.push(val);\n          if (next) {\n            next();\n            next = null;\n          }\n\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\n            await new Promise((resolve) => {\n              resume = resolve;\n            });\n          }\n        }\n        queue.push(kEof);\n      } catch (err) {\n        const val = PromiseReject(err);\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\n        queue.push(val);\n      } finally {\n        done = true;\n        if (next) {\n          next();\n          next = null;\n        }\n      }\n    }\n\n    pump();\n\n    try {\n      while (true) {\n        while (queue.length > 0) {\n          const val = await queue[0];\n\n          if (val === kEof) {\n            return;\n          }\n\n          if (signal.aborted) {\n            throw new AbortError();\n          }\n\n          if (val !== kEmpty) {\n            yield val;\n          }\n\n          queue.shift();\n          maybeResume();\n        }\n\n        await new Promise((resolve) => {\n          next = resolve;\n        });\n      }\n    } finally {\n      done = true;\n      if (resume) {\n        resume();\n        resume = null;\n      }\n    }\n  }.call(this);\n}\n\nasync function some(fn\x2C options = undefined) {\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\n    return true;\n  }\n  return false;\n}\n\nasync function every(fn\x2C options = undefined) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\n  return !(await some.call(this\x2C async (...args) => {\n    return !(await fn(...args));\n  }\x2C options));\n}\n\nasync function find(fn\x2C options) {\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\n    return result;\n  }\n  return undefined;\n}\n\nasync function forEach(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function forEachFn(value\x2C options) {\n    await fn(value\x2C options);\n    return kEmpty;\n  }\n  // eslint-disable-next-line no-unused-vars\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\n}\n\nfunction filter(fn\x2C options) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\n  }\n  async function filterFn(value\x2C options) {\n    if (await fn(value\x2C options)) {\n      return value;\n    }\n    return kEmpty;\n  }\n  return map.call(this\x2C filterFn\x2C options);\n}\n\n// Specific to provide better error to reduce since the argument is only\n// missing if the stream has no items in it - but the code is still appropriate\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\n  constructor() {\n    super('reduce');\n    this.message = 'Reduce of an empty stream requires an initial value';\n  }\n}\n\nasync function reduce(reducer\x2C initialValue\x2C options) {\n  if (typeof reducer !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE(\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\n  }\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  let hasInitialValue = arguments.length > 1;\n  if (options?.signal?.aborted) {\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\n    this.once('error'\x2C () => {}); // The error is already propagated\n    await finished(this.destroy(err));\n    throw err;\n  }\n  const ac = new AbortController();\n  const signal = ac.signal;\n  if (options?.signal) {\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\n  }\n  let gotAnyItemFromStream = false;\n  try {\n    for await (const value of this) {\n      gotAnyItemFromStream = true;\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (!hasInitialValue) {\n        initialValue = value;\n        hasInitialValue = true;\n      } else {\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\n      }\n    }\n    if (!gotAnyItemFromStream && !hasInitialValue) {\n      throw new ReduceAwareErrMissingArgs();\n    }\n  } finally {\n    ac.abort();\n  }\n  return initialValue;\n}\n\nasync function toArray(options) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  const result = [];\n  for await (const val of this) {\n    if (options?.signal?.aborted) {\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\n    }\n    ArrayPrototypePush(result\x2C val);\n  }\n  return result;\n}\n\nfunction flatMap(fn\x2C options) {\n  const values = map.call(this\x2C fn\x2C options);\n  return async function* flatMap() {\n    for await (const val of values) {\n      yield* val;\n    }\n  }.call(this);\n}\n\nfunction toIntegerOrInfinity(number) {\n  // We coerce here to align with the spec\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\n  number = Number(number);\n  if (NumberIsNaN(number)) {\n    return 0;\n  }\n  if (number < 0) {\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\n  }\n  return number;\n}\n\nfunction drop(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* drop() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- <= 0) {\n        yield val;\n      }\n    }\n  }.call(this);\n}\n\nfunction take(number\x2C options = undefined) {\n  if (options != null) {\n    validateObject(options\x2C 'options');\n  }\n  if (options?.signal != null) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  number = toIntegerOrInfinity(number);\n  return async function* take() {\n    if (options?.signal?.aborted) {\n      throw new AbortError();\n    }\n    for await (const val of this) {\n      if (options?.signal?.aborted) {\n        throw new AbortError();\n      }\n      if (number-- > 0) {\n        yield val;\n      }\n\n      // Don't get another item from iterator in case we reached the end\n      if (number <= 0) {\n        return;\n      }\n    }\n  }.call(this);\n}\n\nmodule.exports.streamReturningOperators = {\n  drop\x2C\n  filter\x2C\n  flatMap\x2C\n  map\x2C\n  take\x2C\n  compose\x2C\n};\n\nmodule.exports.promiseReturningOperators = {\n  every\x2C\n  forEach\x2C\n  reduce\x2C\n  toArray\x2C\n  some\x2C\n  find\x2C\n};\n
code-source-info,0x277c96e86be0,83,0,10140,C0O0C4O10140,,
code-creation,JS,9,27166,0x277c96e87000,529, node:internal/streams/operators:1:1,0x7143c32450,~
code-source-info,0x277c96e87000,83,0,10140,C0O0C158O25C164O47C170O58C176O71C182O81C188O96C194O107C200O131C206O148C212O166C217O233C220O233C225O200C231O217C237O411C240O411C245O282C251O303C256O309C262O335C268O362C273O384C279O511C282O511C287O449C293O472C299O491C305O592C308O592C313O551C319O565C325O647C328O647C333O634C339O712C342O712C346O712C348O789C351O789C356O759C362O872C365O872C370O843C376O855C382O923C385O923C389O923C391O954C394O954C398O954C400O6176C421O6136C423O9939C435O9978C441O9986C447O9996C453O10007C459O10014C465O10022C471O9972C475O10042C487O10082C493O10091C499O10102C505O10112C511O10123C517O10131C523O10076C528O10139,,
code-creation,Eval,9,27375,0x277c96e87328,5, node:internal/abort_controller:1:1,0x7143c34800,~
script-source,84,node:internal/abort_controller,'use strict';\n\n// Modeled very closely on the AbortController implementation\n// in https://github.com/mysticatea/abort-controller (MIT license)\n\nconst {\n  ArrayPrototypePush\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  PromiseResolve\x2C\n  PromiseWithResolvers\x2C\n  SafeFinalizationRegistry\x2C\n  SafeSet\x2C\n  SafeWeakRef\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  defineEventHandler\x2C\n  EventTarget\x2C\n  Event\x2C\n  kTrustEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n  kResistStopPropagation\x2C\n  kWeakHandler\x2C\n} = require('internal/event_target');\nconst { kMaxEventTargetListeners } = require('events');\nconst {\n  customInspectSymbol\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_THIS\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  converters\x2C\n  createInterfaceConverter\x2C\n  createSequenceConverter\x2C\n} = require('internal/webidl');\n\nconst {\n  validateObject\x2C\n  validateUint32\x2C\n  kValidateObjectAllowObjects\x2C\n} = require('internal/validators');\n\nconst {\n  DOMException\x2C\n} = internalBinding('messaging');\n\nconst {\n  clearTimeout\x2C\n  setTimeout\x2C\n} = require('timers');\nconst assert = require('internal/assert');\n\nconst {\n  kDeserialize\x2C\n  kTransfer\x2C\n  kTransferList\x2C\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nlet _MessageChannel;\n\nconst kDontThrowSymbol = Symbol('kDontThrowSymbol');\n\n// Loading the MessageChannel and markTransferable have to be done lazily\n// because otherwise we'll end up with a require cycle that ends up with\n// an incomplete initialization of abort_controller.\n\nfunction lazyMessageChannel() {\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\n  return new _MessageChannel();\n}\n\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\nconst dependantSignalsCleanupRegistry = new SafeFinalizationRegistry((signalWeakRef) => {\n  const signal = signalWeakRef.deref();\n  if (signal === undefined) {\n    return;\n  }\n  signal[kDependantSignals].forEach((ref) => {\n    if (ref.deref() === undefined) {\n      signal[kDependantSignals].delete(ref);\n    }\n  });\n});\n\nconst gcPersistentSignals = new SafeSet();\n\nconst sourceSignalsCleanupRegistry = new SafeFinalizationRegistry(({ sourceSignalRef\x2C composedSignalRef }) => {\n  const composedSignal = composedSignalRef.deref();\n  if (composedSignal !== undefined) {\n    composedSignal[kSourceSignals].delete(sourceSignalRef);\n\n    if (composedSignal[kSourceSignals].size === 0) {\n      // This signal will no longer abort. There's no need to keep it in the gcPersistentSignals set.\n      gcPersistentSignals.delete(composedSignal);\n    }\n  }\n});\n\nconst kAborted = Symbol('kAborted');\nconst kReason = Symbol('kReason');\nconst kCloneData = Symbol('kCloneData');\nconst kTimeout = Symbol('kTimeout');\nconst kMakeTransferable = Symbol('kMakeTransferable');\nconst kComposite = Symbol('kComposite');\nconst kSourceSignals = Symbol('kSourceSignals');\nconst kDependantSignals = Symbol('kDependantSignals');\n\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\n  if (depth < 0)\n    return self;\n\n  const opts = ObjectAssign({}\x2C options\x2C {\n    depth: options.depth === null ? null : options.depth - 1\x2C\n  });\n\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\n}\n\nfunction validateThisAbortSignal(obj) {\n  if (obj?.[kAborted] === undefined)\n    throw new ERR_INVALID_THIS('AbortSignal');\n}\n\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\n// presence of the timer alone to keep the AbortSignal from being garbage\n// collected if it otherwise no longer accessible. We also don't want the\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\n// the AbortSignal in a WeakRef and have the setTimeout callback close\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\n// the created timer object. Separately\x2C we add the signal to a\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\n  const timeout = setTimeout(() => {\n    const signal = weakRef.deref();\n    if (signal !== undefined) {\n      gcPersistentSignals.delete(signal);\n      abortSignal(\n        signal\x2C\n        new DOMException(\n          'The operation was aborted due to timeout'\x2C\n          'TimeoutError'));\n    }\n  }\x2C delay);\n  timeout.unref();\n  return timeout;\n}\n\nclass AbortSignal extends EventTarget {\n\n  /**\n   * @param {symbol | undefined} dontThrowSymbol\n   * @param {{\n   *   aborted? : boolean\x2C\n   *   reason? : any\x2C\n   *   transferable? : boolean\x2C\n   *   composite? : boolean\x2C\n   * }} [init]\n   * @private\n   */\n  constructor(dontThrowSymbol = undefined\x2C init = kEmptyObject) {\n    if (dontThrowSymbol !== kDontThrowSymbol) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    super();\n\n    this[kMaxEventTargetListeners] = 0;\n    const {\n      aborted = false\x2C\n      reason = undefined\x2C\n      transferable = false\x2C\n      composite = false\x2C\n    } = init;\n    this[kAborted] = aborted;\n    this[kReason] = reason;\n    this[kComposite] = composite;\n    if (transferable) {\n      markTransferMode(this\x2C false\x2C true);\n    }\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get aborted() {\n    validateThisAbortSignal(this);\n    return !!this[kAborted];\n  }\n\n  /**\n   * @type {any}\n   */\n  get reason() {\n    validateThisAbortSignal(this);\n    return this[kReason];\n  }\n\n  throwIfAborted() {\n    validateThisAbortSignal(this);\n    if (this[kAborted]) {\n      throw this[kReason];\n    }\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      aborted: this.aborted\x2C\n    }\x2C depth\x2C options);\n  }\n\n  /**\n   * @param {any} [reason]\n   * @returns {AbortSignal}\n   */\n  static abort(\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    return new AbortSignal(kDontThrowSymbol\x2C { aborted: true\x2C reason });\n  }\n\n  /**\n   * @param {number} delay\n   * @returns {AbortSignal}\n   */\n  static timeout(delay) {\n    validateUint32(delay\x2C 'delay'\x2C false);\n    const signal = new AbortSignal(kDontThrowSymbol);\n    signal[kTimeout] = true;\n    clearTimeoutRegistry.register(\n      signal\x2C\n      setWeakAbortSignalTimeout(new SafeWeakRef(signal)\x2C delay));\n    return signal;\n  }\n\n  /**\n   * @param {AbortSignal[]} signals\n   * @returns {AbortSignal}\n   */\n  static any(signals) {\n    const signalsArray = converters['sequence<AbortSignal>'](\n      signals\x2C\n      { __proto__: null\x2C context: 'signals' }\x2C\n    );\n\n    const resultSignal = new AbortSignal(kDontThrowSymbol\x2C { composite: true });\n    if (!signalsArray.length) {\n      return resultSignal;\n    }\n\n    const resultSignalWeakRef = new SafeWeakRef(resultSignal);\n    resultSignal[kSourceSignals] = new SafeSet();\n\n    // Track if we have any timeout signals\n    let hasTimeoutSignals = false;\n\n    for (let i = 0; i < signalsArray.length; i++) {\n      const signal = signalsArray[i];\n\n      // Check if this is a timeout signal\n      if (signal[kTimeout]) {\n        hasTimeoutSignals = true;\n\n        // Add the timeout signal to gcPersistentSignals to keep it alive\n        // This is what the kNewListener method would do when adding abort listeners\n        gcPersistentSignals.add(signal);\n      }\n\n      if (signal.aborted) {\n        abortSignal(resultSignal\x2C signal.reason);\n        return resultSignal;\n      }\n\n      signal[kDependantSignals] ??= new SafeSet();\n      if (!signal[kComposite]) {\n        const signalWeakRef = new SafeWeakRef(signal);\n        resultSignal[kSourceSignals].add(signalWeakRef);\n        signal[kDependantSignals].add(resultSignalWeakRef);\n        dependantSignalsCleanupRegistry.register(resultSignal\x2C signalWeakRef);\n        sourceSignalsCleanupRegistry.register(signal\x2C {\n          sourceSignalRef: signalWeakRef\x2C\n          composedSignalRef: resultSignalWeakRef\x2C\n        });\n      } else if (!signal[kSourceSignals]) {\n        continue;\n      } else {\n        for (const sourceSignalWeakRef of signal[kSourceSignals]) {\n          const sourceSignal = sourceSignalWeakRef.deref();\n          if (!sourceSignal) {\n            continue;\n          }\n          assert(!sourceSignal.aborted);\n          assert(!sourceSignal[kComposite]);\n\n          if (resultSignal[kSourceSignals].has(sourceSignalWeakRef)) {\n            continue;\n          }\n          resultSignal[kSourceSignals].add(sourceSignalWeakRef);\n          sourceSignal[kDependantSignals].add(resultSignalWeakRef);\n          dependantSignalsCleanupRegistry.register(resultSignal\x2C sourceSignalWeakRef);\n          sourceSignalsCleanupRegistry.register(signal\x2C {\n            sourceSignalRef: sourceSignalWeakRef\x2C\n            composedSignalRef: resultSignalWeakRef\x2C\n          });\n        }\n      }\n    }\n\n    // If we have any timeout signals\x2C add the composite signal to gcPersistentSignals\n    if (hasTimeoutSignals && resultSignal[kSourceSignals].size > 0) {\n      gcPersistentSignals.add(resultSignal);\n    }\n\n    return resultSignal;\n  }\n\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal &&\n        type === 'abort' &&\n        !this.aborted &&\n        !weak &&\n        size === 1) {\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\n      // listener\x2C then we don't want it to be gc'd while the listener\n      // is attached and the timer still hasn't fired. So\x2C we retain a\n      // strong ref that is held for as long as the listener is registered.\n      gcPersistentSignals.add(this);\n    }\n  }\n\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\n      gcPersistentSignals.delete(this);\n    }\n  }\n\n  [kTransfer]() {\n    validateThisAbortSignal(this);\n    const aborted = this.aborted;\n    if (aborted) {\n      const reason = this.reason;\n      return {\n        data: { aborted\x2C reason }\x2C\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n      };\n    }\n\n    const { port1\x2C port2 } = this[kCloneData];\n    this[kCloneData] = undefined;\n\n    this.addEventListener('abort'\x2C () => {\n      port1.postMessage(this.reason);\n      port1.close();\n    }\x2C { once: true });\n\n    return {\n      data: { port: port2 }\x2C\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\n    };\n  }\n\n  [kTransferList]() {\n    if (!this.aborted) {\n      const { port1\x2C port2 } = lazyMessageChannel();\n      port1.unref();\n      port2.unref();\n      this[kCloneData] = {\n        port1\x2C\n        port2\x2C\n      };\n      return [port2];\n    }\n    return [];\n  }\n\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\n    if (aborted) {\n      this[kAborted] = aborted;\n      this[kReason] = reason;\n      return;\n    }\n\n    port.onmessage = ({ data }) => {\n      abortSignal(this\x2C data);\n      port.close();\n      port.onmessage = undefined;\n    };\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\n    // The unref() has to be called *after* setting the onmessage handler.\n    port.unref();\n  }\n}\n\nconverters.AbortSignal = createInterfaceConverter('AbortSignal'\x2C AbortSignal.prototype);\nconverters['sequence<AbortSignal>'] = createSequenceConverter(converters.AbortSignal);\n\nfunction ClonedAbortSignal() {\n  return new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n}\nClonedAbortSignal.prototype[kDeserialize] = () => {};\n\nObjectDefineProperties(AbortSignal.prototype\x2C {\n  aborted: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortSignal'\x2C\n});\n\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\n\n// https://dom.spec.whatwg.org/#dom-abortsignal-abort\nfunction abortSignal(signal\x2C reason) {\n  // 1. If signal is aborted\x2C then return.\n  if (signal[kAborted]) return;\n\n  // 2. Set signal's abort reason to reason if it is given;\n  //    otherwise to a new "AbortError" DOMException.\n  signal[kAborted] = true;\n  signal[kReason] = reason;\n\n  // 3. Let dependentSignalsToAbort be a new list.\n  const dependentSignalsToAbort = ObjectSetPrototypeOf([]\x2C null);\n\n  // 4. For each dependentSignal of signal's dependent signals:\n  signal[kDependantSignals]?.forEach((s) => {\n    const dependentSignal = s.deref();\n    // 1. If dependentSignal is not aborted\x2C then:\n    if (dependentSignal && !dependentSignal[kAborted]) {\n      // 1. Set dependentSignal's abort reason to signal's abort reason.\n      dependentSignal[kReason] = reason;\n      dependentSignal[kAborted] = true;\n      // 2. Append dependentSignal to dependentSignalsToAbort.\n      ArrayPrototypePush(dependentSignalsToAbort\x2C dependentSignal);\n    }\n  });\n\n  // 5. Run the abort steps for signal\n  runAbort(signal);\n\n  // 6. For each dependentSignal of dependentSignalsToAbort\x2C\n  //    run the abort steps for dependentSignal.\n  for (let i = 0; i < dependentSignalsToAbort.length; i++) {\n    const dependentSignal = dependentSignalsToAbort[i];\n    runAbort(dependentSignal);\n  }\n\n  // Clean up the signal from gcPersistentSignals\n  gcPersistentSignals.delete(signal);\n\n  // If this is a composite signal\x2C also remove all of its source signals from gcPersistentSignals\n  // when they get dereferenced from the signal's kSourceSignals set\n  if (signal[kComposite] && signal[kSourceSignals]) {\n    signal[kSourceSignals].forEach((sourceWeakRef) => {\n      const sourceSignal = sourceWeakRef.deref();\n      if (sourceSignal) {\n        gcPersistentSignals.delete(sourceSignal);\n      }\n    });\n  }\n}\n\n// To run the abort steps for an AbortSignal signal\nfunction runAbort(signal) {\n  const event = new Event('abort'\x2C {\n    [kTrustEvent]: true\x2C\n  });\n  signal.dispatchEvent(event);\n}\n\nclass AbortController {\n  #signal;\n\n  /**\n   * @type {AbortSignal}\n   */\n  get signal() {\n    this.#signal ??= new AbortSignal(kDontThrowSymbol);\n\n    return this.#signal;\n  }\n\n  /**\n   * @param {any} [reason]\n   */\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\n    abortSignal(this.#signal ??= new AbortSignal(kDontThrowSymbol)\x2C reason);\n  }\n\n  [customInspectSymbol](depth\x2C options) {\n    return customInspect(this\x2C {\n      signal: this.signal\x2C\n    }\x2C depth\x2C options);\n  }\n\n  static [kMakeTransferable]() {\n    const controller = new AbortController();\n    controller.#signal = new AbortSignal(kDontThrowSymbol\x2C { transferable: true });\n    return controller;\n  }\n}\n\n/**\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\n * @param {AbortSignal} signal\n * @returns {AbortSignal}\n */\nfunction transferableAbortSignal(signal) {\n  if (signal?.[kAborted] === undefined)\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\n  markTransferMode(signal\x2C false\x2C true);\n  return signal;\n}\n\n/**\n * Creates an AbortController with a transferable AbortSignal\n * @returns {AbortController}\n */\nfunction transferableAbortController() {\n  return AbortController[kMakeTransferable]();\n}\n\n/**\n * @param {AbortSignal} signal\n * @param {any} resource\n * @returns {Promise<void>}\n */\nasync function aborted(signal\x2C resource) {\n  converters.AbortSignal(signal\x2C { __proto__: null\x2C context: 'signal' });\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowObjects);\n  if (signal.aborted)\n    return PromiseResolve();\n  const abortPromise = PromiseWithResolvers();\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\n  return abortPromise.promise;\n}\n\nObjectDefineProperties(AbortController.prototype\x2C {\n  signal: kEnumerableProperty\x2C\n  abort: kEnumerableProperty\x2C\n});\n\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\n  __proto__: null\x2C\n  writable: false\x2C\n  enumerable: false\x2C\n  configurable: true\x2C\n  value: 'AbortController'\x2C\n});\n\nmodule.exports = {\n  AbortController\x2C\n  AbortSignal\x2C\n  ClonedAbortSignal\x2C\n  aborted\x2C\n  transferableAbortSignal\x2C\n  transferableAbortController\x2C\n};\n
code-source-info,0x277c96e87328,84,0,16475,C0O0C4O16475,,
code-creation,JS,9,27750,0x277c96e87a28,1222, node:internal/abort_controller:1:1,0x7143c34d00,~
code-source-info,0x277c96e87a
code-creation,JS,9,27791,0x277c96e880c8,11,AbortController node:internal/abort_controller:492:3,0x7143c356c8,~
code-source-info,0x277c96e880c8,84,14221,14228,C4O14221C10O14228,,
tick,0x19392ea9c,27791,0,0x0,9,0x148000544,0x1480002b4,0x277c96e870dc,0x148000610,0x1480002b4,0x277c96e8661d,0x148000610,0x1480002b4,0x277c96e852a4,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,28000,0x277c96e88148,5, node:internal/streams/end-of-stream:1:1,0x7143c37d68,~
script-source,85,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n  validateObject\x2C\n  validateBoolean\x2C\n} = require('internal/validators');\n\nconst {\n  isClosed\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n  isReadableErrored\x2C\n  isWritable\x2C\n  isWritableNodeStream\x2C\n  isWritableStream\x2C\n  isWritableFinished\x2C\n  isWritableErrored\x2C\n  isNodeStream\x2C\n  willEmitClose: _willEmitClose\x2C\n  kIsClosedPromise\x2C\n} = require('internal/streams/utils');\n\n// Lazy load\nlet AsyncLocalStorage;\nlet addAbortListener;\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nconst nop = () => {};\n\nfunction eos(stream\x2C options\x2C callback) {\n  if (arguments.length === 2) {\n    callback = options;\n    options = kEmptyObject;\n  } else if (options == null) {\n    options = kEmptyObject;\n  } else {\n    validateObject(options\x2C 'options');\n  }\n  validateFunction(callback\x2C 'callback');\n  validateAbortSignal(options.signal\x2C 'options.signal');\n\n  AsyncLocalStorage ??= require('async_hooks').AsyncLocalStorage;\n  callback = once(AsyncLocalStorage.bind(callback));\n\n  if (isReadableStream(stream) || isWritableStream(stream)) {\n    return eosWeb(stream\x2C options\x2C callback);\n  }\n\n  if (!isNodeStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n\n  const readable = options.readable ?? isReadableNodeStream(stream);\n  const writable = options.writable ?? isWritableNodeStream(stream);\n\n  const wState = stream._writableState;\n  const rState = stream._readableState;\n\n  const onlegacyfinish = () => {\n    if (!stream.writable) {\n      onfinish();\n    }\n  };\n\n  // TODO (ronag): Improve soft detection to include core modules and\n  // common ecosystem modules that do properly emit 'close' but fail\n  // this generic check.\n  let willEmitClose = (\n    _willEmitClose(stream) &&\n    isReadableNodeStream(stream) === readable &&\n    isWritableNodeStream(stream) === writable\n  );\n\n  let writableFinished = isWritableFinished(stream\x2C false);\n  const onfinish = () => {\n    writableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.readable || readable)) {\n      return;\n    }\n\n    if (!readable || readableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  let readableFinished = isReadableFinished(stream\x2C false);\n  const onend = () => {\n    readableFinished = true;\n    // Stream should not be destroyed here. If it is that\n    // means that user space is doing something differently and\n    // we cannot trust willEmitClose.\n    if (stream.destroyed) {\n      willEmitClose = false;\n    }\n\n    if (willEmitClose && (!stream.writable || writable)) {\n      return;\n    }\n\n    if (!writable || writableFinished) {\n      callback.call(stream);\n    }\n  };\n\n  const onerror = (err) => {\n    callback.call(stream\x2C err);\n  };\n\n  let closed = isClosed(stream);\n\n  const onclose = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\n      if (!isReadableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n    if (writable && !writableFinished) {\n      if (!isWritableFinished(stream\x2C false))\n        return callback.call(stream\x2C\n                             new ERR_STREAM_PREMATURE_CLOSE());\n    }\n\n    callback.call(stream);\n  };\n\n  const onclosed = () => {\n    closed = true;\n\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\n\n    if (errored && typeof errored !== 'boolean') {\n      return callback.call(stream\x2C errored);\n    }\n\n    callback.call(stream);\n  };\n\n  const onrequest = () => {\n    stream.req.on('finish'\x2C onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete'\x2C onfinish);\n    if (!willEmitClose) {\n      stream.on('abort'\x2C onclose);\n    }\n    if (stream.req) {\n      onrequest();\n    } else {\n      stream.on('request'\x2C onrequest);\n    }\n  } else if (writable && !wState) { // legacy streams\n    stream.on('end'\x2C onlegacyfinish);\n    stream.on('close'\x2C onlegacyfinish);\n  }\n\n  // Not all streams will emit 'close' after 'aborted'.\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\n    stream.on('aborted'\x2C onclose);\n  }\n\n  stream.on('end'\x2C onend);\n  stream.on('finish'\x2C onfinish);\n  if (options.error !== false) {\n    stream.on('error'\x2C onerror);\n  }\n  stream.on('close'\x2C onclose);\n\n  if (closed) {\n    process.nextTick(onclose);\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\n    if (!willEmitClose) {\n      process.nextTick(onclosed);\n    }\n  } else if (\n    !readable &&\n    (!willEmitClose || isReadable(stream)) &&\n    (writableFinished || isWritable(stream) === false) &&\n    (wState == null || wState.pendingcb === undefined || wState.pendingcb === 0)\n  ) {\n    process.nextTick(onclosed);\n  } else if (\n    !writable &&\n    (!willEmitClose || isWritable(stream)) &&\n    (readableFinished || isReadable(stream) === false)\n  ) {\n    process.nextTick(onclosed);\n  } else if ((rState && stream.req && stream.aborted)) {\n    process.nextTick(onclosed);\n  }\n\n  const cleanup = () => {\n    callback = nop;\n    stream.removeListener('aborted'\x2C onclose);\n    stream.removeListener('complete'\x2C onfinish);\n    stream.removeListener('abort'\x2C onclose);\n    stream.removeListener('request'\x2C onrequest);\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onlegacyfinish);\n    stream.removeListener('close'\x2C onlegacyfinish);\n    stream.removeListener('finish'\x2C onfinish);\n    stream.removeListener('end'\x2C onend);\n    stream.removeListener('error'\x2C onerror);\n    stream.removeListener('close'\x2C onclose);\n  };\n\n  if (options.signal && !closed) {\n    const abort = () => {\n      // Keep it because cleanup removes it.\n      const endCallback = callback;\n      cleanup();\n      endCallback.call(\n        stream\x2C\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n\n  return cleanup;\n}\n\nfunction eosWeb(stream\x2C options\x2C callback) {\n  let isAborted = false;\n  let abort = nop;\n  if (options.signal) {\n    abort = () => {\n      isAborted = true;\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\n    };\n    if (options.signal.aborted) {\n      process.nextTick(abort);\n    } else {\n      addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n      const disposable = addAbortListener(options.signal\x2C abort);\n      const originalCallback = callback;\n      callback = once((...args) => {\n        disposable[SymbolDispose]();\n        originalCallback.apply(stream\x2C args);\n      });\n    }\n  }\n  const resolverFn = (...args) => {\n    if (!isAborted) {\n      process.nextTick(() => callback.apply(stream\x2C args));\n    }\n  };\n  PromisePrototypeThen(\n    stream[kIsClosedPromise].promise\x2C\n    resolverFn\x2C\n    resolverFn\x2C\n  );\n  return nop;\n}\n\nfunction finished(stream\x2C opts) {\n  let autoCleanup = false;\n  if (opts === null) {\n    opts = kEmptyObject;\n  }\n  if (opts?.cleanup) {\n    validateBoolean(opts.cleanup\x2C 'cleanup');\n    autoCleanup = opts.cleanup;\n  }\n  return new Promise((resolve\x2C reject) => {\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\n      if (autoCleanup) {\n        cleanup();\n      }\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nmodule.exports = eos;\nmodule.exports.finished = finished;\n
code-source-info,0x277c96e88148,85,0,8611,C0O0C4O8611,,
code-creation,JS,9,28208,0x277c96e88368,359, node:internal/streams/end-of-stream:1:1,0x7143c38058,~
code-source-info,0x277c96e88368,85,0,8611,C0O0C123O147C129O158C135O182C141O315C147O315C152O225C158O246C163O252C169O278C175O379C181O379C186O353C192O369C198O497C204O497C209O415C215O438C221O458C227O476C233O825C239O825C244O540C250O552C256O566C262O590C268O610C274O632C280O653C286O667C292O691C298O711C304O733C310O754C316O785C322O803C328O878C329O878C331O901C332O901C334O1029C338O1029C340O8553C342O8568C346O8582C353O8599C358O8610,,
code-creation,Eval,9,28291,0x277c96e885a8,5, node:internal/streams/compose:1:1,0x7143c38d90,~
script-source,86,node:internal/streams/compose,'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n} = primordials;\n\nconst { pipeline } = require('internal/streams/pipeline');\nconst Duplex = require('internal/streams/duplex');\nconst { destroyer } = require('internal/streams/destroy');\nconst {\n  isNodeStream\x2C\n  isReadable\x2C\n  isWritable\x2C\n  isWebStream\x2C\n  isTransformStream\x2C\n  isWritableStream\x2C\n  isReadableStream\x2C\n} = require('internal/streams/utils');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\nconst eos = require('internal/streams/end-of-stream');\n\nmodule.exports = function compose(...streams) {\n  if (streams.length === 0) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  if (streams.length === 1) {\n    return Duplex.from(streams[0]);\n  }\n\n  const orgStreams = ArrayPrototypeSlice(streams);\n\n  if (typeof streams[0] === 'function') {\n    streams[0] = Duplex.from(streams[0]);\n  }\n\n  if (typeof streams[streams.length - 1] === 'function') {\n    const idx = streams.length - 1;\n    streams[idx] = Duplex.from(streams[idx]);\n  }\n\n  for (let n = 0; n < streams.length; ++n) {\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\n      // TODO(ronag): Add checks for non streams.\n      continue;\n    }\n    if (\n      n < streams.length - 1 &&\n      !(\n        isReadable(streams[n]) ||\n        isReadableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be readable'\x2C\n      );\n    }\n    if (\n      n > 0 &&\n      !(\n        isWritable(streams[n]) ||\n        isWritableStream(streams[n]) ||\n        isTransformStream(streams[n])\n      )\n    ) {\n      throw new ERR_INVALID_ARG_VALUE(\n        `streams[${n}]`\x2C\n        orgStreams[n]\x2C\n        'must be writable'\x2C\n      );\n    }\n  }\n\n  let ondrain;\n  let onfinish;\n  let onreadable;\n  let onclose;\n  let d;\n\n  function onfinished(err) {\n    const cb = onclose;\n    onclose = null;\n\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      d.destroy(err);\n    } else if (!readable && !writable) {\n      d.destroy();\n    }\n  }\n\n  const head = streams[0];\n  const tail = pipeline(streams\x2C onfinished);\n\n  const writable = !!(\n    isWritable(head) ||\n    isWritableStream(head) ||\n    isTransformStream(head)\n  );\n  const readable = !!(\n    isReadable(tail) ||\n    isReadableStream(tail) ||\n    isTransformStream(tail)\n  );\n\n  // TODO(ronag): Avoid double buffering.\n  // Implement Writable/Readable/Duplex traits.\n  // See\x2C https://github.com/nodejs/node/pull/33515.\n  d = new Duplex({\n    // TODO (ronag): highWaterMark?\n    writableObjectMode: !!head?.writableObjectMode\x2C\n    readableObjectMode: !!tail?.readableObjectMode\x2C\n    writable\x2C\n    readable\x2C\n  });\n\n  if (writable) {\n    if (isNodeStream(head)) {\n      d._write = function(chunk\x2C encoding\x2C callback) {\n        if (head.write(chunk\x2C encoding)) {\n          callback();\n        } else {\n          ondrain = callback;\n        }\n      };\n\n      d._final = function(callback) {\n        head.end();\n        onfinish = callback;\n      };\n\n      head.on('drain'\x2C function() {\n        if (ondrain) {\n          const cb = ondrain;\n          ondrain = null;\n          cb();\n        }\n      });\n    } else if (isWebStream(head)) {\n      const writable = isTransformStream(head) ? head.writable : head;\n      const writer = writable.getWriter();\n\n      d._write = async function(chunk\x2C encoding\x2C callback) {\n        try {\n          await writer.ready;\n          writer.write(chunk).catch(() => {});\n          callback();\n        } catch (err) {\n          callback(err);\n        }\n      };\n\n      d._final = async function(callback) {\n        try {\n          await writer.ready;\n          writer.close().catch(() => {});\n          onfinish = callback;\n        } catch (err) {\n          callback(err);\n        }\n      };\n    }\n\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\n\n    eos(toRead\x2C () => {\n      if (onfinish) {\n        const cb = onfinish;\n        onfinish = null;\n        cb();\n      }\n    });\n  }\n\n  if (readable) {\n    if (isNodeStream(tail)) {\n      tail.on('readable'\x2C function() {\n        if (onreadable) {\n          const cb = onreadable;\n          onreadable = null;\n          cb();\n        }\n      });\n\n      tail.on('end'\x2C function() {\n        d.push(null);\n      });\n\n      d._read = function() {\n        while (true) {\n          const buf = tail.read();\n          if (buf === null) {\n            onreadable = d._read;\n            return;\n          }\n\n          if (!d.push(buf)) {\n            return;\n          }\n        }\n      };\n    } else if (isWebStream(tail)) {\n      const readable = isTransformStream(tail) ? tail.readable : tail;\n      const reader = readable.getReader();\n      d._read = async function() {\n        while (true) {\n          try {\n            const { value\x2C done } = await reader.read();\n\n            if (!d.push(value)) {\n              return;\n            }\n\n            if (done) {\n              d.push(null);\n              return;\n            }\n          } catch {\n            return;\n          }\n        }\n      };\n    }\n  }\n\n  d._destroy = function(err\x2C callback) {\n    if (!err && onclose !== null) {\n      err = new AbortError();\n    }\n\n    onreadable = null;\n    ondrain = null;\n    onfinish = null;\n\n    if (isNodeStream(tail)) {\n      destroyer(tail\x2C err);\n    }\n\n    if (onclose === null) {\n      callback(err);\n    } else {\n      onclose = callback;\n    }\n  };\n\n  return d;\n};\n
code-source-info,0x277c96e885a8,86,0,5511,C0O0C4O5511,,
code-creation,JS,9,28458,0x277c96e886f0,193, node:internal/streams/compose:1:1,0x7143c38f50,~
code-source-info,0x277c96e886f0,86,0,5511,C0O0C50O25C56O85C59O85C64O72C70O138C73O138C77O138C79O196C82O196C87O182C93O365C96O365C101O243C107O259C113O273C119O287C125O302C131O323C137O343C143O491C146O491C151O410C157O431C162O437C168O464C174O531C177O531C181O531C183O575C187O590C192O5510,,
code-creation,Eval,9,28625,0x277c96e88870,5, node:internal/streams/pipeline:1:1,0x7143c3a3e8,~
script-source,87,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\n// permission from the author\x2C Mathias Buus (@mafintosh).\n\n'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Promise\x2C\n  SymbolAsyncIterator\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst eos = require('internal/streams/end-of-stream');\nconst { once } = require('internal/util');\nconst destroyImpl = require('internal/streams/destroy');\nconst Duplex = require('internal/streams/duplex');\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_RETURN_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_PREMATURE_CLOSE\x2C\n    ERR_STREAM_UNABLE_TO_PIPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateAbortSignal\x2C\n} = require('internal/validators');\n\nconst {\n  isIterable\x2C\n  isReadable\x2C\n  isReadableNodeStream\x2C\n  isNodeStream\x2C\n  isTransformStream\x2C\n  isWebStream\x2C\n  isReadableStream\x2C\n  isReadableFinished\x2C\n} = require('internal/streams/utils');\nconst { AbortController } = require('internal/abort_controller');\n\nlet PassThrough;\nlet Readable;\nlet addAbortListener;\n\nfunction destroyer(stream\x2C reading\x2C writing) {\n  let finished = false;\n  stream.on('close'\x2C () => {\n    finished = true;\n  });\n\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\n    finished = !err;\n  });\n\n  return {\n    destroy: (err) => {\n      if (finished) return;\n      finished = true;\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\n    }\x2C\n    cleanup\x2C\n  };\n}\n\nfunction popCallback(streams) {\n  // Streams should never be an empty array. It should always contain at least\n  // a single stream. Therefore optimize for the average case instead of\n  // checking for length === 0 as well.\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\n  return streams.pop();\n}\n\nfunction makeAsyncIterable(val) {\n  if (isIterable(val)) {\n    return val;\n  } else if (isReadableNodeStream(val)) {\n    // Legacy streams are not Iterable.\n    return fromReadable(val);\n  }\n  throw new ERR_INVALID_ARG_TYPE(\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\n}\n\nasync function* fromReadable(val) {\n  Readable ??= require('internal/streams/readable');\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\n}\n\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\n  let error;\n  let onresolve = null;\n\n  const resume = (err) => {\n    if (err) {\n      error = err;\n    }\n\n    if (onresolve) {\n      const callback = onresolve;\n      onresolve = null;\n      callback();\n    }\n  };\n\n  const wait = () => new Promise((resolve\x2C reject) => {\n    if (error) {\n      reject(error);\n    } else {\n      onresolve = () => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      };\n    }\n  });\n\n  writable.on('drain'\x2C resume);\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\n\n  try {\n    if (writable.writableNeedDrain) {\n      await wait();\n    }\n\n    for await (const chunk of iterable) {\n      if (!writable.write(chunk)) {\n        await wait();\n      }\n    }\n\n    if (end) {\n      writable.end();\n      await wait();\n    }\n\n    finish();\n  } catch (err) {\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\n  } finally {\n    cleanup();\n    writable.off('drain'\x2C resume);\n  }\n}\n\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\n  if (isTransformStream(writable)) {\n    writable = writable.writable;\n  }\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\n  const writer = writable.getWriter();\n  try {\n    for await (const chunk of readable) {\n      await writer.ready;\n      writer.write(chunk).catch(() => {});\n    }\n\n    await writer.ready;\n\n    if (end) {\n      await writer.close();\n    }\n\n    finish();\n  } catch (err) {\n    try {\n      await writer.abort(err);\n      finish(err);\n    } catch (err) {\n      finish(err);\n    }\n  }\n}\n\nfunction pipeline(...streams) {\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\n}\n\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\n    streams = streams[0];\n  }\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  const ac = new AbortController();\n  const signal = ac.signal;\n  const outerSignal = opts?.signal;\n\n  // Need to cleanup event listeners if last stream is readable\n  // https://github.com/nodejs/node/issues/35452\n  const lastStreamCleanup = [];\n\n  validateAbortSignal(outerSignal\x2C 'options.signal');\n\n  function abort() {\n    finishImpl(new AbortError(undefined\x2C { cause: outerSignal?.reason }));\n  }\n\n  addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n  let disposable;\n  if (outerSignal) {\n    disposable = addAbortListener(outerSignal\x2C abort);\n  }\n\n  let error;\n  let value;\n  const destroys = [];\n\n  let finishCount = 0;\n\n  function finish(err) {\n    finishImpl(err\x2C --finishCount === 0);\n  }\n\n  function finishOnlyHandleError(err) {\n    finishImpl(err\x2C false);\n  }\n\n  function finishImpl(err\x2C final) {\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\n      error = err;\n    }\n\n    if (!error && !final) {\n      return;\n    }\n\n    while (destroys.length) {\n      destroys.shift()(error);\n    }\n\n    disposable?.[SymbolDispose]();\n    ac.abort();\n\n    if (final) {\n      if (!error) {\n        lastStreamCleanup.forEach((fn) => fn());\n      }\n      process.nextTick(callback\x2C error\x2C value);\n    }\n  }\n\n  let ret;\n  for (let i = 0; i < streams.length; i++) {\n    const stream = streams[i];\n    const reading = i < streams.length - 1;\n    const writing = i > 0;\n    const next = i + 1 < streams.length ? streams[i + 1] : null;\n    const end = reading || opts?.end !== false;\n    const isLastStream = i === streams.length - 1;\n\n    if (isNodeStream(stream)) {\n      if (next !== null && (next?.closed || next?.destroyed)) {\n        throw new ERR_STREAM_UNABLE_TO_PIPE();\n      }\n\n      if (end) {\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\n        destroys.push(destroy);\n\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n\n      // Catch stream errors that occur after pipe/pump has completed.\n      function onError(err) {\n        if (\n          err &&\n          err.name !== 'AbortError' &&\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\n        ) {\n          finishOnlyHandleError(err);\n        }\n      }\n      stream.on('error'\x2C onError);\n      if (isReadable(stream) && isLastStream) {\n        lastStreamCleanup.push(() => {\n          stream.removeListener('error'\x2C onError);\n        });\n      }\n    }\n\n    if (i === 0) {\n      if (typeof stream === 'function') {\n        ret = stream({ signal });\n        if (!isIterable(ret)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\n        }\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\n        ret = stream;\n      } else {\n        ret = Duplex.from(stream);\n      }\n    } else if (typeof stream === 'function') {\n      if (isTransformStream(ret)) {\n        ret = makeAsyncIterable(ret?.readable);\n      } else {\n        ret = makeAsyncIterable(ret);\n      }\n      ret = stream(ret\x2C { signal });\n\n      if (reading) {\n        if (!isIterable(ret\x2C true)) {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\n        }\n      } else {\n        PassThrough ??= require('internal/streams/passthrough');\n\n        // If the last argument to pipeline is not a stream\n        // we must create a proxy stream so that pipeline(...)\n        // always returns a stream which can be further\n        // composed through `.pipe(stream)`.\n\n        const pt = new PassThrough({\n          objectMode: true\x2C\n        });\n\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\n        // second use.\n        const then = ret?.then;\n        if (typeof then === 'function') {\n          finishCount++;\n          then.call(ret\x2C\n                    (val) => {\n                      value = val;\n                      if (val != null) {\n                        pt.write(val);\n                      }\n                      if (end) {\n                        pt.end();\n                      }\n                      process.nextTick(finish);\n                    }\x2C (err) => {\n                      pt.destroy(err);\n                      process.nextTick(finish\x2C err);\n                    }\x2C\n          );\n        } else if (isIterable(ret\x2C true)) {\n          finishCount++;\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\n          const toRead = ret.readable || ret;\n          finishCount++;\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\n        } else {\n          throw new ERR_INVALID_RETURN_VALUE(\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\n        }\n\n        ret = pt;\n\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\n        destroys.push(destroy);\n        if (isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      }\n    } else if (isNodeStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount += 2;\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C finishOnlyHandleError\x2C { end });\n        if (isReadable(stream) && isLastStream) {\n          lastStreamCleanup.push(cleanup);\n        }\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\n        const toRead = ret.readable || ret;\n        finishCount++;\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\n      } else if (isIterable(ret)) {\n        finishCount++;\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else if (isWebStream(stream)) {\n      if (isReadableNodeStream(ret)) {\n        finishCount++;\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\n      } else if (isReadableStream(ret) || isIterable(ret)) {\n        finishCount++;\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\n      } else if (isTransformStream(ret)) {\n        finishCount++;\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\n      } else {\n        throw new ERR_INVALID_ARG_TYPE(\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\n      }\n      ret = stream;\n    } else {\n      ret = Duplex.from(stream);\n    }\n  }\n\n  if (signal?.aborted || outerSignal?.aborted) {\n    process.nextTick(abort);\n  }\n\n  return ret;\n}\n\nfunction pipe(src\x2C dst\x2C finish\x2C finishOnlyHandleError\x2C { end }) {\n  let ended = false;\n  dst.on('close'\x2C () => {\n    if (!ended) {\n      // Finish if the destination closes before the source has completed.\n      finishOnlyHandleError(new ERR_STREAM_PREMATURE_CLOSE());\n    }\n  });\n\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\n\n  if (end) {\n    // Compat. Before node v10.12.0 stdio used to throw an error so\n    // pipe() did/does not end() stdio destinations.\n    // Now they allow it but "secretly" don't close the underlying fd.\n\n    function endFn() {\n      ended = true;\n      dst.end();\n    }\n\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\n      process.nextTick(endFn);\n    } else {\n      src.once('end'\x2C endFn);\n    }\n  } else {\n    finish();\n  }\n\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\n    const rState = src._readableState;\n    if (\n      err &&\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\n      (rState?.ended && !rState.errored && !rState.errorEmitted)\n    ) {\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\n      // this is on the readable side 'end' should still be emitted if the\n      // stream has been ended and no error emitted. This should be allowed in\n      // favor of backwards compatibility. Since the stream is piped to a\n      // destination this should not result in any observable difference.\n      // We don't need to check if this is a writable premature close since\n      // eos will only fail with premature close on the reading side for\n      // duplex streams.\n      src\n        .once('end'\x2C finish)\n        .once('error'\x2C finish);\n    } else {\n      finish(err);\n    }\n  });\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\n}\n\nmodule.exports = { pipelineImpl\x2C pipeline };\n
code-source-info,0x277c96e88870,87,0,12685,C0O0C4O12685,,
code-creation,JS,9,28916,0x277c96e88b40,430, node:internal/streams/pipeline:1:1,0x7143c3a738,~
code-source-info,0x277c96e88b40,87,0,12685,C0O0C156O138C162O154C168O165C174O188C180O233C186O233C190O233C192O293C198O293C203O284C209O339C215O339C219O339C221O391C227O391C231O391C233O658C239O658C244O437C250O451C256O480C261O486C267O512C273O542C279O564C285O590C291O622C297O742C303O742C308O697C314O717C320O933C326O933C331O785C337O799C343O813C349O837C355O853C361O874C367O889C373O909C379O996C385O996C390O976C396O1039C397O1039C399O1056C400O1056C402O1070C403O1070C405O12640C412O12659C418O12673C424O12655C429O12684,,
tick,0x102452008,28958,0,0x0,9,0x148000544,0x1480002b4,0x277c96e8872b,0x148000610,0x1480002b4,0x277c96e87156,0x148000610,0x1480002b4,0x277c96e8661d,0x148000610,0x1480002b4,0x277c96e852a4,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,29041,0x277c96e88de0,5, node:internal/streams/destroy:1:1,0x7143c3ba50,~
script-source,88,node:internal/streams/destroy,'use strict';\n\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_MULTIPLE_CALLBACK\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kIsDestroyed\x2C\n  isDestroyed\x2C\n  isFinished\x2C\n  isServerRequest\x2C\n  kState\x2C\n  kErrorEmitted\x2C\n  kEmitClose\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kConstructed\x2C\n  kDestroyed\x2C\n  kAutoDestroy\x2C\n  kErrored\x2C\n} = require('internal/streams/utils');\n\nconst kDestroy = Symbol('kDestroy');\nconst kConstruct = Symbol('kConstruct');\n\nfunction checkError(err\x2C w\x2C r) {\n  if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && !w.errored) {\n      w.errored = err;\n    }\n    if (r && !r.errored) {\n      r.errored = err;\n    }\n  }\n}\n\n// Backwards compat. cb() is undocumented and unused in core but\n// unfortunately might be used by modules.\nfunction destroy(err\x2C cb) {\n  const r = this._readableState;\n  const w = this._writableState;\n  // With duplex streams we use the writable side for state.\n  const s = w || r;\n\n  if (\n    (w && (w[kState] & kDestroyed) !== 0) ||\n    (r && (r[kState] & kDestroyed) !== 0)\n  ) {\n    if (typeof cb === 'function') {\n      cb();\n    }\n\n    return this;\n  }\n\n\n  // We set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n  checkError(err\x2C w\x2C r);\n\n  if (w) {\n    w[kState] |= kDestroyed;\n  }\n  if (r) {\n    r[kState] |= kDestroyed;\n  }\n\n  // If still constructing then defer calling _destroy.\n  if ((s[kState] & kConstructed) === 0) {\n    this.once(kDestroy\x2C function(er) {\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\n    });\n  } else {\n    _destroy(this\x2C err\x2C cb);\n  }\n\n  return this;\n}\n\nfunction _destroy(self\x2C err\x2C cb) {\n  let called = false;\n\n  function onDestroy(err) {\n    if (called) {\n      return;\n    }\n    called = true;\n\n    const r = self._readableState;\n    const w = self._writableState;\n\n    checkError(err\x2C w\x2C r);\n\n    if (w) {\n      w[kState] |= kClosed;\n    }\n    if (r) {\n      r[kState] |= kClosed;\n    }\n\n    if (typeof cb === 'function') {\n      cb(err);\n    }\n\n    if (err) {\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\n    } else {\n      process.nextTick(emitCloseNT\x2C self);\n    }\n  }\n  try {\n    self._destroy(err || null\x2C onDestroy);\n  } catch (err) {\n    onDestroy(err);\n  }\n}\n\nfunction emitErrorCloseNT(self\x2C err) {\n  emitErrorNT(self\x2C err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (w) {\n    w[kState] |= kCloseEmitted;\n  }\n  if (r) {\n    r[kState] |= kCloseEmitted;\n  }\n\n  if (\n    (w && (w[kState] & kEmitClose) !== 0) ||\n    (r && (r[kState] & kEmitClose) !== 0)\n  ) {\n    self.emit('close');\n  }\n}\n\nfunction emitErrorNT(self\x2C err) {\n  const r = self._readableState;\n  const w = self._writableState;\n\n  if (\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\n    (r && (r[kState] & kErrorEmitted) !== 0)\n  ) {\n    return;\n  }\n\n  if (w) {\n    w[kState] |= kErrorEmitted;\n  }\n  if (r) {\n    r[kState] |= kErrorEmitted;\n  }\n\n  self.emit('error'\x2C err);\n}\n\nfunction undestroy() {\n  const r = this._readableState;\n  const w = this._writableState;\n\n  if (r) {\n    r.constructed = true;\n    r.closed = false;\n    r.closeEmitted = false;\n    r.destroyed = false;\n    r.errored = null;\n    r.errorEmitted = false;\n    r.reading = false;\n    r.ended = r.readable === false;\n    r.endEmitted = r.readable === false;\n  }\n\n  if (w) {\n    w.constructed = true;\n    w.destroyed = false;\n    w.closed = false;\n    w.closeEmitted = false;\n    w.errored = null;\n    w.errorEmitted = false;\n    w.finalCalled = false;\n    w.prefinished = false;\n    w.ended = w.writable === false;\n    w.ending = w.writable === false;\n    w.finished = w.writable === false;\n  }\n}\n\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\n  // We have tests that rely on errors being emitted\n  // in the same tick\x2C so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\n  ) {\n    return this;\n  }\n\n  if (\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\n    (w && (w[kState] & kAutoDestroy) !== 0)\n  ) {\n    stream.destroy(err);\n  } else if (err) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    err.stack; // eslint-disable-line no-unused-expressions\n\n    if (w && (w[kState] & kErrored) === 0) {\n      w.errored = err;\n    }\n    if (r && (r[kState] & kErrored) === 0) {\n      r.errored = err;\n    }\n    if (sync) {\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\n    } else {\n      emitErrorNT(stream\x2C err);\n    }\n  }\n}\n\nfunction construct(stream\x2C cb) {\n  if (typeof stream._construct !== 'function') {\n    return;\n  }\n\n  const r = stream._readableState;\n  const w = stream._writableState;\n\n  if (r) {\n    r[kState] &= ~kConstructed;\n  }\n  if (w) {\n    w[kState] &= ~kConstructed;\n  }\n\n  stream.once(kConstruct\x2C cb);\n\n  if (stream.listenerCount(kConstruct) > 1) {\n    // Duplex\n    return;\n  }\n\n  process.nextTick(constructNT\x2C stream);\n}\n\nfunction constructNT(stream) {\n  let called = false;\n\n  function onConstruct(err) {\n    if (called) {\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n      return;\n    }\n    called = true;\n\n    const r = stream._readableState;\n    const w = stream._writableState;\n    const s = w || r;\n\n    if (r) {\n      r[kState] |= kConstructed;\n    }\n    if (w) {\n      w[kState] |= kConstructed;\n    }\n\n    if (s.destroyed) {\n      stream.emit(kDestroy\x2C err);\n    } else if (err) {\n      errorOrDestroy(stream\x2C err\x2C true);\n    } else {\n      stream.emit(kConstruct);\n    }\n  }\n\n  try {\n    stream._construct((err) => {\n      process.nextTick(onConstruct\x2C err);\n    });\n  } catch (err) {\n    process.nextTick(onConstruct\x2C err);\n  }\n}\n\nfunction isRequest(stream) {\n  return stream?.setHeader && typeof stream.abort === 'function';\n}\n\nfunction emitCloseLegacy(stream) {\n  stream.emit('close');\n}\n\nfunction emitErrorCloseLegacy(stream\x2C err) {\n  stream.emit('error'\x2C err);\n  process.nextTick(emitCloseLegacy\x2C stream);\n}\n\n// Normalize destroy for legacy.\nfunction destroyer(stream\x2C err) {\n  if (!stream || isDestroyed(stream)) {\n    return;\n  }\n\n  if (!err && !isFinished(stream)) {\n    err = new AbortError();\n  }\n\n  // TODO: Remove isRequest branches.\n  if (isServerRequest(stream)) {\n    stream.socket = null;\n    stream.destroy(err);\n  } else if (isRequest(stream)) {\n    stream.abort();\n  } else if (isRequest(stream.req)) {\n    stream.req.abort();\n  } else if (typeof stream.destroy === 'function') {\n    stream.destroy(err);\n  } else if (typeof stream.close === 'function') {\n    // TODO: Don't lose err?\n    stream.close();\n  } else if (err) {\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\n  } else {\n    process.nextTick(emitCloseLegacy\x2C stream);\n  }\n\n  if (!stream.destroyed) {\n    stream[kIsDestroyed] = true;\n  }\n}\n\nmodule.exports = {\n  construct\x2C\n  destroyer\x2C\n  destroy\x2C\n  undestroy\x2C\n  errorOrDestroy\x2C\n};\n
code-source-info,0x277c96e88de0,88,0,7355,C0O0C4O7355,,
code-creation,JS,9,29208,0x277c96e89118,326, node:internal/streams/destroy:1:1,0x7143c3bcf0,~
code-source-info,0x277c96e89118,88,0,7355,C0O0C143O25C148O142C151O142C156O61C162O75C168O104C173O110C179O373C182O373C187O180C193O196C199O211C205O225C211O244C217O254C223O271C229O285C235O296C241O313C247O329C253O343C259O359C265O426C268O426C272O426C274O465C277O465C281O465C283O7265C290O7286C296O7299C302O7312C308O7323C314O7336C320O7280C325O7354,,
code-creation,Eval,9,29333,0x277c96e89320,5, node:internal/streams/duplex:1:1,0x7143c3ce88,~
script-source,89,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototype inheritance\x2C this class\n// prototypically inherits from Readable\x2C and then parasitically from\n// Writable.\n\n'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = Duplex;\n\nconst Stream = require('internal/streams/legacy').Stream;\nconst Readable = require('internal/streams/readable');\nconst Writable = require('internal/streams/writable');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst destroyImpl = require('internal/streams/destroy');\nconst { kOnConstructed } = require('internal/streams/utils');\n\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\nObjectSetPrototypeOf(Duplex\x2C Readable);\n\n{\n  const keys = ObjectKeys(Writable.prototype);\n  // Allow the keys array to be GC'ed.\n  for (let i = 0; i < keys.length; i++) {\n    const method = keys[i];\n    Duplex.prototype[method] ||= Writable.prototype[method];\n  }\n}\n\n// Use the `destroy` method of `Writable`.\nDuplex.prototype.destroy = Writable.prototype.destroy;\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex))\n    return new Duplex(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\n\n  if (options) {\n    this.allowHalfOpen = options.allowHalfOpen !== false;\n\n    if (options.readable === false) {\n      this._readableState.readable = false;\n      this._readableState.ended = true;\n      this._readableState.endEmitted = true;\n    }\n\n    if (options.writable === false) {\n      this._writableState.writable = false;\n      this._writableState.ending = true;\n      this._writableState.ended = true;\n      this._writableState.finished = true;\n    }\n\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  } else {\n    this.allowHalfOpen = true;\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperties(Duplex.prototype\x2C {\n  writable:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\n  writableHighWaterMark:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\n  writableObjectMode:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\n  writableBuffer:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\n  writableLength:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\n  writableFinished:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\n  writableCorked:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\n  writableEnded:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\n  writableNeedDrain:\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      if (this._readableState === undefined ||\n        this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      if (this._readableState && this._writableState) {\n        this._readableState.destroyed = value;\n        this._writableState.destroyed = value;\n      }\n    }\x2C\n  }\x2C\n});\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nDuplex.fromWeb = function(pair\x2C options) {\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\n    pair\x2C\n    options);\n};\n\nDuplex.toWeb = function(duplex) {\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\n};\n\nlet duplexify;\n\nDuplex.from = function(body) {\n  duplexify ??= require('internal/streams/duplexify');\n  return duplexify(body\x2C 'body');\n};\n
code-source-info,0x277c96e89320,89,0,6529,C0O0C4O6529,,
code-creation,JS,9,29458,0x277c96e89590,698, node:internal/streams/duplex:1:1,0x7143c3d008,~
code-source-info,0x277c96e
code-creation,Eval,9,29541,0x277c96e899b8,5, node:internal/streams/legacy:1:1,0x7143c3dbe0,~
script-source,90,node:internal/streams/legacy,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectOwnKeys\x2C\n} = primordials;\n\nconst EE = require('events');\n\nfunction Stream(opts) {\n  EE.call(this\x2C opts);\n}\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\nObjectSetPrototypeOf(Stream\x2C EE);\n\nStream.prototype.pipe = function(dest\x2C options) {\n  const source = this;\n\n  function ondata(chunk) {\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\n      source.pause();\n    }\n  }\n\n  source.on('data'\x2C ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain'\x2C ondrain);\n\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end'\x2C onend);\n    source.on('close'\x2C onclose);\n  }\n\n  let didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // Don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this\x2C 'error') === 0) {\n      this.emit('error'\x2C er);\n    }\n  }\n\n  prependListener(source\x2C 'error'\x2C onerror);\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data'\x2C ondata);\n    dest.removeListener('drain'\x2C ondrain);\n\n    source.removeListener('end'\x2C onend);\n    source.removeListener('close'\x2C onclose);\n\n    source.removeListener('error'\x2C onerror);\n    dest.removeListener('error'\x2C onerror);\n\n    source.removeListener('end'\x2C cleanup);\n    source.removeListener('close'\x2C cleanup);\n\n    dest.removeListener('close'\x2C cleanup);\n  }\n\n  source.on('end'\x2C cleanup);\n  source.on('close'\x2C cleanup);\n\n  dest.on('close'\x2C cleanup);\n  dest.emit('pipe'\x2C source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\nStream.prototype.eventNames = function eventNames() {\n  const names = [];\n  for (const key of ReflectOwnKeys(this._events)) {\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\n      names.push(key);\n    }\n  }\n  return names;\n};\n\nfunction prependListener(emitter\x2C event\x2C fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function')\n    return emitter.prependListener(event\x2C fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event])\n    emitter.on(event\x2C fn);\n  else if (ArrayIsArray(emitter._events[event]))\n    emitter._events[event].unshift(fn);\n  else\n    emitter._events[event] = [fn\x2C emitter._events[event]];\n}\n\nmodule.exports = { Stream\x2C prependListener };\n
code-source-info,0x277c96e899b8,90,0,3251,C0O0C4O3251,,
code-creation,JS,9,29625,0x277c96e89b10,128, node:internal/streams/legacy:1:1,0x7143c3dcf0,~
code-source-info,0x277c96e89b10,90,0,3251,C0O0C25O25C31O41C36O65C42O110C45O110C49O110C51O207C59O221C64O179C69O233C72O233C77O275C86O290C90O2104C99O2125C103O3205C110O3224C116O3232C122O3220C127O3250,,
code-creation,Eval,9,30041,0x277c96e89c30,5, node:internal/streams/readable:1:1,0x32a1859446c8,~
script-source,91,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeIndexOf\x2C\n  NumberIsInteger\x2C\n  NumberIsNaN\x2C\n  NumberParseInt\x2C\n  ObjectDefineProperties\x2C\n  ObjectKeys\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolAsyncIterator\x2C\n  SymbolSpecies\x2C\n  TypedArrayPrototypeSet\x2C\n} = primordials;\n\nmodule.exports = Readable;\nReadable.ReadableState = ReadableState;\n\nconst EE = require('events');\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\nconst { Buffer } = require('buffer');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\nconst eos = require('internal/streams/end-of-stream');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst destroyImpl = require('internal/streams/destroy');\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_OUT_OF_RANGE\x2C\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst { validateObject } = require('internal/validators');\n\nconst FastBuffer = Buffer[SymbolSpecies];\n\nconst { StringDecoder } = require('string_decoder');\nconst from = require('internal/streams/from');\n\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Readable\x2C Stream);\nconst nop = () => {};\n\nconst { errorOrDestroy } = destroyImpl;\n\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kDecoderValue = Symbol('kDecoderValue');\nconst kEncodingValue = Symbol('kEncodingValue');\n\nconst kEnded = 1 << 9;\nconst kEndEmitted = 1 << 10;\nconst kReading = 1 << 11;\nconst kSync = 1 << 12;\nconst kNeedReadable = 1 << 13;\nconst kEmittedReadable = 1 << 14;\nconst kReadableListening = 1 << 15;\nconst kResumeScheduled = 1 << 16;\nconst kMultiAwaitDrain = 1 << 17;\nconst kReadingMore = 1 << 18;\nconst kDataEmitted = 1 << 19;\nconst kDefaultUTF8Encoding = 1 << 20;\nconst kDecoder = 1 << 21;\nconst kEncoding = 1 << 22;\nconst kHasFlowing = 1 << 23;\nconst kFlowing = 1 << 24;\nconst kHasPaused = 1 << 25;\nconst kPaused = 1 << 26;\nconst kDataListening = 1 << 27;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(ReadableState.prototype\x2C {\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n  ended: makeBitMapDescriptor(kEnded)\x2C\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\n  reading: makeBitMapDescriptor(kReading)\x2C\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\n  // any actions that shouldn't happen until "later" should generally also\n  // not happen before the first read call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n  // Whenever we return null\x2C then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\n  // If true\x2C a maybeReadMore has been scheduled.\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\n\n  // Indicates whether the stream has errored. When true no further\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\n  // since when autoDestroy is disabled we need a way to tell whether the\n  // stream has failed.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  decoder: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kDecoderValue] = value;\n        this[kState] |= kDecoder;\n      } else {\n        this[kState] &= ~kDecoder;\n      }\n    }\x2C\n  }\x2C\n\n  encoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\n    }\x2C\n    set(value) {\n      if (value) {\n        this[kEncodingValue] = value;\n        this[kState] |= kEncoding;\n      } else {\n        this[kState] &= ~kEncoding;\n      }\n    }\x2C\n  }\x2C\n\n  flowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\n    }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasFlowing | kFlowing);\n      } else if (value) {\n        this[kState] |= (kHasFlowing | kFlowing);\n      } else {\n        this[kState] |= kHasFlowing;\n        this[kState] &= ~kFlowing;\n      }\n    }\x2C\n  }\x2C\n});\n\n\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store ReadableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\n\n  // Object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away.\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.readableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  this.buffer = [];\n  this.bufferIndex = 0;\n  this.length = 0;\n  this.pipes = [];\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options?.defaultEncoding;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this.defaultEncoding = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Ref the piped dest which we need a drain event on it\n  // type: null | Writable | Set<Writable>.\n  this.awaitDrainWriters = null;\n\n  if (options?.encoding) {\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kNeedReadable) !== 0) {\n    maybeReadMore(stream\x2C this);\n  }\n};\n\nfunction Readable(options) {\n  if (!(this instanceof Readable))\n    return new Readable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    data: undefined\x2C\n    end: undefined\x2C\n    readable: undefined\x2C\n    // Skip uncommon events...\n    // pause: undefined\x2C\n    // resume: undefined\x2C\n    // pipe: undefined\x2C\n    // unpipe: undefined\x2C\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._readableState = new ReadableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.read === 'function')\n      this._read = options.read;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._readableState[kOnConstructed](this);\n    });\n  }\n}\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nReadable.prototype[SymbolAsyncDispose] = async function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.readableEnded ? null : new AbortError();\n    this.destroy(error);\n  }\n  await new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet\x2C\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function(chunk\x2C encoding) {\n  debug('push'\x2C chunk);\n\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\n};\n\n// Unshift should *always* be something directly out of read().\nReadable.prototype.unshift = function(chunk\x2C encoding) {\n  debug('unshift'\x2C chunk);\n  const state = this._readableState;\n  return (state[kState] & kObjectMode) === 0 ?\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\n};\n\n\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      if (state.encoding) {\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\n        // the string in the BufferList with the state encoding.\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\n      } else {\n        chunk = Buffer.from(chunk\x2C encoding);\n      }\n    }\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n\n  if (!(chunk && chunk.length > 0)) {\n    return canPushMore(state);\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n\n    return false;\n  }\n\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\n}\n\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\n  if ((state[kState] & kEndEmitted) !== 0)\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\n    return false;\n  else\n    addChunk(stream\x2C state\x2C chunk\x2C true);\n\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if (typeof chunk === 'string') {\n    encoding ||= state.defaultEncoding;\n    if (state.encoding !== encoding) {\n      chunk = Buffer.from(chunk\x2C encoding);\n      encoding = '';\n    }\n  } else if (chunk instanceof Buffer) {\n    encoding = '';\n  } else if (Stream._isArrayBufferView(chunk)) {\n    chunk = Stream._uint8ArrayToBuffer(chunk);\n    encoding = '';\n  } else if (chunk !== undefined) {\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk));\n    return false;\n  }\n\n  if (!chunk || chunk.length <= 0) {\n    state[kState] &= ~kReading;\n    maybeReadMore(stream\x2C state);\n\n    return canPushMore(state);\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n    if (chunk.length === 0) {\n      maybeReadMore(stream\x2C state);\n      return canPushMore(state);\n    }\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\n  if (chunk === null) {\n    state[kState] &= ~kReading;\n    onEofChunk(stream\x2C state);\n    return false;\n  }\n\n  if ((state[kState] & kEnded) !== 0) {\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\n    return false;\n  }\n\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\n    return false;\n  }\n\n  state[kState] &= ~kReading;\n\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\n    chunk = state[kDecoderValue].write(chunk);\n  }\n\n  addChunk(stream\x2C state\x2C chunk\x2C false);\n  return canPushMore(state);\n}\n\nfunction canPushMore(state) {\n  // We can push more data if we are below the highWaterMark.\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\n  // This is to work around cases where hwm=0\x2C such as the repl.\n  return (state[kState] & kEnded) === 0 &&\n    (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\n    // Use the guard to avoid creating `Set()` repeatedly\n    // when we have multiple pipes.\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n\n    state[kState] |= kDataEmitted;\n    stream.emit('data'\x2C chunk);\n  } else {\n    // Update the buffer info.\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    if (addToFront) {\n      if (state.bufferIndex > 0) {\n        state.buffer[--state.bufferIndex] = chunk;\n      } else {\n        state.buffer.unshift(chunk); // Slow path\n      }\n    } else {\n      state.buffer.push(chunk);\n    }\n\n    if ((state[kState] & kNeedReadable) !== 0)\n      emitReadable(stream);\n  }\n  maybeReadMore(stream\x2C state);\n}\n\nReadable.prototype.isPaused = function() {\n  const state = this._readableState;\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\n};\n\n// Backwards compatibility.\nReadable.prototype.setEncoding = function(enc) {\n  const state = this._readableState;\n\n  const decoder = new StringDecoder(enc);\n  state.decoder = decoder;\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\n  state.encoding = state.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  let content = '';\n  for (const data of state.buffer.slice(state.bufferIndex)) {\n    content += decoder.write(data);\n  }\n  state.buffer.length = 0;\n  state.bufferIndex = 0;\n\n  if (content !== '')\n    state.buffer.push(content);\n  state.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB.\nconst MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n > MAX_HWM) {\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts.\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n\x2C state) {\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\n    return 0;\n  if ((state[kState] & kObjectMode) !== 0)\n    return 1;\n  if (NumberIsNaN(n)) {\n    // Only flow one buffer at a time.\n    if ((state[kState] & kFlowing) !== 0 && state.length)\n      return state.buffer[state.bufferIndex].length;\n    return state.length;\n  }\n  if (n <= state.length)\n    return n;\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\n}\n\n// You can override either this method\x2C or the async _read(n) below.\nReadable.prototype.read = function(n) {\n  debug('read'\x2C n);\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\n  // in this scenario\x2C so we are doing it manually.\n  if (n === undefined) {\n    n = NaN;\n  } else if (!NumberIsInteger(n)) {\n    n = NumberParseInt(n\x2C 10);\n  }\n  const state = this._readableState;\n  const nOrig = n;\n\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\n  if (n > state.highWaterMark)\n    state.highWaterMark = computeNewHighWaterMark(n);\n\n  if (n !== 0)\n    state[kState] &= ~kEmittedReadable;\n\n  // If we're doing read(0) to trigger a readable event\x2C but we\n  // already have a bunch of data in the buffer\x2C then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 &&\n      (state[kState] & kNeedReadable) !== 0 &&\n      ((state.highWaterMark !== 0 ?\n        state.length >= state.highWaterMark :\n        state.length > 0) ||\n       (state[kState] & kEnded) !== 0)) {\n    debug('read: emitReadable');\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n    else\n      emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n\x2C state);\n\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\n    if (state.length === 0)\n      endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer\x2C providing enough data when\n  // before there was *not* enough.\n  //\n  // So\x2C the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\n  // that the Readable class should behave improperly\x2C as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie\x2C if the read call\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event\x2C then we need to do some reading.\n  let doRead = (state[kState] & kNeedReadable) !== 0;\n  debug('need readable'\x2C doRead);\n\n  // If we currently have less than the highWaterMark\x2C then also read some.\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark'\x2C doRead);\n  }\n\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\n    doRead = false;\n    debug('reading\x2C ended or constructing'\x2C doRead);\n  } else if (doRead) {\n    debug('do read');\n    state[kState] |= kReading | kSync;\n    // If the length is currently zero\x2C then we *need* a readable event.\n    if (state.length === 0)\n      state[kState] |= kNeedReadable;\n\n    // Call internal read method\n    try {\n      this._read(state.highWaterMark);\n    } catch (err) {\n      errorOrDestroy(this\x2C err);\n    }\n    state[kState] &= ~kSync;\n\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\n    // and we need to re-evaluate how much data we can return to the user.\n    if ((state[kState] & kReading) === 0)\n      n = howMuchToRead(nOrig\x2C state);\n  }\n\n  let ret;\n  if (n > 0)\n    ret = fromList(n\x2C state);\n  else\n    ret = null;\n\n  if (ret === null) {\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\n    n = 0;\n  } else {\n    state.length -= n;\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      state.awaitDrainWriters.clear();\n    } else {\n      state.awaitDrainWriters = null;\n    }\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer\x2C then we want to know\n    // as soon as we *do* get something into the buffer.\n    if ((state[kState] & kEnded) === 0)\n      state[kState] |= kNeedReadable;\n\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\n      endReadable(this);\n  }\n\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\n    state[kState] |= kDataEmitted;\n    this.emit('data'\x2C ret);\n  }\n\n  return ret;\n};\n\nfunction onEofChunk(stream\x2C state) {\n  debug('onEofChunk');\n  if ((state[kState] & kEnded) !== 0) return;\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\n  if (decoder) {\n    const chunk = decoder.end();\n    if (chunk?.length) {\n      state.buffer.push(chunk);\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n    }\n  }\n  state[kState] |= kEnded;\n\n  if ((state[kState] & kSync) !== 0) {\n    // If we are sync\x2C wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call.\n    emitReadable(stream);\n  } else {\n    // Emit 'readable' now to make sure it gets picked up.\n    state[kState] &= ~kNeedReadable;\n    state[kState] |= kEmittedReadable;\n    // We have to emit readable now that we are EOF. Modules\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\n    emitReadable_(stream);\n  }\n}\n\n// Don't emit readable right away in sync mode\x2C because this can trigger\n// another read() call => stack overflow.  This way\x2C it might trigger\n// a nextTick recursion warning\x2C but that's not so bad.\nfunction emitReadable(stream) {\n  const state = stream._readableState;\n  debug('emitReadable');\n  state[kState] &= ~kNeedReadable;\n  if ((state[kState] & kEmittedReadable) === 0) {\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\n    state[kState] |= kEmittedReadable;\n    process.nextTick(emitReadable_\x2C stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  const state = stream._readableState;\n  debug('emitReadable_');\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\n    stream.emit('readable');\n    state[kState] &= ~kEmittedReadable;\n  }\n\n  // The stream needs another readable event if:\n  // 1. It is not flowing\x2C as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark\x2C so we can schedule\n  //    another readable later.\n  state[kState] |=\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\n  flow(stream);\n}\n\n\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call\x2C in which case reading = true if\n// it's in progress.\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream\x2C state) {\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\n    state[kState] |= kReadingMore;\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\n  }\n}\n\nfunction maybeReadMore_(stream\x2C state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data\x2C the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the stream has called the implementation defined _read()\n  //   method\x2C but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\n         (state.length < state.highWaterMark ||\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\n    const len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // Didn't get any data\x2C stop spinning.\n      break;\n  }\n  state[kState] &= ~kReadingMore;\n}\n\n// Abstract method.  to be overridden in specific implementation classes.\n// call cb(er\x2C data) where data is <= n in length.\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\n// arbitrary\x2C and perhaps not very meaningful.\nReadable.prototype._read = function(n) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\n};\n\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\n  const src = this;\n  const state = this._readableState;\n\n  if (state.pipes.length === 1) {\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\n      state[kState] |= kMultiAwaitDrain;\n      state.awaitDrainWriters = new SafeSet(\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\n      );\n    }\n  }\n\n  state.pipes.push(dest);\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\n\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\n              dest !== process.stdout &&\n              dest !== process.stderr;\n\n  const endFn = doEnd ? onend : unpipe;\n  if ((state[kState] & kEndEmitted) !== 0)\n    process.nextTick(endFn);\n  else\n    src.once('end'\x2C endFn);\n\n  dest.on('unpipe'\x2C onunpipe);\n  function onunpipe(readable\x2C unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  let ondrain;\n\n  let cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // Cleanup event handlers once the pipe is broken.\n    dest.removeListener('close'\x2C onclose);\n    dest.removeListener('finish'\x2C onfinish);\n    if (ondrain) {\n      dest.removeListener('drain'\x2C ondrain);\n    }\n    dest.removeListener('error'\x2C onerror);\n    dest.removeListener('unpipe'\x2C onunpipe);\n    src.removeListener('end'\x2C onend);\n    src.removeListener('end'\x2C unpipe);\n    src.removeListener('data'\x2C ondata);\n\n    cleanedUp = true;\n\n    // If the reader is waiting for a drain event from this\n    // specific writer\x2C then it would cause it to never start\n    // flowing again.\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\n    // If we don't know\x2C then assume that we are waiting for one.\n    if (ondrain && state.awaitDrainWriters &&\n        (!dest._writableState || dest._writableState.needDrain))\n      ondrain();\n  }\n\n  function pause() {\n    // If the user unpiped during `dest.write()`\x2C it is possible\n    // to get stuck in a permanently paused state if that write\n    // also returned false.\n    // => Check whether `dest` is still a piping destination.\n    if (!cleanedUp) {\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\n        debug('false write response\x2C pause'\x2C 0);\n        state.awaitDrainWriters = dest;\n        state[kState] &= ~kMultiAwaitDrain;\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\n        state.awaitDrainWriters.add(dest);\n      }\n      src.pause();\n    }\n    if (!ondrain) {\n      // When the dest drains\x2C it reduces the awaitDrain counter\n      // on the source.  This would be more elegant with a .once()\n      // handler in flow()\x2C but adding and removing repeatedly is\n      // too slow.\n      ondrain = pipeOnDrain(src\x2C dest);\n      dest.on('drain'\x2C ondrain);\n    }\n  }\n\n  src.on('data'\x2C ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    try {\n      const ret = dest.write(chunk);\n      debug('dest.write'\x2C ret);\n\n      if (ret === false) {\n        pause();\n      }\n    } catch (error) {\n      dest.destroy(error);\n    }\n  }\n\n  // If the dest has an error\x2C then stop piping into it.\n  // However\x2C don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror'\x2C er);\n    unpipe();\n    dest.removeListener('error'\x2C onerror);\n    if (dest.listenerCount('error') === 0) {\n      const s = dest._writableState || dest._readableState;\n      if (s && !s.errorEmitted) {\n        // User incorrectly emitted 'error' directly on the stream.\n        errorOrDestroy(dest\x2C er);\n      } else {\n        dest.emit('error'\x2C er);\n      }\n    }\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest\x2C 'error'\x2C onerror);\n\n  // Both close and finish should trigger unpipe\x2C but only once.\n  function onclose() {\n    dest.removeListener('finish'\x2C onfinish);\n    unpipe();\n  }\n  dest.once('close'\x2C onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close'\x2C onclose);\n    unpipe();\n  }\n  dest.once('finish'\x2C onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // Tell the dest that it's being piped to.\n  dest.emit('pipe'\x2C src);\n\n  // Start the flow if it hasn't been started already.\n\n  if (dest.writableNeedDrain === true) {\n    pause();\n  } else if ((state[kState] & kFlowing) === 0) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src\x2C dest) {\n  return function pipeOnDrainFunctionResult() {\n    const state = src._readableState;\n\n    // `ondrain` will call directly\x2C\n    // `this` maybe not a reference to dest\x2C\n    // so we use the real dest here.\n    if (state.awaitDrainWriters === dest) {\n      debug('pipeOnDrain'\x2C 1);\n      state.awaitDrainWriters = null;\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\n      state.awaitDrainWriters.delete(dest);\n    }\n\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\n      (state[kState] & kDataListening) !== 0) {\n      src.resume();\n    }\n  };\n}\n\n\nReadable.prototype.unpipe = function(dest) {\n  const state = this._readableState;\n  const unpipeInfo = { hasUnpiped: false };\n\n  // If we're not piping anywhere\x2C then do nothing.\n  if (state.pipes.length === 0)\n    return this;\n\n  if (!dest) {\n    // remove all.\n    const dests = state.pipes;\n    state.pipes = [];\n    this.pause();\n\n    for (let i = 0; i < dests.length; i++)\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\n    return this;\n  }\n\n  // Try to find the right one.\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\n  if (index === -1)\n    return this;\n\n  state.pipes.splice(index\x2C 1);\n  if (state.pipes.length === 0)\n    this.pause();\n\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\n\n  return this;\n};\n\n// Set up data events if they are asked for\n// Ensure readable listeners eventually get something.\nReadable.prototype.on = function(ev\x2C fn) {\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\n  const state = this._readableState;\n\n  if (ev === 'data') {\n    state[kState] |= kDataListening;\n\n    // Update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused.\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n      this.resume();\n    }\n  } else if (ev === 'readable') {\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\n      state[kState] &= ~(kFlowing | kEmittedReadable);\n      debug('on readable');\n      if (state.length) {\n        emitReadable(this);\n      } else if ((state[kState] & kReading) === 0) {\n        process.nextTick(nReadingNextTick\x2C this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function(ev\x2C fn) {\n  const state = this._readableState;\n\n  const res = Stream.prototype.removeListener.call(this\x2C\n                                                   ev\x2C fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\n    state[kState] &= ~kDataListening;\n  }\n\n  return res;\n};\nReadable.prototype.off = Readable.prototype.removeListener;\n\nReadable.prototype.removeAllListeners = function(ev) {\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\n                                                        arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable'\x2C fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening\x2C this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  const state = self._readableState;\n\n  if (self.listenerCount('readable') > 0) {\n    state[kState] |= kReadableListening;\n  } else {\n    state[kState] &= ~kReadableListening;\n  }\n\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\n    // Flowing needs to be set to true now\x2C otherwise\n    // the upcoming resume will not flow.\n    state[kState] |= kHasFlowing | kFlowing;\n\n    // Crude way to check if we should resume.\n  } else if ((state[kState] & kDataListening) !== 0) {\n    self.resume();\n  } else if ((state[kState] & kReadableListening) === 0) {\n    state[kState] &= ~(kHasFlowing | kFlowing);\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them\x2C then switch into old mode.\nReadable.prototype.resume = function() {\n  const state = this._readableState;\n  if ((state[kState] & kFlowing) === 0) {\n    debug('resume');\n    // We flow only if there is no one listening\n    // for readable\x2C but we still have to call\n    // resume().\n    state[kState] |= kHasFlowing;\n    if ((state[kState] & kReadableListening) === 0) {\n      state[kState] |= kFlowing;\n    } else {\n      state[kState] &= ~kFlowing;\n    }\n    resume(this\x2C state);\n  }\n  state[kState] |= kHasPaused;\n  state[kState] &= ~kPaused;\n  return this;\n};\n\nfunction resume(stream\x2C state) {\n  if ((state[kState] & kResumeScheduled) === 0) {\n    state[kState] |= kResumeScheduled;\n    process.nextTick(resume_\x2C stream\x2C state);\n  }\n}\n\nfunction resume_(stream\x2C state) {\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\n  if ((state[kState] & kReading) === 0) {\n    stream.read(0);\n  }\n\n  state[kState] &= ~kResumeScheduled;\n  stream.emit('resume');\n  flow(stream);\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\n    stream.read(0);\n}\n\nReadable.prototype.pause = function() {\n  const state = this._readableState;\n  debug('call pause');\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\n    debug('pause');\n    state[kState] |= kHasFlowing;\n    state[kState] &= ~kFlowing;\n    this.emit('pause');\n  }\n  state[kState] |= kHasPaused | kPaused;\n  return this;\n};\n\nfunction flow(stream) {\n  const state = stream._readableState;\n  debug('flow');\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\n}\n\n// Wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function(stream) {\n  let paused = false;\n\n  // TODO (ronag): Should this.destroy(err) emit\n  // 'error' on the wrapped stream? Would require\n  // a static factory method\x2C e.g. Readable.wrap(stream).\n\n  stream.on('data'\x2C (chunk) => {\n    if (!this.push(chunk) && stream.pause) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  stream.on('end'\x2C () => {\n    this.push(null);\n  });\n\n  stream.on('error'\x2C (err) => {\n    errorOrDestroy(this\x2C err);\n  });\n\n  stream.on('close'\x2C () => {\n    this.destroy();\n  });\n\n  stream.on('destroy'\x2C () => {\n    this.destroy();\n  });\n\n  this._read = () => {\n    if (paused && stream.resume) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\n  const streamKeys = ObjectKeys(stream);\n  for (let j = 1; j < streamKeys.length; j++) {\n    const i = streamKeys[j];\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = stream[i].bind(stream);\n    }\n  }\n\n  return this;\n};\n\nReadable.prototype[SymbolAsyncIterator] = function() {\n  return streamToAsyncIterator(this);\n};\n\nReadable.prototype.iterator = function(options) {\n  if (options !== undefined) {\n    validateObject(options\x2C 'options');\n  }\n  return streamToAsyncIterator(this\x2C options);\n};\n\nfunction streamToAsyncIterator(stream\x2C options) {\n  if (typeof stream.read !== 'function') {\n    stream = Readable.wrap(stream\x2C { objectMode: true });\n  }\n\n  const iter = createAsyncIterator(stream\x2C options);\n  iter.stream = stream;\n  return iter;\n}\n\nasync function* createAsyncIterator(stream\x2C options) {\n  let callback = nop;\n\n  function next(resolve) {\n    if (this === stream) {\n      callback();\n      callback = nop;\n    } else {\n      callback = resolve;\n    }\n  }\n\n  stream.on('readable'\x2C next);\n\n  let error;\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\n    callback();\n    callback = nop;\n  });\n\n  try {\n    while (true) {\n      const chunk = stream.destroyed ? null : stream.read();\n      if (chunk !== null) {\n        yield chunk;\n      } else if (error) {\n        throw error;\n      } else if (error === null) {\n        return;\n      } else {\n        await new Promise(next);\n      }\n    }\n  } catch (err) {\n    error = aggregateTwoErrors(error\x2C err);\n    throw error;\n  } finally {\n    if (\n      (error || options?.destroyOnReturn !== false) &&\n      (error === undefined || stream._readableState.autoDestroy)\n    ) {\n      destroyImpl.destroyer(stream\x2C null);\n    } else {\n      stream.off('readable'\x2C next);\n      cleanup();\n    }\n  }\n}\n\n// Making it explicit these properties are not enumerable\n// because otherwise some prototype manipulation in\n// userland will fail.\nObjectDefineProperties(Readable.prototype\x2C {\n  readable: {\n    __proto__: null\x2C\n    get() {\n      const r = this._readableState;\n      // r.readable === false means that this is part of a Duplex stream\n      // where the readable side was disabled upon construction.\n      // Compat. The user might manually disable readable side through\n      // deprecated setter.\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\n        !r.endEmitted;\n    }\x2C\n    set(val) {\n      // Backwards compat.\n      if (this._readableState) {\n        this._readableState.readable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  readableDidRead: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.dataEmitted;\n    }\x2C\n  }\x2C\n\n  readableAborted: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return !!(\n        this._readableState.readable !== false &&\n        (this._readableState.destroyed || this._readableState.errored) &&\n        !this._readableState.endEmitted\n      );\n    }\x2C\n  }\x2C\n\n  readableHighWaterMark: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.highWaterMark;\n    }\x2C\n  }\x2C\n\n  readableBuffer: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState?.buffer;\n    }\x2C\n  }\x2C\n\n  readableFlowing: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: function() {\n      return this._readableState.flowing;\n    }\x2C\n    set: function(state) {\n      if (this._readableState) {\n        this._readableState.flowing = state;\n      }\n    }\x2C\n  }\x2C\n\n  readableLength: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState.length;\n    }\x2C\n  }\x2C\n\n  readableObjectMode: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.objectMode : false;\n    }\x2C\n  }\x2C\n\n  readableEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.encoding : null;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.errored : null;\n    }\x2C\n  }\x2C\n\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._readableState ? this._readableState.closed : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.destroyed : false;\n    }\x2C\n    set(value) {\n      // We ignore the value if the stream\n      // has not been initialized yet.\n      if (!this._readableState) {\n        return;\n      }\n\n      // Backward compatibility\x2C the user is explicitly\n      // managing destroyed.\n      this._readableState.destroyed = value;\n    }\x2C\n  }\x2C\n\n  readableEnded: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      return this._readableState ? this._readableState.endEmitted : false;\n    }\x2C\n  }\x2C\n\n});\n\nObjectDefineProperties(ReadableState.prototype\x2C {\n  // Legacy getter for `pipesCount`.\n  pipesCount: {\n    __proto__: null\x2C\n    get() {\n      return this.pipes.length;\n    }\x2C\n  }\x2C\n\n  // Legacy property for `paused`.\n  paused: {\n    __proto__: null\x2C\n    get() {\n      return (this[kState] & kPaused) !== 0;\n    }\x2C\n    set(value) {\n      this[kState] |= kHasPaused;\n      if (value) {\n        this[kState] |= kPaused;\n      } else {\n        this[kState] &= ~kPaused;\n      }\n    }\x2C\n  }\x2C\n});\n\n// Exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable\x2C so please take care when making\n// changes to the function body.\nfunction fromList(n\x2C state) {\n  // nothing buffered.\n  if (state.length === 0)\n    return null;\n\n  let idx = state.bufferIndex;\n  let ret;\n\n  const buf = state.buffer;\n  const len = buf.length;\n\n  if ((state[kState] & kObjectMode) !== 0) {\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if (!n || n >= state.length) {\n    // Read it all\x2C truncate the list.\n    if ((state[kState] & kDecoder) !== 0) {\n      ret = '';\n      while (idx < len) {\n        ret += buf[idx];\n        buf[idx++] = null;\n      }\n    } else if (len - idx === 0) {\n      ret = Buffer.alloc(0);\n    } else if (len - idx === 1) {\n      ret = buf[idx];\n      buf[idx++] = null;\n    } else {\n      ret = Buffer.allocUnsafe(state.length);\n\n      let i = 0;\n      while (idx < len) {\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\n        i += buf[idx].length;\n        buf[idx++] = null;\n      }\n    }\n  } else if (n < buf[idx].length) {\n    // `slice` is the same for buffers and strings.\n    ret = buf[idx].slice(0\x2C n);\n    buf[idx] = buf[idx].slice(n);\n  } else if (n === buf[idx].length) {\n    // First chunk is a perfect match.\n    ret = buf[idx];\n    buf[idx++] = null;\n  } else if ((state[kState] & kDecoder) !== 0) {\n    ret = '';\n    while (idx < len) {\n      const str = buf[idx];\n      if (n > str.length) {\n        ret += str;\n        n -= str.length;\n        buf[idx++] = null;\n      } else {\n        if (n === buf.length) {\n          ret += str;\n          buf[idx++] = null;\n        } else {\n          ret += str.slice(0\x2C n);\n          buf[idx] = str.slice(n);\n        }\n        break;\n      }\n    }\n  } else {\n    ret = Buffer.allocUnsafe(n);\n\n    const retLen = n;\n    while (idx < len) {\n      const data = buf[idx];\n      if (n > data.length) {\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n        n -= data.length;\n        buf[idx++] = null;\n      } else {\n        if (n === data.length) {\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\n          buf[idx++] = null;\n        } else {\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\n        }\n        break;\n      }\n    }\n  }\n\n  if (idx === len) {\n    state.buffer.length = 0;\n    state.bufferIndex = 0;\n  } else if (idx > 1024) {\n    state.buffer.splice(0\x2C idx);\n    state.bufferIndex = 0;\n  } else {\n    state.bufferIndex = idx;\n  }\n\n  return ret;\n}\n\nfunction endReadable(stream) {\n  const state = stream._readableState;\n\n  debug('endReadable');\n  if ((state[kState] & kEndEmitted) === 0) {\n    state[kState] |= kEnded;\n    process.nextTick(endReadableNT\x2C state\x2C stream);\n  }\n}\n\nfunction endReadableNT(state\x2C stream) {\n  debug('endReadableNT');\n\n  // Check that we didn't get one last unshift.\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\n    state[kState] |= kEndEmitted;\n    stream.emit('end');\n\n    if (stream.writable && stream.allowHalfOpen === false) {\n      process.nextTick(endWritableNT\x2C stream);\n    } else if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well.\n      const wState = stream._writableState;\n      const autoDestroy = !wState || (\n        wState.autoDestroy &&\n        // We don't expect the writable to ever 'finish'\n        // if writable is explicitly set to false.\n        (wState.finished || wState.writable === false)\n      );\n\n      if (autoDestroy) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nfunction endWritableNT(stream) {\n  const writable = stream.writable && !stream.writableEnded &&\n    !stream.destroyed;\n  if (writable) {\n    stream.end();\n  }\n}\n\nReadable.from = function(iterable\x2C opts) {\n  return from(Readable\x2C iterable\x2C opts);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nReadable.fromWeb = function(readableStream\x2C options) {\n  return lazyWebStreams().newStreamReadableFromReadableStream(\n    readableStream\x2C\n    options);\n};\n\nReadable.toWeb = function(streamReadable\x2C options) {\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\n    streamReadable\x2C\n    options);\n};\n\nReadable.wrap = function(src\x2C options) {\n  return new Readable({\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\n    ...options\x2C\n    destroy(err\x2C callback) {\n      destroyImpl.destroyer(src\x2C err);\n      callback(err);\n    }\x2C\n  }).wrap(src);\n};\n
code-source-info,0x277c96e89c30,91,0,51327,C0O0C4O51327,,
code-creation,JS,9,31166,0x277c96e8ac30,2570, node:internal/streams/readable:1:1,0x32a185945ad0,~
code-source-info,0x277c96e8ac
tick,0x1010153a0,31208,0,0x0,9,0x148000544,0x1480002b4,0x277c96e895ee,0x148000610,0x1480002b4,0x277c96e88c23,0x148000610,0x1480002b4,0x277c96e8872b,0x148000610,0x1480002b4,0x277c96e87156,0x148000610,0x1480002b4,0x277c96e8661d,0x148000610,0x1480002b4,0x277c96e852a4,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,31333,0x277c96e8b9b8,5, node:internal/streams/add-abort-signal:1:1,0x32a185949180,~
script-source,92,node:internal/streams/add-abort-signal,'use strict';\n\nconst {\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  isNodeStream\x2C\n  isWebStream\x2C\n  kControllerErrorFunction\x2C\n} = require('internal/streams/utils');\n\nconst eos = require('internal/streams/end-of-stream');\nlet addAbortListener;\n\n// This method is inlined here for readable-stream\n// It also does not allow for signal to not exist on the stream\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\nconst validateAbortSignal = (signal\x2C name) => {\n  if (typeof signal !== 'object' ||\n       !('aborted' in signal)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\n  }\n};\n\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\n  validateAbortSignal(signal\x2C 'signal');\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\n  }\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\n};\n\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\n    return stream;\n  }\n  const onAbort = isNodeStream(stream) ?\n    () => {\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\n    } :\n    () => {\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\n    };\n  if (signal.aborted) {\n    onAbort();\n  } else {\n    addAbortListener ??= require('internal/events/abort_listener').addAbortListener;\n    const disposable = addAbortListener(signal\x2C onAbort);\n    eos(stream\x2C disposable[SymbolDispose]);\n  }\n  return stream;\n};\n
code-source-info,0x277c96e8b9b8,92,0,1721,C0O0C4O1721,,
code-creation,JS,9,31375,0x277c96e8baf8,158, node:internal/streams/add-abort-signal:1:1,0x32a185949300,~
code-source-info,0x277c96e8baf8,92,0,1721,C0O0C40O25C46O126C52O126C57O68C63O89C68O95C74O226C80O226C85O165C91O181C97O196C103O274C109O274C113O274C115O321C116O321C118O550C122O550C124O712C127O719C136O742C140O1058C143O1065C152O1098C157O1720,,
tick,0x101ca82d0,31416,0,0x0,0,0x148000610,0x1480002b4,0x277c96e895ee,0x148000610,0x1480002b4,0x277c96e88c23,0x148000610,0x1480002b4,0x277c96e8872b,0x148000610,0x1480002b4,0x277c96e87156,0x148000610,0x1480002b4,0x277c96e8661d,0x148000610,0x1480002b4,0x277c96e852a4,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,31416,0x277c96e8bc48,5, node:internal/streams/state:1:1,0x32a185949a50,~
script-source,93,node:internal/streams/state,'use strict';\n\nconst {\n  MathFloor\x2C\n  NumberIsInteger\x2C\n} = primordials;\nconst { validateInteger } = require('internal/validators');\n\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\n\n// TODO (fix): For some reason Windows CI fails with bigger hwm.\nlet defaultHighWaterMarkBytes = process.platform === 'win32' ? 16 * 1024 : 64 * 1024;\nlet defaultHighWaterMarkObjectMode = 16;\n\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark :\n    isDuplex ? options[duplexKey] : null;\n}\n\nfunction getDefaultHighWaterMark(objectMode) {\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\n}\n\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\n  validateInteger(value\x2C 'value'\x2C 0);\n  if (objectMode) {\n    defaultHighWaterMarkObjectMode = value;\n  } else {\n    defaultHighWaterMarkBytes = value;\n  }\n}\n\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\n  if (hwm != null) {\n    if (!NumberIsInteger(hwm) || hwm < 0) {\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\n    }\n    return MathFloor(hwm);\n  }\n\n  // Default value\n  return getDefaultHighWaterMark(state.objectMode);\n}\n\nmodule.exports = {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n  setDefaultHighWaterMark\x2C\n};\n
code-source-info,0x277c96e8bc48,93,0,1440,C0O0C4O1440,,
code-creation,JS,9,31458,0x277c96e8bdb0,151, node:internal/streams/state:1:1,0x32a185949ba0,~
code-source-info,0x277c96e8bdb0,93,0,1440,C0O0C45O25C51O38C57O100C60O100C65O80C71O167C74O167C79O193C84O141C90O307C97O316C114O299C116O390C118O390C120O1344C127O1365C133O1385C139O1412C145O1359C150O1439,,
code-creation,Eval,9,31541,0x277c96e8bee8,5, node:string_decoder:1:1,0x32a18594a530,~
script-source,94,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n  TypedArrayPrototypeSubarray\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  kIncompleteCharactersStart\x2C\n  kIncompleteCharactersEnd\x2C\n  kMissingBytes\x2C\n  kBufferedBytes\x2C\n  kEncodingField\x2C\n  kSize\x2C\n  decode\x2C\n  flush\x2C\n} = internalBinding('string_decoder');\nconst {\n  encodingsMap\x2C\n  normalizeEncoding\x2C\n} = require('internal/util');\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_THIS\x2C\n  ERR_UNKNOWN_ENCODING\x2C\n} = require('internal/errors').codes;\n\nconst kNativeDecoder = Symbol('kNativeDecoder');\n\n/**\n * StringDecoder provides an interface for efficiently splitting a series of\n * buffers into a series of JS strings without breaking apart multibyte\n * characters.\n * @param {string} [encoding]\n */\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  if (this.encoding === undefined) {\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  }\n  this[kNativeDecoder] = Buffer.alloc(kSize);\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\n}\n\n/**\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\n * @param {string | Buffer | TypedArray | DataView} buf\n * @returns {string}\n * @throws {TypeError} Throws when buf is not in one of supported types\n */\nStringDecoder.prototype.write = function write(buf) {\n  if (typeof buf === 'string')\n    return buf;\n  if (!ArrayBufferIsView(buf))\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n                                   buf);\n  if (!this[kNativeDecoder]) {\n    throw new ERR_INVALID_THIS('StringDecoder');\n  }\n  return decode(this[kNativeDecoder]\x2C buf);\n};\n\n/**\n * Returns any remaining input stored in the internal buffer as a string.\n * After end() is called\x2C the stringDecoder object can be reused for new\n * input.\n * @param {string | Buffer | TypedArray | DataView} [buf]\n * @returns {string}\n */\nStringDecoder.prototype.end = function end(buf) {\n  const ret = buf === undefined ? '' : this.write(buf);\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\n    return ret + flush(this[kNativeDecoder]);\n  return ret;\n};\n\n/* Everything below this line is undocumented legacy stuff. */\n/**\n *\n * @param {string | Buffer | TypedArray | DataView} buf\n * @param {number} offset\n * @returns {string}\n */\nStringDecoder.prototype.text = function text(buf\x2C offset) {\n  this[kNativeDecoder][kMissingBytes] = 0;\n  this[kNativeDecoder][kBufferedBytes] = 0;\n  return this.write(buf.slice(offset));\n};\n\nObjectDefineProperties(StringDecoder.prototype\x2C {\n  lastChar: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\n                                         kIncompleteCharactersStart\x2C\n                                         kIncompleteCharactersEnd);\n    }\x2C\n  }\x2C\n  lastNeed: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n  lastTotal: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      return this[kNativeDecoder][kBufferedBytes] +\n             this[kNativeDecoder][kMissingBytes];\n    }\x2C\n  }\x2C\n});\n\nexports.StringDecoder = StringDecoder;\n
code-source-info,0x277c96e8bee8,94,0,4518,C0O0C4O4518,,
code-creation,JS,9,31625,0x277c96e8c168,332, node:string_decoder:1:1,0x32a18594a710,~
code-source-info,0x277c96e8c168,94,0,4518,C0O0C61O1159C67O1180C72O1206C77O1216C83O1282C86O1282C91O1271C97O1452C100O1452C105O1311C111O1341C117O1369C123O1386C129O1404C135O1422C141O1431C147O1441C153O1536C156O1536C161O1497C167O1513C173O1642C176O1642C181O1668C186O1572C192O1596C198O1616C204O1700C207O1700C211O1700C213O2520C222O2536C226O3184C235O3198C239O3579C248O3594C252O3793C262O3818C267O3891C281O4123C286O4196C300O4279C305O4352C319O3756C324O4479C326O4501C331O4517,,
code-creation,Eval,9,31708,0x277c96e8c398,5, node:internal/streams/from:1:1,0x32a18594b838,~
script-source,95,node:internal/streams/from,'use strict';\n\nconst {\n  PromisePrototypeThen\x2C\n  SymbolAsyncIterator\x2C\n  SymbolIterator\x2C\n} = primordials;\nconst { Buffer } = require('buffer');\n\nconst {\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_STREAM_NULL_VALUES\x2C\n} = require('internal/errors').codes;\n\nfunction from(Readable\x2C iterable\x2C opts) {\n  let iterator;\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\n    return new Readable({\n      objectMode: true\x2C\n      ...opts\x2C\n      read() {\n        this.push(iterable);\n        this.push(null);\n      }\x2C\n    });\n  }\n\n  let isAsync;\n  if (iterable?.[SymbolAsyncIterator]) {\n    isAsync = true;\n    iterator = iterable[SymbolAsyncIterator]();\n  } else if (iterable?.[SymbolIterator]) {\n    isAsync = false;\n    iterator = iterable[SymbolIterator]();\n  } else {\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\n  }\n\n\n  const readable = new Readable({\n    objectMode: true\x2C\n    highWaterMark: 1\x2C\n    // TODO(ronag): What options should be allowed?\n    ...opts\x2C\n  });\n\n  // Flag to protect against _read\n  // being called before last iteration completion.\n  let reading = false;\n  let isAsyncValues = false;\n\n  readable._read = function() {\n    if (!reading) {\n      reading = true;\n\n      if (isAsync) {\n        nextAsync();\n      } else if (isAsyncValues) {\n        nextSyncWithAsyncValues();\n      } else {\n        nextSyncWithSyncValues();\n      }\n    }\n  };\n\n  readable._destroy = function(error\x2C cb) {\n    PromisePrototypeThen(\n      close(error)\x2C\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\n      (e) => process.nextTick(cb\x2C e || error)\x2C\n    );\n  };\n\n  async function close(error) {\n    const hadError = (error !== undefined) && (error !== null);\n    const hasThrow = typeof iterator.throw === 'function';\n    if (hadError && hasThrow) {\n      const { value\x2C done } = await iterator.throw(error);\n      await value;\n      if (done) {\n        return;\n      }\n    }\n    if (typeof iterator.return === 'function') {\n      const { value } = await iterator.return();\n      await value;\n    }\n  }\n\n  // There are a lot of duplication here\x2C it's done on purpose for performance\n  // reasons - avoid await when not needed.\n\n  function nextSyncWithSyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value &&\n          typeof value.then === 'function') {\n          return changeToAsyncValues(value);\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function changeToAsyncValues(value) {\n    isAsyncValues = true;\n\n    try {\n      const res = await value;\n\n      if (res === null) {\n        reading = false;\n        throw new ERR_STREAM_NULL_VALUES();\n      }\n\n      if (readable.push(res)) {\n        nextSyncWithAsyncValues();\n        return;\n      }\n\n      reading = false;\n    } catch (err) {\n      readable.destroy(err);\n    }\n  }\n\n  async function nextSyncWithAsyncValues() {\n    for (;;) {\n      try {\n        const { value\x2C done } = iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        const res = (value &&\n          typeof value.then === 'function') ?\n          await value :\n          value;\n\n        if (res === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(res)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n\n  async function nextAsync() {\n    for (;;) {\n      try {\n        const { value\x2C done } = await iterator.next();\n\n        if (done) {\n          readable.push(null);\n          return;\n        }\n\n        if (value === null) {\n          reading = false;\n          throw new ERR_STREAM_NULL_VALUES();\n        }\n\n        if (readable.push(value)) {\n          continue;\n        }\n\n        reading = false;\n      } catch (err) {\n        readable.destroy(err);\n      }\n      break;\n    }\n  }\n  return readable;\n}\n\nmodule.exports = from;\n
code-source-info,0x277c96e8c398,95,0,4321,C0O0C4O4321,,
code-creation,JS,9,31833,0x277c96e8c488,97, node:internal/streams/from:1:1,0x32a18594b978,~
code-source-info,0x277c96e8c488,95,0,4321,C0O0C32O25C38O49C44O72C50O124C53O124C58O113C64O206C67O206C72O232C77O154C83O178C89O4298C91O4313C96O4320,,
code-creation,JS,9,31916,0x277c96e8c5d8,33,makeBitMapDescriptor node:internal/streams/readable:127:30,0x32a185945b40,~
code-source-info,0x277c96e8c5d8,91,3762,3955,C0O3762C9O3772C14O3808C22O3858C32O3953,,
code-creation,Eval,9,32250,0x277c96e8c678,5, node:internal/streams/writable:1:1,0x32a185953f68,~
script-source,96,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSlice\x2C\n  Error\x2C\n  FunctionPrototypeSymbolHasInstance\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nmodule.exports = Writable;\nWritable.WritableState = WritableState;\n\nconst EE = require('events');\nconst Stream = require('internal/streams/legacy').Stream;\nconst { Buffer } = require('buffer');\nconst destroyImpl = require('internal/streams/destroy');\nconst eos = require('internal/streams/end-of-stream');\n\nconst {\n  addAbortSignal\x2C\n} = require('internal/streams/add-abort-signal');\n\nconst {\n  getHighWaterMark\x2C\n  getDefaultHighWaterMark\x2C\n} = require('internal/streams/state');\nconst {\n  AbortError\x2C\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\n    ERR_MULTIPLE_CALLBACK\x2C\n    ERR_STREAM_ALREADY_FINISHED\x2C\n    ERR_STREAM_CANNOT_PIPE\x2C\n    ERR_STREAM_DESTROYED\x2C\n    ERR_STREAM_NULL_VALUES\x2C\n    ERR_STREAM_WRITE_AFTER_END\x2C\n    ERR_UNKNOWN_ENCODING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kState\x2C\n  // bitfields\n  kObjectMode\x2C\n  kErrorEmitted\x2C\n  kAutoDestroy\x2C\n  kEmitClose\x2C\n  kDestroyed\x2C\n  kClosed\x2C\n  kCloseEmitted\x2C\n  kErrored\x2C\n  kConstructed\x2C\n  kOnConstructed\x2C\n} = require('internal/streams/utils');\n\nconst { errorOrDestroy } = destroyImpl;\n\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\nObjectSetPrototypeOf(Writable\x2C Stream);\n\nfunction nop() {}\n\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\nconst kErroredValue = Symbol('kErroredValue');\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\nconst kWriteCbValue = Symbol('kWriteCbValue');\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\nconst kBufferedValue = Symbol('kBufferedValue');\n\nconst kSync = 1 << 9;\nconst kFinalCalled = 1 << 10;\nconst kNeedDrain = 1 << 11;\nconst kEnding = 1 << 12;\nconst kFinished = 1 << 13;\nconst kDecodeStrings = 1 << 14;\nconst kWriting = 1 << 15;\nconst kBufferProcessing = 1 << 16;\nconst kPrefinished = 1 << 17;\nconst kAllBuffers = 1 << 18;\nconst kAllNoop = 1 << 19;\nconst kOnFinished = 1 << 20;\nconst kHasWritable = 1 << 21;\nconst kWritable = 1 << 22;\nconst kCorked = 1 << 23;\nconst kDefaultUTF8Encoding = 1 << 24;\nconst kWriteCb = 1 << 25;\nconst kExpectWriteCb = 1 << 26;\nconst kAfterWriteTickInfo = 1 << 27;\nconst kAfterWritePending = 1 << 28;\nconst kBuffered = 1 << 29;\nconst kEnded = 1 << 30;\n\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\nfunction makeBitMapDescriptor(bit) {\n  return {\n    enumerable: false\x2C\n    get() { return (this[kState] & bit) !== 0; }\x2C\n    set(value) {\n      if (value) this[kState] |= bit;\n      else this[kState] &= ~bit;\n    }\x2C\n  };\n}\nObjectDefineProperties(WritableState.prototype\x2C {\n  // Object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\n\n  // if _final has been called.\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\n\n  // drain event flag.\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\n\n  // At the start of calling end()\n  ending: makeBitMapDescriptor(kEnding)\x2C\n\n  // When end() has been called\x2C and returned.\n  ended: makeBitMapDescriptor(kEnded)\x2C\n\n  // When 'finish' is emitted.\n  finished: makeBitMapDescriptor(kFinished)\x2C\n\n  // Has it been destroyed.\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\n\n  // Should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\n\n  // A flag to see when we're in the middle of a write.\n  writing: makeBitMapDescriptor(kWriting)\x2C\n\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\n  // or on a later tick.  We set this to true at first\x2C because any\n  // actions that shouldn't happen until "later" should generally also\n  // not happen before the first write call.\n  sync: makeBitMapDescriptor(kSync)\x2C\n\n  // A flag to know if we're processing previously buffered items\x2C which\n  // may call the _write() callback in the same tick\x2C so that we don't\n  // end up in an overlapped onwrite situation.\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\n\n  // Stream is still being constructed and cannot be\n  // destroyed until construction finished or failed.\n  // Async construction is opt in\x2C therefore we start as\n  // constructed.\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\n\n  // Emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams.\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\n\n  // True if the error was already emitted and should not be thrown again.\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\n\n  // Should close be emitted on destroy. Defaults to true.\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\n\n  // Should .destroy() be called after 'finish' (and potentially 'end').\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\n\n  // Indicates whether the stream has finished destroying.\n  closed: makeBitMapDescriptor(kClosed)\x2C\n\n  // True if close has been emitted or would have been emitted\n  // depending on emitClose.\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\n\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\n\n  // Indicates whether the stream has errored. When true all write() calls\n  // should return false. This is needed since when autoDestroy\n  // is disabled we need a way to tell whether the stream has failed.\n  // This is/should be a cold path.\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\n    set(value) {\n      if (value) {\n        this[kErroredValue] = value;\n        this[kState] |= kErrored;\n      } else {\n        this[kState] &= ~kErrored;\n      }\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\n    set(value) {\n      if (value == null) {\n        this[kState] &= ~(kHasWritable | kWritable);\n      } else if (value) {\n        this[kState] |= (kHasWritable | kWritable);\n      } else {\n        this[kState] |= kHasWritable;\n        this[kState] &= ~kWritable;\n      }\n    }\x2C\n  }\x2C\n\n  defaultEncoding: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\n    set(value) {\n      if (value === 'utf8' || value === 'utf-8') {\n        this[kState] |= kDefaultUTF8Encoding;\n      } else {\n        this[kState] &= ~kDefaultUTF8Encoding;\n        this[kDefaultEncodingValue] = value;\n      }\n    }\x2C\n  }\x2C\n\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\n  writecb: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\n    set(value) {\n      this[kWriteCbValue] = value;\n      if (value) {\n        this[kState] |= kWriteCb;\n      } else {\n        this[kState] &= ~kWriteCb;\n      }\n    }\x2C\n  }\x2C\n\n  // Storage for data passed to the afterWrite() callback in case of\n  // synchronous _write() completion.\n  afterWriteTickInfo: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\n    set(value) {\n      this[kAfterWriteTickInfoValue] = value;\n      if (value) {\n        this[kState] |= kAfterWriteTickInfo;\n      } else {\n        this[kState] &= ~kAfterWriteTickInfo;\n      }\n    }\x2C\n  }\x2C\n\n  buffered: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\n    set(value) {\n      this[kBufferedValue] = value;\n      if (value) {\n        this[kState] |= kBuffered;\n      } else {\n        this[kState] &= ~kBuffered;\n      }\n    }\x2C\n  }\x2C\n\n});\n\nfunction WritableState(options\x2C stream\x2C isDuplex) {\n  // Bit map field to store WritableState more efficiently with 1 bit per field\n  // instead of a V8 slot per field.\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\n\n  if (options?.objectMode)\n    this[kState] |= kObjectMode;\n\n  if (isDuplex && options?.writableObjectMode)\n    this[kState] |= kObjectMode;\n\n  // The point at which write() starts returning false\n  // Note: 0 is a valid value\x2C means that we always return false if\n  // the entire buffer is not flushed immediately on write().\n  this.highWaterMark = options ?\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\n    getDefaultHighWaterMark(false);\n\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\n\n  // Should close be emitted on destroy. Defaults to true.\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish').\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\n\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8'\x2C though.\n  const defaultEncoding = options ? options.defaultEncoding : null;\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\n    this[kState] |= kDefaultUTF8Encoding;\n  } else if (Buffer.isEncoding(defaultEncoding)) {\n    this[kState] &= ~kDefaultUTF8Encoding;\n    this[kDefaultEncodingValue] = defaultEncoding;\n  } else {\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\n  }\n\n  // Not an actual buffer we keep track of\x2C but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // When true all writes will be buffered until .uncork() call.\n  this.corked = 0;\n\n  // The callback that's passed to _write(chunk\x2C cb).\n  this.onwrite = onwrite.bind(undefined\x2C stream);\n\n  // The amount that is being written when _write is called.\n  this.writelen = 0;\n\n  resetBuffer(this);\n\n  // Number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted.\n  this.pendingcb = 0;\n}\n\nfunction resetBuffer(state) {\n  state[kBufferedValue] = null;\n  state.bufferedIndex = 0;\n  state[kState] |= kAllBuffers | kAllNoop;\n  state[kState] &= ~kBuffered;\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\n};\n\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\n  __proto__: null\x2C\n  get() {\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\n  }\x2C\n});\n\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\n  if ((this[kState] & kWriting) === 0) {\n    clearBuffer(stream\x2C this);\n  }\n\n  if ((this[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C this);\n  }\n};\n\nfunction Writable(options) {\n  if (!(this instanceof Writable))\n    return new Writable(options);\n\n  this._events ??= {\n    close: undefined\x2C\n    error: undefined\x2C\n    prefinish: undefined\x2C\n    finish: undefined\x2C\n    drain: undefined\x2C\n    // Skip uncommon events...\n    // [destroyImpl.kConstruct]: undefined\x2C\n    // [destroyImpl.kDestroy]: undefined\x2C\n  };\n\n  this._writableState = new WritableState(options\x2C this\x2C false);\n\n  if (options) {\n    if (typeof options.write === 'function')\n      this._write = options.write;\n\n    if (typeof options.writev === 'function')\n      this._writev = options.writev;\n\n    if (typeof options.destroy === 'function')\n      this._destroy = options.destroy;\n\n    if (typeof options.final === 'function')\n      this._final = options.final;\n\n    if (typeof options.construct === 'function')\n      this._construct = options.construct;\n\n    if (options.signal)\n      addAbortSignal(options.signal\x2C this);\n  }\n\n  Stream.call(this\x2C options);\n\n  if (this._construct != null) {\n    destroyImpl.construct(this\x2C () => {\n      this._writableState[kOnConstructed](this);\n    });\n  }\n}\n\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\n  __proto__: null\x2C\n  value: function(object) {\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\n    if (this !== Writable) return false;\n\n    return object && object._writableState instanceof WritableState;\n  }\x2C\n});\n\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\nWritable.prototype.pipe = function() {\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\n  const state = stream._writableState;\n\n  if (cb == null || typeof cb !== 'function') {\n    cb = nop;\n  }\n\n  if (chunk === null) {\n    throw new ERR_STREAM_NULL_VALUES();\n  }\n\n  if ((state[kState] & kObjectMode) === 0) {\n    if (!encoding) {\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\n      throw new ERR_UNKNOWN_ENCODING(encoding);\n    }\n\n    if (typeof chunk === 'string') {\n      if ((state[kState] & kDecodeStrings) !== 0) {\n        chunk = Buffer.from(chunk\x2C encoding);\n        encoding = 'buffer';\n      }\n    } else if (chunk instanceof Buffer) {\n      encoding = 'buffer';\n    } else if (Stream._isArrayBufferView(chunk)) {\n      chunk = Stream._uint8ArrayToBuffer(chunk);\n      encoding = 'buffer';\n    } else {\n      throw new ERR_INVALID_ARG_TYPE(\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C chunk);\n    }\n  }\n\n  let err;\n  if ((state[kState] & kEnding) !== 0) {\n    err = new ERR_STREAM_WRITE_AFTER_END();\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('write');\n  }\n\n  if (err) {\n    process.nextTick(cb\x2C err);\n    errorOrDestroy(stream\x2C err\x2C true);\n    return err;\n  }\n\n  state.pendingcb++;\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\n}\n\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\n  if (encoding != null && typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\n};\n\nWritable.prototype.cork = function() {\n  const state = this._writableState;\n\n  state[kState] |= kCorked;\n  state.corked++;\n};\n\nWritable.prototype.uncork = function() {\n  const state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.corked) {\n      state[kState] &= ~kCorked;\n    }\n\n    if ((state[kState] & kWriting) === 0)\n      clearBuffer(this\x2C state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string')\n    encoding = StringPrototypeToLowerCase(encoding);\n  if (!Buffer.isEncoding(encoding))\n    throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\n// If we're already writing something\x2C then just put this\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\n// If we return false\x2C then we need a drain event\x2C so set that flag.\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n\n  state.length += len;\n\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\n    if ((state[kState] & kBuffered) === 0) {\n      state[kState] |= kBuffered;\n      state[kBufferedValue] = [];\n    }\n\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\n      state[kState] &= ~kAllBuffers;\n    }\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\n      state[kState] &= ~kAllNoop;\n    }\n  } else {\n    state.writelen = len;\n    if (callback !== nop) {\n      state.writecb = callback;\n    }\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n    state[kState] &= ~kSync;\n  }\n\n  const ret = state.length < state.highWaterMark || state.length === 0;\n\n  if (!ret) {\n    state[kState] |= kNeedDrain;\n  }\n\n  // Return false if errored or destroyed in order to break\n  // any synchronous while(stream.write(data)) loops.\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\n}\n\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\n  state.writelen = len;\n  if (cb !== nop) {\n    state.writecb = cb;\n  }\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\n  if ((state[kState] & kDestroyed) !== 0)\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\n  else if (writev)\n    stream._writev(chunk\x2C state.onwrite);\n  else\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\n  state[kState] &= ~kSync;\n}\n\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\n  --state.pendingcb;\n\n  cb(er);\n  // Ensure callbacks are invoked even when autoDestroy is\n  // not enabled. Passing `er` here doesn't make sense since\n  // it's related to one specific write\x2C not to the buffered\n  // writes.\n  errorBuffer(state);\n  // This can emit error\x2C but error must always follow cb.\n  errorOrDestroy(stream\x2C er);\n}\n\nfunction onwrite(stream\x2C er) {\n  const state = stream._writableState;\n\n  if ((state[kState] & kExpectWriteCb) === 0) {\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n\n  const sync = (state[kState] & kSync) !== 0;\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\n\n  state.writecb = null;\n  state[kState] &= ~(kWriting | kExpectWriteCb);\n  state.length -= state.writelen;\n  state.writelen = 0;\n\n  if (er) {\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\n    er.stack; // eslint-disable-line no-unused-expressions\n\n    if ((state[kState] & kErrored) === 0) {\n      state[kErroredValue] = er;\n      state[kState] |= kErrored;\n    }\n\n    // In case of duplex streams we need to notify the readable side of the\n    // error.\n    if (stream._readableState && !stream._readableState.errored) {\n      stream._readableState.errored = er;\n    }\n\n    if (sync) {\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\n    } else {\n      onwriteError(stream\x2C state\x2C er\x2C cb);\n    }\n  } else {\n    if ((state[kState] & kBuffered) !== 0) {\n      clearBuffer(stream\x2C state);\n    }\n\n    if (sync) {\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\n\n      // It is a common case that the callback passed to .write() is always\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\n      // rather just increase a counter\x2C to improve performance and avoid\n      // memory allocations.\n      if (cb === nop) {\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\n          state[kState] |= kAfterWritePending;\n        } else {\n          state.pendingcb--;\n          if ((state[kState] & kEnding) !== 0) {\n            finishMaybe(stream\x2C state\x2C true);\n          }\n        }\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\n                 state[kAfterWriteTickInfoValue].cb === cb) {\n        state[kAfterWriteTickInfoValue].count++;\n      } else if (needTick) {\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\n      } else {\n        state.pendingcb--;\n        if ((state[kState] & kEnding) !== 0) {\n          finishMaybe(stream\x2C state\x2C true);\n        }\n      }\n    } else {\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\n    }\n  }\n}\n\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\n  state[kState] &= ~kAfterWriteTickInfo;\n  state[kAfterWriteTickInfoValue] = null;\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\n}\n\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\n  state[kState] &= ~kAfterWritePending;\n\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\n  if (needDrain) {\n    state[kState] &= ~kNeedDrain;\n    stream.emit('drain');\n  }\n\n  while (count-- > 0) {\n    state.pendingcb--;\n    cb(null);\n  }\n\n  if ((state[kState] & kDestroyed) !== 0) {\n    errorBuffer(state);\n  }\n\n  if ((state[kState] & kEnding) !== 0) {\n    finishMaybe(stream\x2C state\x2C true);\n  }\n}\n\n// If there's something in the buffer waiting\x2C then invoke callbacks.\nfunction errorBuffer(state) {\n  if ((state[kState] & kWriting) !== 0) {\n    return;\n  }\n\n  if ((state[kState] & kBuffered) !== 0) {\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\n      const { chunk\x2C callback } = state[kBufferedValue][n];\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\n      state.length -= len;\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\n    }\n  }\n\n\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\n\n  resetBuffer(state);\n}\n\n// If there's something in the buffer waiting\x2C then process it.\nfunction clearBuffer(stream\x2C state) {\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\n      (kBuffered | kConstructed)) {\n    return;\n  }\n\n  const objectMode = (state[kState] & kObjectMode) !== 0;\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\n  const bufferedLength = buffered.length - bufferedIndex;\n\n  if (!bufferedLength) {\n    return;\n  }\n\n  let i = bufferedIndex;\n\n  state[kState] |= kBufferProcessing;\n  if (bufferedLength > 1 && stream._writev) {\n    state.pendingcb -= bufferedLength - 1;\n\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\n      for (let n = i; n < buffered.length; ++n) {\n        buffered[n].callback(err);\n      }\n    };\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\n    // since `doWrite` will mutate the array.\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\n\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\n\n    resetBuffer(state);\n  } else {\n    do {\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\n      buffered[i++] = null;\n      const len = objectMode ? 1 : chunk.length;\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\n\n    if (i === buffered.length) {\n      resetBuffer(state);\n    } else if (i > 256) {\n      buffered.splice(0\x2C i);\n      state.bufferedIndex = 0;\n    } else {\n      state.bufferedIndex = i;\n    }\n  }\n  state[kState] &= ~kBufferProcessing;\n}\n\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\n  if (this._writev) {\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\n  } else {\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\n  }\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\n  const state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  let err;\n\n  if (chunk != null) {\n    const ret = _write(this\x2C chunk\x2C encoding);\n    if (ret instanceof Error) {\n      err = ret;\n    }\n  }\n\n  // .end() fully uncorks.\n  if ((state[kState] & kCorked) !== 0) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  if (err) {\n    // Do nothing...\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\n    // This is forgiving in terms of unnecessary calls to end() and can hide\n    // logic errors. However\x2C usually such errors are harmless and causing a\n    // hard error can be disproportionately destructive. It is not always\n    // trivial for the user to determine whether end() needs to be called\n    // or not.\n\n    state[kState] |= kEnding;\n    finishMaybe(this\x2C state\x2C true);\n    state[kState] |= kEnded;\n  } else if ((state[kState] & kFinished) !== 0) {\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\n  } else if ((state[kState] & kDestroyed) !== 0) {\n    err = new ERR_STREAM_DESTROYED('end');\n  }\n\n  if (typeof cb === 'function') {\n    if (err) {\n      process.nextTick(cb\x2C err);\n    } else if ((state[kState] & kErrored) !== 0) {\n      process.nextTick(cb\x2C state[kErroredValue]);\n    } else if ((state[kState] & kFinished) !== 0) {\n      process.nextTick(cb\x2C null);\n    } else {\n      state[kState] |= kOnFinished;\n      state[kOnFinishedValue] ??= [];\n      state[kOnFinishedValue].push(cb);\n    }\n  }\n\n  return this;\n};\n\nfunction needFinish(state) {\n  return (\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\n    (state[kState] & (\n      kEnding |\n          kDestroyed |\n          kConstructed |\n          kFinished |\n          kWriting |\n          kErrorEmitted |\n          kCloseEmitted |\n          kErrored |\n          kBuffered\n    )) === (kEnding | kConstructed) && state.length === 0);\n}\n\nfunction onFinish(stream\x2C state\x2C err) {\n  if ((state[kState] & kPrefinished) !== 0) {\n    errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\n    return;\n  }\n  state.pendingcb--;\n  if (err) {\n    callFinishedCallbacks(state\x2C err);\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\n  } else if (needFinish(state)) {\n    state[kState] |= kPrefinished;\n    stream.emit('prefinish');\n    // Backwards compat. Don't check state.sync here.\n    // Some streams assume 'finish' will be emitted\n    // asynchronously relative to _final callback.\n    state.pendingcb++;\n    process.nextTick(finish\x2C stream\x2C state);\n  }\n}\n\nfunction prefinish(stream\x2C state) {\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\n    return;\n  }\n\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\n    state[kState] |= kFinalCalled | kSync;\n    state.pendingcb++;\n\n    try {\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\n    } catch (err) {\n      onFinish(stream\x2C state\x2C err);\n    }\n\n    state[kState] &= ~kSync;\n  } else {\n    state[kState] |= kFinalCalled | kPrefinished;\n    stream.emit('prefinish');\n  }\n}\n\nfunction finishMaybe(stream\x2C state\x2C sync) {\n  if (needFinish(state)) {\n    prefinish(stream\x2C state);\n    if (state.pendingcb === 0) {\n      if (sync) {\n        state.pendingcb++;\n        process.nextTick((stream\x2C state) => {\n          if (needFinish(state)) {\n            finish(stream\x2C state);\n          } else {\n            state.pendingcb--;\n          }\n        }\x2C stream\x2C state);\n      } else if (needFinish(state)) {\n        state.pendingcb++;\n        finish(stream\x2C state);\n      }\n    }\n  }\n}\n\nfunction finish(stream\x2C state) {\n  state.pendingcb--;\n  state[kState] |= kFinished;\n\n  callFinishedCallbacks(state\x2C null);\n\n  stream.emit('finish');\n\n  if ((state[kState] & kAutoDestroy) !== 0) {\n    // In case of duplex streams we need a way to detect\n    // if the readable side is ready for autoDestroy as well.\n    const rState = stream._readableState;\n    const autoDestroy = !rState || (\n      rState.autoDestroy &&\n      // We don't expect the readable to ever 'end'\n      // if readable is explicitly set to false.\n      (rState.endEmitted || rState.readable === false)\n    );\n    if (autoDestroy) {\n      stream.destroy();\n    }\n  }\n}\n\nfunction callFinishedCallbacks(state\x2C err) {\n  if ((state[kState] & kOnFinished) === 0) {\n    return;\n  }\n\n  const onfinishCallbacks = state[kOnFinishedValue];\n  state[kOnFinishedValue] = null;\n  state[kState] &= ~kOnFinished;\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\n    onfinishCallbacks[i](err);\n  }\n}\n\nObjectDefineProperties(Writable.prototype\x2C {\n  closed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  destroyed: {\n    __proto__: null\x2C\n    get() {\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\n    }\x2C\n    set(value) {\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\n      if (!this._writableState) return;\n\n      if (value) this._writableState[kState] |= kDestroyed;\n      else this._writableState[kState] &= ~kDestroyed;\n    }\x2C\n  }\x2C\n\n  writable: {\n    __proto__: null\x2C\n    get() {\n      const w = this._writableState;\n      // w.writable === false means that this is part of a Duplex stream\n      // where the writable side was disabled upon construction.\n      // Compat. The user might manually disable writable side through\n      // deprecated setter.\n      return !!w && w.writable !== false &&\n        (w[kState] & (kEnding | kEnded | kDestroyed | kErrored)) === 0;\n    }\x2C\n    set(val) {\n      // Backwards compatible.\n      if (this._writableState) {\n        this._writableState.writable = !!val;\n      }\n    }\x2C\n  }\x2C\n\n  writableFinished: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kFinished) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableObjectMode: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableBuffer: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state && state.getBuffer();\n    }\x2C\n  }\x2C\n\n  writableEnded: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & kEnding) !== 0 : false;\n    }\x2C\n  }\x2C\n\n  writableNeedDrain: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\n    }\x2C\n  }\x2C\n\n  writableHighWaterMark: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.highWaterMark;\n    }\x2C\n  }\x2C\n\n  writableCorked: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.corked : 0;\n    }\x2C\n  }\x2C\n\n  writableLength: {\n    __proto__: null\x2C\n    get() {\n      const state = this._writableState;\n      return state?.length;\n    }\x2C\n  }\x2C\n\n  errored: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get() {\n      const state = this._writableState;\n      return state ? state.errored : null;\n    }\x2C\n  }\x2C\n\n  writableAborted: {\n    __proto__: null\x2C\n    get: function() {\n      const state = this._writableState;\n      return (\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\n        (state[kState] & kFinished) === 0\n      );\n    }\x2C\n  }\x2C\n});\n\nconst destroy = destroyImpl.destroy;\nWritable.prototype.destroy = function(err\x2C cb) {\n  const state = this._writableState;\n\n  // Invoke pending callbacks.\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\n    process.nextTick(errorBuffer\x2C state);\n  }\n\n  destroy.call(this\x2C err\x2C cb);\n  return this;\n};\n\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function(err\x2C cb) {\n  cb(err);\n};\n\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\n  this.destroy(err);\n};\n\nlet webStreamsAdapters;\n\n// Lazy to avoid circular references\nfunction lazyWebStreams() {\n  if (webStreamsAdapters === undefined)\n    webStreamsAdapters = require('internal/webstreams/adapters');\n  return webStreamsAdapters;\n}\n\nWritable.fromWeb = function(writableStream\x2C options) {\n  return lazyWebStreams().newStreamWritableFromWritableStream(\n    writableStream\x2C\n    options);\n};\n\nWritable.toWeb = function(streamWritable) {\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\n};\n\nWritable.prototype[SymbolAsyncDispose] = async function() {\n  let error;\n  if (!this.destroyed) {\n    error = this.writableFinished ? null : new AbortError();\n    this.destroy(error);\n  }\n  await new Promise((resolve\x2C reject) =>\n    eos(this\x2C (err) => (err && err.name !== 'AbortError' ? reject(err) : resolve(null)))\x2C\n  );\n};\n
code-source-info,0x277c96e8c678,96,0,33559,C0O0C4O33559,,
code-creation,JS,9,33000,0x277c96e8d350,2187, node:internal/streams/writable:1:1,0x32a185955318,~
code-source-info,0x277c96e8d350,96,0,33559,C0O0C330O1316C336O1339C342O1348C348O1386C353O1412C358O1436C363O1460C369O1471C375O1501C380O1511C385O1533C390O1570C392O1585C396O1597C401O1620C405O1649C411O1649C416O1683C422O1683C427O1717C431O1683C433O1745C439O1745C444O1734C450O1784C456O1784C460O1784C462O1833C468O1833C472O1833C474O1907C480O1907C485O1887C491O2013C497O2013C502O1964C508O1984C514O2348C520O2348C525O2058C531O2079C536O2085C542O2111C548O2143C554O2170C560O2203C566O2231C572O2257C578O2285C584O2317C590O2563C596O2563C601O2386C607O2411C613O2426C619O2443C625O2459C631O2473C637O2487C643O2498C649O2515C655O2527C661O2543C667O2626C670O2607C676O2640C679O2670C687O2688C692O2640C697O2700C703O2700C708O2785C711O2785C715O2785C717O2835C720O2835C724O2835C726O2890C729O2890C733O2890C735O2945C738O2945C742O2945C744O3003C747O3003C751O3003C753O3062C756O3062C760O3062C762O3103C766O3103C768O3132C772O3132C774O3160C778O3160C780O3185C784O3185C786O3212C790O3212C792O3244C796O3244C798O3270C804O3270C806O3305C812O3305C814O3335C820O3335C822O3364C828O3364C830O3390C836O3390C838O3419C844O3419C846O3449C852O3449C854O3476C860O3476C862O3501C868O3501C870O3539C876O3539C878O3565C884O3565C886O3597C892O3597C894O3634C900O3634C902O3670C908O3670C910O3697C916O3697C918O3721C924O3721C926O4037C929O4074C942O4198C953O4281C964O4354C975O4434C986O4522C997O4596C1008O4671C1019O4893C1030O4999C1041O5296C1052O5538C1063O5777C1074O5956C1085O6084C1096O6194C1107O6317C1118O6423C1129O6563C1140O6615C1151O6661C1159O6950C1164O7000C1172O7084C1186O7270C1191O7320C1199O7426C1213O7726C1218O7776C1226O7882C1240O8203C1245O8253C1253O8336C1267O8637C1272O8687C1280O8793C1294O9010C1299O9060C1307O9144C1321O4037C1326O11774C1329O11788C1338O11808C1342O11942C1345O11977C1358O12035C1366O11942C1371O12153C1374O12167C1382O12177C1386O12193C1390O13492C1393O13523C1401O13572C1416O13492C1426O13851C1429O13860C1438O13875C1446O15348C1449O15357C1458O15373C1466O15569C1469O15578C1478O15593C1486O15696C1489O15705C1498O15722C1506O15965C1509O15974C1518O16003C1526O24218C1529O24227C1538O24244C1546O24418C1549O24427C1555O24445C1563O24454C1566O24463C1575O24477C1583O29179C1586O29211C1599O29234C1607O29261C1629O29385C1637O29412C1649O29524C1671O29794C1679O29821C1691O30230C1713O30392C1721O30419C1743O30567C1751O30594C1773O30740C1781O30767C1803O30887C1811O30914C1833O31059C1841O31086C1863O31272C1871O31299C1893O31414C1901O31441C1923O31560C1931O31587C1953O31688C1961O31738C1983O31862C1991O31894C2013O29179C2023O32179C2026O32191C2034O32179C2036O32200C2039O32209C2048O32227C2056O32512C2059O32521C2067O32556C2075O32542C2083O32567C2086O32576C2095O32595C2103O32632C2106O32641C2111O32654C2124O32678C2132O32725C2133O32725C2135O32949C2142O32966C2150O33105C2157O33120C2165O33232C2168O33241C2173O33251C2177O33271C2186O33558,,
tick,0x19383e080,33041,0,0x0,9,0x148000544,0x1480002b4,0x277c96e895fa,0x148000610,0x1480002b4,0x277c96e88c23,0x148000610,0x1480002b4,0x277c96e8872b,0x148000610,0x1480002b4,0x277c96e87156,0x148000610,0x1480002b4,0x277c96e8661d,0x148000610,0x1480002b4,0x277c96e852a4,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,9,33166,0x277c96e8df48,33,makeBitMapDescriptor node:internal/streams/writable:126:30,0x32a1859553d0,~
code-source-info,0x277c96e8df48,96,3843,4036,C0O3843C9O3853C14O3889C22O3939C32O4034,,
code-creation,Eval,9,33250,0x277c96e8dfe8,5, node:stream/promises:1:1,0x32a18595c718,~
script-source,97,node:stream/promises,'use strict';\n\nconst {\n  ArrayPrototypePop\x2C\n  Promise\x2C\n} = primordials;\n\nconst {\n  isIterable\x2C\n  isNodeStream\x2C\n  isWebStream\x2C\n} = require('internal/streams/utils');\n\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\nconst { finished } = require('internal/streams/end-of-stream');\n\nrequire('stream');\n\nfunction pipeline(...streams) {\n  return new Promise((resolve\x2C reject) => {\n    let signal;\n    let end;\n    const lastArg = streams[streams.length - 1];\n    if (lastArg && typeof lastArg === 'object' &&\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\n      const options = ArrayPrototypePop(streams);\n      signal = options.signal;\n      end = options.end;\n    }\n\n    pl(streams\x2C (err\x2C value) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(value);\n      }\n    }\x2C { signal\x2C end });\n  });\n}\n\nmodule.exports = {\n  finished\x2C\n  pipeline\x2C\n};\n
code-source-info,0x277c96e8dfe8,97,0,917,C0O0C4O917,,
code-creation,JS,9,33250,0x277c96e8e0f0,125, node:stream/promises:1:1,0x32a18595c848,~
code-source-info,0x277c96e8e0f0,97,0,917,C0O0C28O25C34O46C40O130C43O130C48O83C54O97C60O113C66O195C69O195C74O188C80O254C83O254C88O241C93O298C96O298C100O871C107O892C113O904C119O886C124O916,,
code-creation,Eval,9,33375,0x277c96e8e210,5, node:internal/streams/transform:1:1,0x32a18595d5f8,~
script-source,98,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a "filter"\x2C\n// but that's not a great name for it\x2C since that implies a thing where\n// some bits pass through\x2C and others are simply ignored.  (That would\n// be a valid example of a transform\x2C of course.)\n//\n// While the output is causally related to the input\x2C it's not a\n// necessarily symmetric or synchronous transformation.  For example\x2C\n// a zlib stream might take multiple plain-text writes()\x2C and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\n// internally\x2C and returns false if there's a lot of pending writes\n// buffered up.  When you call read()\x2C that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream\x2C the written data is placed in a buffer.  When\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks\x2C then the first\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\n//\n// This way\x2C back-pressure is actually determined by the reading side\x2C\n// since _read has to be called to start processing a new chunk.  However\x2C\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example\x2C imagine a stream where every byte of input is\n// interpreted as an integer from 0-255\x2C and then results in that many\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\n// 1kb of data being output.  In this case\x2C you could write a very small\n// amount of input\x2C and end up with a very large amount of output.  In\n// such a pathological inflating mechanism\x2C there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However\x2C even in such a pathological case\x2C only a single written chunk\n// would be consumed\x2C and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  Symbol\x2C\n} = primordials;\n\nmodule.exports = Transform;\nconst {\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\n} = require('internal/errors').codes;\nconst Duplex = require('internal/streams/duplex');\nconst { getHighWaterMark } = require('internal/streams/state');\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\nObjectSetPrototypeOf(Transform\x2C Duplex);\n\nconst kCallback = Symbol('kCallback');\n\nfunction Transform(options) {\n  if (!(this instanceof Transform))\n    return new Transform(options);\n\n  // TODO (ronag): This should preferably always be\n  // applied but would be semver-major. Or even better;\n  // make Transform a Readable with the Writable interface.\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\n  if (readableHighWaterMark === 0) {\n    // A Duplex will buffer both on the writable and readable side while\n    // a Transform just wants to buffer hwm number of elements. To avoid\n    // buffering twice we disable buffering on the writable side.\n    options = {\n      ...options\x2C\n      highWaterMark: null\x2C\n      readableHighWaterMark\x2C\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\n    };\n  }\n\n  Duplex.call(this\x2C options);\n\n  // We have implemented the _read method\x2C and done the other things\n  // that Readable wants before the first _read call\x2C so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  this[kCallback] = null;\n\n  if (options) {\n    if (typeof options.transform === 'function')\n      this._transform = options.transform;\n\n    if (typeof options.flush === 'function')\n      this._flush = options.flush;\n  }\n\n  // When the writable side finishes\x2C then flush out anything remaining.\n  // Backwards compat. Some Transform streams incorrectly implement _final\n  // instead of or in addition to _flush. By using 'prefinish' instead of\n  // implementing _final we continue supporting this unfortunate use case.\n  this.on('prefinish'\x2C prefinish);\n}\n\nfunction final(cb) {\n  if (typeof this._flush === 'function' && !this.destroyed) {\n    this._flush((er\x2C data) => {\n      if (er) {\n        if (cb) {\n          cb(er);\n        } else {\n          this.destroy(er);\n        }\n        return;\n      }\n\n      if (data != null) {\n        this.push(data);\n      }\n      this.push(null);\n      if (cb) {\n        cb();\n      }\n    });\n  } else {\n    this.push(null);\n    if (cb) {\n      cb();\n    }\n  }\n}\n\nfunction prefinish() {\n  if (this._final !== final) {\n    final.call(this);\n  }\n}\n\nTransform.prototype._final = final;\n\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\n};\n\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\n  const rState = this._readableState;\n  const wState = this._writableState;\n  const length = rState.length;\n\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n\n    if (val != null) {\n      this.push(val);\n    }\n\n    if (rState.ended) {\n      // If user has called this.push(null) we have to\n      // delay the callback to properly propagate the new\n      // state.\n      process.nextTick(callback);\n    } else if (\n      wState.ended || // Backwards compat.\n      length === rState.length || // Backwards compat.\n      rState.length < rState.highWaterMark\n    ) {\n      callback();\n    } else {\n      this[kCallback] = callback;\n    }\n  });\n};\n\nTransform.prototype._read = function() {\n  if (this[kCallback]) {\n    const callback = this[kCallback];\n    this[kCallback] = null;\n    callback();\n  }\n};\n
code-source-info,0x277c96e8e210,98,0,7123,C0O0C4O7123,,
code-creation,JS,9,33541,0x277c96e8e3c0,202, node:internal/streams/transform:1:1,0x32a18595d748,~
code-source-info,0x277c96e8e3c0,98,0,7123,C0O0C39O3508C44O3532C49O3558C51O3573C55O3628C58O3628C63O3654C68O3596C74O3677C77O3677C81O3677C83O3742C86O3742C91O3721C97O3777C100O3808C108O3826C113O3777C118O3838C124O3838C129O3898C132O3898C136O3898C138O6031C141O6041C148O6058C152O6068C155O6078C164O6099C168O6199C171O6209C180O6226C184O6968C187O6978C196O6994C201O7122,,
code-creation,Eval,9,33583,0x277c96e8e558,5, node:internal/streams/passthrough:1:1,0x32a18595dfc8,~
script-source,99,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nmodule.exports = PassThrough;\n\nconst Transform = require('internal/streams/transform');\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\nObjectSetPrototypeOf(PassThrough\x2C Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough))\n    return new PassThrough(options);\n\n  Transform.call(this\x2C options);\n}\n\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\n  cb(null\x2C chunk);\n};\n
code-source-info,0x277c96e8e558,99,0,1762,C0O0C4O1762,,
code-creation,JS,9,33625,0x277c96e8e638,84, node:internal/streams/passthrough:1:1,0x32a18595e0b8,~
code-source-info,0x277c96e8e638,99,0,1762,C0O0C14O1288C19O1328C21O1343C25O1377C28O1377C32O1377C34O1416C37O1449C45O1470C50O1416C55O1482C61O1482C66O1673C69O1685C78O1706C83O1761,,
code-creation,Eval,9,33666,0x277c96e8e728,5, node:internal/streams/duplexpair:1:1,0x32a18595e810,~
script-source,100,node:internal/streams/duplexpair,'use strict';\nconst {\n  Symbol\x2C\n} = primordials;\n\nconst { Duplex } = require('stream');\nconst assert = require('internal/assert');\n\nconst kCallback = Symbol('Callback');\nconst kInitOtherSide = Symbol('InitOtherSide');\n\nclass DuplexSide extends Duplex {\n  #otherSide = null;\n\n  constructor(options) {\n    super(options);\n    this[kCallback] = null;\n    this.#otherSide = null;\n  }\n\n  [kInitOtherSide](otherSide) {\n    // Ensure this can only be set once\x2C to enforce encapsulation.\n    if (this.#otherSide === null) {\n      this.#otherSide = otherSide;\n    } else {\n      assert(this.#otherSide === null);\n    }\n  }\n\n  _read() {\n    const callback = this[kCallback];\n    if (callback) {\n      this[kCallback] = null;\n      callback();\n    }\n  }\n\n  _write(chunk\x2C encoding\x2C callback) {\n    assert(this.#otherSide !== null);\n    assert(this.#otherSide[kCallback] === null);\n    if (chunk.length === 0) {\n      process.nextTick(callback);\n    } else {\n      this.#otherSide.push(chunk);\n      this.#otherSide[kCallback] = callback;\n    }\n  }\n\n  _final(callback) {\n    this.#otherSide.on('end'\x2C callback);\n    this.#otherSide.push(null);\n  }\n}\n\nfunction duplexPair(options) {\n  const side0 = new DuplexSide(options);\n  const side1 = new DuplexSide(options);\n  side0[kInitOtherSide](side1);\n  side1[kInitOtherSide](side0);\n  return [ side0\x2C side1 ];\n}\nmodule.exports = duplexPair;\n
code-source-info,0x277c96e8e728,100,0,1373,C0O0C4O1373,,
code-creation,JS,9,33708,0x277c96e8e8c0,155, node:internal/streams/duplexpair:1:1,0x32a18595e9c8,~
code-source-info,0x277c96e8e8c0,100,0,1373,C0O0C26O24C31O69C34O69C39O58C44O103C47O103C51O103C53O150C56O150C60O150C62O193C65O193C69O193C88O244C96O384C145O219C147O1344C149O1359C154O1372,,
code-creation,JS,9,33708,0x277c96e8e9e8,11,DuplexSide node:internal/streams/duplexpair:13:3,0x32a18595ebe8,~
code-source-info,0x277c96e8e9e8,100,255,272,C3O268C10O272,,
tick,0x19396d090,33916,0,0x0,3,0x148000544,0x1480002b4,0x277c96e853d7,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,33916,0x277c96e8ea68,5, node:internal/stream_base_commons:1:1,0x32a185966918,~
script-source,101,node:internal/stream_base_commons,'use strict';\n\nconst {\n  Array\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { FastBuffer } = require('internal/buffer');\nconst {\n  WriteWrap\x2C\n  kReadBytesOrError\x2C\n  kArrayBufferOffset\x2C\n  kBytesWritten\x2C\n  kLastWriteWasAsync\x2C\n  streamBaseState\x2C\n} = internalBinding('stream_wrap');\nconst { UV_EOF } = internalBinding('uv');\nconst {\n  ErrnoException\x2C\n} = require('internal/errors');\nconst { owner_symbol } = require('internal/async_hooks').symbols;\nconst {\n  kTimeout\x2C\n  setUnrefTimeout\x2C\n  getTimerDuration\x2C\n} = require('internal/timers');\nconst { isUint8Array } = require('internal/util/types');\nconst { clearTimeout } = require('timers');\nconst { validateFunction } = require('internal/validators');\n\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\nconst kUpdateTimer = Symbol('kUpdateTimer');\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\nconst kHandle = Symbol('kHandle');\nconst kBoundSession = Symbol('kBoundSession');\nconst kSession = Symbol('kSession');\n\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\n  debug = fn;\n});\nconst kBuffer = Symbol('kBuffer');\nconst kBufferGen = Symbol('kBufferGen');\nconst kBufferCb = Symbol('kBufferCb');\n\nfunction handleWriteReq(req\x2C data\x2C encoding) {\n  const { handle } = req;\n\n  switch (encoding) {\n    case 'buffer':\n    {\n      const ret = handle.writeBuffer(req\x2C data);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = data;\n      return ret;\n    }\n    case 'latin1':\n    case 'binary':\n      return handle.writeLatin1String(req\x2C data);\n    case 'utf8':\n    case 'utf-8':\n      return handle.writeUtf8String(req\x2C data);\n    case 'ascii':\n      return handle.writeAsciiString(req\x2C data);\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return handle.writeUcs2String(req\x2C data);\n    default:\n    {\n      const buffer = Buffer.from(data\x2C encoding);\n      const ret = handle.writeBuffer(req\x2C buffer);\n      if (streamBaseState[kLastWriteWasAsync])\n        req.buffer = buffer;\n      return ret;\n    }\n  }\n}\n\nfunction onWriteComplete(status) {\n  debug('onWriteComplete'\x2C status\x2C this.error);\n\n  const stream = this.handle[owner_symbol];\n\n  if (status < 0) {\n    const error = new ErrnoException(status\x2C 'write'\x2C this.error);\n    if (typeof this.callback === 'function') {\n      return this.callback(error);\n    }\n\n    return stream.destroy(error);\n  }\n\n  if (stream.destroyed) {\n    if (typeof this.callback === 'function')\n      this.callback(null);\n    return;\n  }\n\n  stream[kUpdateTimer]();\n  stream[kAfterAsyncWrite](this);\n\n  if (typeof this.callback === 'function')\n    this.callback(null);\n}\n\nfunction createWriteWrap(handle\x2C callback) {\n  const req = new WriteWrap();\n\n  req.handle = handle;\n  req.oncomplete = onWriteComplete;\n  req.async = false;\n  req.bytes = 0;\n  req.buffer = null;\n  req.callback = callback;\n\n  return req;\n}\n\nfunction writevGeneric(self\x2C data\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const allBuffers = data.allBuffers;\n  let chunks;\n  if (allBuffers) {\n    chunks = data;\n    for (let i = 0; i < data.length; i++)\n      data[i] = data[i].chunk;\n  } else {\n    chunks = new Array(data.length << 1);\n    for (let i = 0; i < data.length; i++) {\n      const entry = data[i];\n      chunks[i * 2] = entry.chunk;\n      chunks[i * 2 + 1] = entry.encoding;\n    }\n  }\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\n\n  // Retain chunks\n  if (err === 0) req._chunks = chunks;\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\n  const req = createWriteWrap(self[kHandle]\x2C cb);\n  const err = handleWriteReq(req\x2C data\x2C encoding);\n\n  afterWriteDispatched(req\x2C err\x2C cb);\n  return req;\n}\n\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\n  req.bytes = streamBaseState[kBytesWritten];\n  req.async = !!streamBaseState[kLastWriteWasAsync];\n\n  if (err !== 0)\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\n\n  if (!req.async && typeof req.callback === 'function') {\n    req.callback();\n  }\n}\n\nfunction onStreamRead(arrayBuffer) {\n  const nread = streamBaseState[kReadBytesOrError];\n\n  const handle = this;\n  const stream = this[owner_symbol];\n\n  stream[kUpdateTimer]();\n\n  if (nread > 0 && !stream.destroyed) {\n    let ret;\n    let result;\n    const userBuf = stream[kBuffer];\n    if (userBuf) {\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\n      const bufGen = stream[kBufferGen];\n      if (bufGen !== null) {\n        const nextBuf = bufGen();\n        if (isUint8Array(nextBuf))\n          stream[kBuffer] = ret = nextBuf;\n      }\n    } else {\n      const offset = streamBaseState[kArrayBufferOffset];\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\n      result = stream.push(buf);\n    }\n    if (!result) {\n      handle.reading = false;\n      if (!stream.destroyed) {\n        const err = handle.readStop();\n        if (err)\n          stream.destroy(new ErrnoException(err\x2C 'read'));\n      }\n    }\n\n    return ret;\n  }\n\n  if (nread === 0) {\n    return;\n  }\n\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\n  // and will not deliver any more read events after this point.\n  // (equivalently\x2C it should have called readStop on itself already).\n  // Some streams may be reset and explicitly started again with a call\n  // to readStart\x2C such as TTY.\n\n  if (nread !== UV_EOF) {\n    // CallJSOnreadMethod expects the return value to be a buffer.\n    // Ref: https://github.com/nodejs/node/pull/34375\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\n    return;\n  }\n\n  // Defer this until we actually emit end\n  if (stream._readableState.endEmitted) {\n    if (stream[kMaybeDestroy])\n      stream[kMaybeDestroy]();\n  } else {\n    if (stream[kMaybeDestroy])\n      stream.on('end'\x2C stream[kMaybeDestroy]);\n\n    // Push a null to signal the end of data.\n    // Do it before `maybeDestroy` for correct order of events:\n    // `end` -> `close`\n    stream.push(null);\n    stream.read(0);\n  }\n}\n\nfunction setStreamTimeout(msecs\x2C callback) {\n  if (this.destroyed)\n    return this;\n\n  this.timeout = msecs;\n\n  // Type checking identical to timers.enroll()\n  msecs = getTimerDuration(msecs\x2C 'msecs');\n\n  // Attempt to clear an existing timer in both cases -\n  //  even if it will be rescheduled we don't want to leak an existing timer.\n  clearTimeout(this[kTimeout]);\n\n  if (msecs === 0) {\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.removeListener('timeout'\x2C callback);\n    }\n  } else {\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\n    if (this[kSession]) this[kSession][kUpdateTimer]();\n    if (this[kBoundSession]) this[kBoundSession][kUpdateTimer]();\n\n    if (callback !== undefined) {\n      validateFunction(callback\x2C 'callback');\n      this.once('timeout'\x2C callback);\n    }\n  }\n  return this;\n}\n\nmodule.exports = {\n  writevGeneric\x2C\n  writeGeneric\x2C\n  onStreamRead\x2C\n  kAfterAsyncWrite\x2C\n  kMaybeDestroy\x2C\n  kUpdateTimer\x2C\n  kHandle\x2C\n  kSession\x2C\n  setStreamTimeout\x2C\n  kBuffer\x2C\n  kBufferCb\x2C\n  kBufferGen\x2C\n};\n
code-source-info,0x277c96e8ea68,101,0,7070,C0O0C4O7070,,
code-creation,JS,9,34083,0x277c96e8ed80,526, node:internal/stream_base_commons:1:1,0x32a185966be8,~
code-source-info,0x277c96e8ed80,101,0,7070,C0O0C133O25C139O34C144O79C147O79C152O68C158O121C161O121C166O106C172O275C175O275C180O159C186O172C192O193C198O215C204O232C210O254C216O326C219O326C224O315C230O379C233O379C238O359C244O432C247O432C252O463C257O415C263O536C266O536C271O483C277O495C283O514C289O589C292O589C297O572C303O646C306O646C311O629C317O694C320O694C325O673C331O749C334O749C338O749C340O795C343O795C347O795C349O844C352O844C356O844C358O888C361O888C365O888C367O929C370O929C374O929C376O971C379O971C383O971C385O1004C388O1004C393O1037C406O1038C412O1004C414O1101C417O1101C421O1101C423O1139C426O1139C430O1139C432O1179C435O1179C439O1179C441O6865C448O6886C454O6903C460O6919C466O6935C472O6955C478O6972C484O6988C490O6999C496O7011C502O7031C508O7042C514O7055C520O6880C525O7069,,
code-creation,Eval,9,34333,0x277c96e8f0c8,5, node:internal/perf/observe:1:1,0x32a18596a090,~
script-source,102,node:internal/perf/observe,'use strict';\n\nconst {\n  ArrayFrom\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSort\x2C\n  Error\x2C\n  MathMax\x2C\n  MathMin\x2C\n  ObjectDefineProperties\x2C\n  ObjectFreeze\x2C\n  ObjectKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\n  }\x2C\n  installGarbageCollectionTracking\x2C\n  observerCounts\x2C\n  removeGarbageCollectionTracking\x2C\n  setupObservers\x2C\n} = internalBinding('performance');\n\nconst {\n  isPerformanceEntry\x2C\n  createPerformanceNodeEntry\x2C\n} = require('internal/perf/performance_entry');\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  validateFunction\x2C\n  validateObject\x2C\n  validateThisInternalField\x2C\n} = require('internal/validators');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  deprecate\x2C\n  lazyDOMException\x2C\n  kEmptyObject\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\n\nconst {\n  setImmediate\x2C\n} = require('timers');\n\nconst { inspect } = require('util');\n\nconst { now } = require('internal/perf/utils');\n\nconst kBuffer = Symbol('kBuffer');\nconst kDispatch = Symbol('kDispatch');\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\n\nconst kDeprecationMessage =\n  'Custom PerformanceEntry accessors are deprecated. ' +\n  'Please use the detail property.';\n\nconst kTypeSingle = 0;\nconst kTypeMultiple = 1;\n\nlet gcTrackingInstalled = false;\n\nconst kSupportedEntryTypes = ObjectFreeze([\n  'dns'\x2C\n  'function'\x2C\n  'gc'\x2C\n  'http'\x2C\n  'http2'\x2C\n  'mark'\x2C\n  'measure'\x2C\n  'net'\x2C\n  'resource'\x2C\n]);\n\n// Performance timeline entry Buffers\nlet markEntryBuffer = [];\nlet measureEntryBuffer = [];\nlet resourceTimingBuffer = [];\nlet resourceTimingSecondaryBuffer = [];\nconst kPerformanceEntryBufferWarnSize = 1e6;\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\n// Default buffer limit for resource timing entries.\nlet resourceTimingBufferSizeLimit = 250;\nlet dispatchBufferFull;\nlet resourceTimingBufferFullPending = false;\n\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\n  'mark': 'performance.clearMarks'\x2C\n  'measure': 'performance.clearMeasures'\x2C\n});\nconst kWarnedEntryTypes = new SafeMap();\n\nconst kObservers = new SafeSet();\nconst kPending = new SafeSet();\nlet isPending = false;\n\nfunction queuePending() {\n  if (isPending) return;\n  isPending = true;\n  setImmediate(() => {\n    isPending = false;\n    const pendings = ArrayFrom(kPending.values());\n    kPending.clear();\n    for (const pending of pendings)\n      pending[kDispatch]();\n  });\n}\n\nfunction getObserverType(type) {\n  switch (type) {\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\n  }\n}\n\nfunction maybeDecrementObserverCounts(entryTypes) {\n  for (const type of entryTypes) {\n    const observerType = getObserverType(type);\n\n    if (observerType !== undefined) {\n      observerCounts[observerType]--;\n\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\n          observerCounts[observerType] === 0) {\n        removeGarbageCollectionTracking();\n        gcTrackingInstalled = false;\n      }\n    }\n  }\n}\n\nfunction maybeIncrementObserverCount(type) {\n  const observerType = getObserverType(type);\n\n  if (observerType !== undefined) {\n    observerCounts[observerType]++;\n    if (!gcTrackingInstalled &&\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\n      installGarbageCollectionTracking();\n      gcTrackingInstalled = true;\n    }\n  }\n}\n\nconst kSkipThrow = Symbol('kSkipThrow');\nconst performanceObserverSorter = (first\x2C second) => {\n  return first.startTime - second.startTime;\n};\n\nclass PerformanceObserverEntryList {\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\n  }\n\n  getEntries() {\n    validateThisInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    return ArrayPrototypeSlice(this[kBuffer]);\n  }\n\n  getEntriesByType(type) {\n    validateThisInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('type');\n    }\n    type = `${type}`;\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.entryType === type);\n  }\n\n  getEntriesByName(name\x2C type = undefined) {\n    validateThisInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n    name = `${name}`;\n    if (type != null /** not nullish */) {\n      return ArrayPrototypeFilter(\n        this[kBuffer]\x2C\n        (entry) => entry.name === name && entry.entryType === type);\n    }\n    return ArrayPrototypeFilter(\n      this[kBuffer]\x2C\n      (entry) => entry.name === name);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\n  getEntries: kEnumerableProperty\x2C\n  getEntriesByType: kEnumerableProperty\x2C\n  getEntriesByName: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserverEntryList'\x2C\n  }\x2C\n});\n\nclass PerformanceObserver {\n  #buffer = [];\n  #entryTypes = new SafeSet();\n  #type;\n  #callback;\n\n  constructor(callback) {\n    validateFunction(callback\x2C 'callback');\n    this.#callback = callback;\n  }\n\n  observe(options = kEmptyObject) {\n    validateObject(options\x2C 'options');\n    const {\n      entryTypes\x2C\n      type\x2C\n      buffered\x2C\n    } = { ...options };\n    if (entryTypes === undefined && type === undefined)\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\n    if (entryTypes != null && type != null)\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\n                                      entryTypes\x2C\n                                      'options.entryTypes can not set with ' +\n                                      'options.type together');\n\n    switch (this.#type) {\n      case undefined:\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\n        if (type !== undefined) this.#type = kTypeSingle;\n        break;\n      case kTypeSingle:\n        if (entryTypes !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to multiple observations'\x2C\n            'InvalidModificationError');\n        break;\n      case kTypeMultiple:\n        if (type !== undefined)\n          throw lazyDOMException(\n            'PerformanceObserver can not change to single observation'\x2C\n            'InvalidModificationError');\n        break;\n    }\n\n    if (this.#type === kTypeMultiple) {\n      if (!ArrayIsArray(entryTypes)) {\n        throw new ERR_INVALID_ARG_TYPE(\n          'options.entryTypes'\x2C\n          'string[]'\x2C\n          entryTypes);\n      }\n      maybeDecrementObserverCounts(this.#entryTypes);\n      this.#entryTypes.clear();\n      for (let n = 0; n < entryTypes.length; n++) {\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\n          this.#entryTypes.add(entryTypes[n]);\n          maybeIncrementObserverCount(entryTypes[n]);\n        }\n      }\n    } else {\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\n        return;\n      this.#entryTypes.add(type);\n      maybeIncrementObserverCount(type);\n      if (buffered) {\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\n        kPending.add(this);\n        if (kPending.size)\n          queuePending();\n      }\n    }\n\n    if (this.#entryTypes.size)\n      kObservers.add(this);\n    else\n      this.disconnect();\n  }\n\n  disconnect() {\n    maybeDecrementObserverCounts(this.#entryTypes);\n    kObservers.delete(this);\n    kPending.delete(this);\n    this.#buffer = [];\n    this.#entryTypes.clear();\n    this.#type = undefined;\n  }\n\n  takeRecords() {\n    const list = this.#buffer;\n    this.#buffer = [];\n    return list;\n  }\n\n  static get supportedEntryTypes() {\n    return kSupportedEntryTypes;\n  }\n\n  [kMaybeBuffer](entry) {\n    if (!this.#entryTypes.has(entry.entryType))\n      return;\n    ArrayPrototypePush(this.#buffer\x2C entry);\n    kPending.add(this);\n    if (kPending.size)\n      queuePending();\n  }\n\n  [kDispatch]() {\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\n\n    this.#callback(entryList\x2C this);\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `PerformanceObserver ${inspect({\n      connected: kObservers.has(this)\x2C\n      pending: kPending.has(this)\x2C\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\n      buffer: this.#buffer\x2C\n    }\x2C opts)}`;\n  }\n}\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\n  observe: kEnumerableProperty\x2C\n  disconnect: kEnumerableProperty\x2C\n  takeRecords: kEnumerableProperty\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n    value: 'PerformanceObserver'\x2C\n  }\x2C\n});\n\n/**\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\n *\n * Add the performance entry to the interested performance observer's queue.\n */\nfunction enqueue(entry) {\n  if (!isPerformanceEntry(entry))\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\n\n  for (const obs of kObservers) {\n    obs[kMaybeBuffer](entry);\n  }\n}\n\n/**\n * Add the user timing entry to the global buffer.\n */\nfunction bufferUserTiming(entry) {\n  const entryType = entry.entryType;\n  let buffer;\n  if (entryType === 'mark') {\n    buffer = markEntryBuffer;\n  } else if (entryType === 'measure') {\n    buffer = measureEntryBuffer;\n  } else {\n    return;\n  }\n\n  ArrayPrototypePush(buffer\x2C entry);\n  const count = buffer.length;\n\n  if (count > kPerformanceEntryBufferWarnSize &&\n    !kWarnedEntryTypes.has(entryType)) {\n    kWarnedEntryTypes.set(entryType\x2C true);\n    // No error code for this since it is a Warning\n    // eslint-disable-next-line no-restricted-syntax\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\n                        `${count} ${entryType} entries added to the global ` +\n                        'performance entry buffer. Use ' +\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\n                        'clear the buffer.');\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\n    w.entryType = entryType;\n    w.count = count;\n    process.emitWarning(w);\n  }\n}\n\n/**\n * Add the resource timing entry to the global buffer if the buffer size is not\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\n * performance object.\n *\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\n */\nfunction bufferResourceTiming(entry) {\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\n    return;\n  }\n\n  if (!resourceTimingBufferFullPending) {\n    resourceTimingBufferFullPending = true;\n    setImmediate(() => {\n      while (resourceTimingSecondaryBuffer.length > 0) {\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\n        dispatchBufferFull('resourcetimingbufferfull');\n\n        // Calculate the number of items to be pushed to the global buffer.\n        const numbersToPreserve = MathMax(\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\n          0\x2C\n        );\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\n        }\n\n        if (excessNumberBefore <= excessNumberAfter) {\n          resourceTimingSecondaryBuffer = [];\n        }\n      }\n      resourceTimingBufferFullPending = false;\n    });\n  }\n\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\n}\n\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\nfunction setResourceTimingBufferSize(maxSize) {\n  // If the maxSize parameter is less than resource timing buffer current\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\n  // performance entry buffer.\n  resourceTimingBufferSizeLimit = maxSize;\n}\n\nfunction setDispatchBufferFull(fn) {\n  dispatchBufferFull = fn;\n}\n\nfunction clearEntriesFromBuffer(type\x2C name) {\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\n    return;\n  }\n\n  if (type === 'mark') {\n    markEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\n  } else if (type === 'measure') {\n    measureEntryBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\n  } else {\n    resourceTimingBuffer = name === undefined ?\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\n  }\n}\n\nfunction filterBufferMapByNameAndType(name\x2C type) {\n  let bufferList;\n  if (type === 'mark') {\n    bufferList = markEntryBuffer;\n  } else if (type === 'measure') {\n    bufferList = measureEntryBuffer;\n  } else if (type === 'resource') {\n    bufferList = resourceTimingBuffer;\n  } else if (type !== undefined) {\n    // Unrecognized type;\n    return [];\n  } else {\n    bufferList = [];\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\n  }\n  if (name !== undefined) {\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\n  } else if (type !== undefined) {\n    bufferList = ArrayPrototypeSlice(bufferList);\n  }\n\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\n}\n\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\n  const entry =\n    createPerformanceNodeEntry(\n      name\x2C\n      type\x2C\n      startTime\x2C\n      duration\x2C\n      details);\n\n  if (details !== undefined) {\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\n    // properties directly off the entry. Those have been\n    // moved into the details property. The existing accessors\n    // are still included but are deprecated.\n    entry[kDeprecatedFields] = new SafeMap();\n\n    const detailKeys = ObjectKeys(details);\n    const props = {};\n    for (let n = 0; n < detailKeys.length; n++) {\n      const key = detailKeys[n];\n      entry[kDeprecatedFields].set(key\x2C details[key]);\n      props[key] = {\n        configurable: true\x2C\n        enumerable: true\x2C\n        get: deprecate(() => {\n          return entry[kDeprecatedFields].get(key);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n        set: deprecate((value) => {\n          entry[kDeprecatedFields].set(key\x2C value);\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\n      };\n    }\n    ObjectDefineProperties(entry\x2C props);\n  }\n\n  enqueue(entry);\n}\n\nsetupObservers(observerCallback);\n\nfunction hasObserver(type) {\n  const observerType = getObserverType(type);\n  return observerCounts[observerType] > 0;\n}\n\n\nfunction startPerf(target\x2C key\x2C context = {}) {\n  target[key] = {\n    ...context\x2C\n    startTime: now()\x2C\n  };\n}\n\nfunction stopPerf(target\x2C key\x2C context = {}) {\n  const ctx = target[key];\n  if (!ctx) {\n    return;\n  }\n  const startTime = ctx.startTime;\n  const entry = createPerformanceNodeEntry(\n    ctx.name\x2C\n    ctx.type\x2C\n    startTime\x2C\n    now() - startTime\x2C\n    { ...ctx.detail\x2C ...context.detail }\x2C\n  );\n  enqueue(entry);\n}\n\nmodule.exports = {\n  PerformanceObserver\x2C\n  PerformanceObserverEntryList\x2C\n  enqueue\x2C\n  hasObserver\x2C\n  clearEntriesFromBuffer\x2C\n  filterBufferMapByNameAndType\x2C\n  startPerf\x2C\n  stopPerf\x2C\n\n  bufferUserTiming\x2C\n  bufferResourceTiming\x2C\n  setResourceTimingBufferSize\x2C\n  setDispatchBufferFull\x2C\n};\n
code-source-info,0x277c96e8f0c8,102,0,16738,C0O0C4O16738,,
code-creation,JS,9,34708,0x277c96e8f7e0,1208, node:internal/perf/observe:1:1,0x32a18596a688,~
code-source-info,0x277c96e8f7e
code-creation,JS,9,34708,0x277c96e8fe80,50,PerformanceObserver node:internal/perf/observe:244:3,0x32a18596af48,~
code-source-info,0x277c96e8fe80,102,5982,6047,C3O5992C13O6012C20O6012C34O6029C43O6038C49O6047,,
code-creation,JS,10,34750,0x1480032e0,376,SafeMap node:internal/per_context/primordials:409:16,0x3699125c0678,^
code-source-info,0x1480032e0,3,11638,11655,,,
tick,0x101646dd0,35166,0,0x0,0,0x277c96e8f7df,0x148000610,0x1480002b4,0x277c96e855e7,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,35250,0x148003480,664,wrappedFn node:internal/errors:537:21,0x3699125c9718,^
script-source,7,node:internal/errors,/* eslint node-core/documented-errors: "error" */\n/* eslint node-core/alphabetize-errors: ["error"\x2C {checkErrorDeclarations: true}] */\n/* eslint node-core/prefer-util-format-errors: "error" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change\x2C the code should not.\n\nconst {\n  AggregateError\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeFilter\x2C\n  ArrayPrototypeIncludes\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ArrayPrototypeUnshift\x2C\n  Error\x2C\n  ErrorCaptureStackTrace\x2C\n  ErrorPrototypeToString\x2C\n  JSONStringify\x2C\n  MapPrototypeGet\x2C\n  MathAbs\x2C\n  MathMax\x2C\n  Number\x2C\n  NumberIsInteger\x2C\n  ObjectAssign\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectIsExtensible\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeHasOwnProperty\x2C\n  RangeError\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  SafeWeakMap\x2C\n  String\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToLowerCase\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  URIError\x2C\n} = primordials;\n\nconst kIsNodeError = Symbol('kIsNodeError');\n\nconst isWindows = process.platform === 'win32';\n\nconst messages = new SafeMap();\nconst codes = {};\n\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\n\n// Sorted by a rough estimate on most frequently used entries.\nconst kTypes = [\n  'string'\x2C\n  'function'\x2C\n  'number'\x2C\n  'object'\x2C\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\n  'Function'\x2C\n  'Object'\x2C\n  'boolean'\x2C\n  'bigint'\x2C\n  'symbol'\x2C\n];\n\nconst MainContextError = Error;\nconst overrideStackTrace = new SafeWeakMap();\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\n\n/**\n * The default implementation of `Error.prepareStackTrace` with simple\n * concatenation of stack frames.\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction defaultPrepareStackTrace(error\x2C trace) {\n  // Normal error formatting:\n  //\n  // Error: Message\n  //     at function (file)\n  //     at file\n  let errorString;\n  if (kIsNodeError in error) {\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\n  } else {\n    errorString = ErrorPrototypeToString(error);\n  }\n  if (trace.length === 0) {\n    return errorString;\n  }\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\n}\n\nfunction setInternalPrepareStackTrace(callback) {\n  internalPrepareStackTrace = callback;\n}\n\n/**\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\n * of error objects created in a VM Context will always invoke the\n * prepareStackTraceCallback of the principal realm.\n * @param {object} globalThis The global object of the realm that the error was\n *   created in. When the error object is created in a VM Context\x2C this is the\n *   global object of that VM Context.\n * @param {object} error The error object.\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\n * @returns {string}\n */\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\n  // API for node internals to override error stack formatting\n  // without interfering with userland code.\n  if (overrideStackTrace.has(error)) {\n    const f = overrideStackTrace.get(error);\n    overrideStackTrace.delete(error);\n    return f(error\x2C trace);\n  }\n\n  // Polyfill of V8's Error.prepareStackTrace API.\n  // https://crbug.com/v8/7848\n  // `globalThis` is the global that contains the constructor which\n  // created `error`.\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\n  }\n  // We still have legacy usage that depends on the main context's `Error`\n  // being used\x2C even when the error is from a different context.\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\n  if (typeof MainContextError.prepareStackTrace === 'function') {\n    return MainContextError.prepareStackTrace(error\x2C trace);\n  }\n\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\n  // internal implementation.\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\n/**\n * The default Error.prepareStackTrace implementation.\n * @returns {string}\n */\nfunction ErrorPrepareStackTrace(error\x2C trace) {\n  return internalPrepareStackTrace(error\x2C trace);\n}\n\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\n  if (innerError && outerError && innerError !== outerError) {\n    if (ArrayIsArray(outerError.errors)) {\n      // If `outerError` is already an `AggregateError`.\n      ArrayPrototypePush(outerError.errors\x2C innerError);\n      return outerError;\n    }\n    let err;\n    if (isErrorStackTraceLimitWritable()) {\n      const limit = Error.stackTraceLimit;\n      Error.stackTraceLimit = 0;\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n      Error.stackTraceLimit = limit;\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\n    } else {\n      // eslint-disable-next-line no-restricted-syntax\n      err = new AggregateError(new SafeArrayIterator([\n        outerError\x2C\n        innerError\x2C\n      ])\x2C outerError.message);\n    }\n    err.code = outerError.code;\n    return err;\n  }\n  return innerError || outerError;\n};\n\nclass NodeAggregateError extends AggregateError {\n  constructor(errors\x2C message) {\n    super(new SafeArrayIterator(errors)\x2C message);\n    this.code = errors[0]?.code;\n  }\n\n  get [kIsNodeError]() {\n    return true;\n  }\n\n  get ['constructor']() {\n    return AggregateError;\n  }\n}\n\nconst assert = require('internal/assert');\n\n// Lazily loaded\nlet util;\n\nlet internalUtil = null;\nfunction lazyInternalUtil() {\n  internalUtil ??= require('internal/util');\n  return internalUtil;\n}\n\nlet internalUtilInspect = null;\nfunction lazyInternalUtilInspect() {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect;\n}\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nlet buffer;\nfunction lazyBuffer() {\n  buffer ??= require('buffer').Buffer;\n  return buffer;\n}\n\nfunction isErrorStackTraceLimitWritable() {\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\n  // it again during deserialization.\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\n    return false;\n  }\n\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\n  if (desc === undefined) {\n    return ObjectIsExtensible(Error);\n  }\n\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\n    desc.writable :\n    desc.set !== undefined;\n}\n\nfunction inspectWithNoCustomRetry(obj\x2C options) {\n  const utilInspect = lazyInternalUtilInspect();\n\n  try {\n    return utilInspect.inspect(obj\x2C options);\n  } catch {\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\n  }\n}\n\n// A specialized Error that includes an additional info property with\n// additional information about the error condition.\n// It has the properties present in a UVException but with a custom error\n// message followed by the uv error code and uv error message.\n// It also has its own error code with the original uv error context put into\n// `err.info`.\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\n// and may have .path and .dest.\nclass SystemError extends Error {\n  constructor(key\x2C context) {\n    super();\n    const prefix = getMessage(key\x2C []\x2C this);\n    let message = `${prefix}: ${context.syscall} returned ` +\n                  `${context.code} (${context.message})`;\n\n    if (context.path !== undefined)\n      message += ` ${context.path}`;\n    if (context.dest !== undefined)\n      message += ` => ${context.dest}`;\n\n    this.code = key;\n\n    ObjectDefineProperties(this\x2C {\n      [kIsNodeError]: {\n        __proto__: null\x2C\n        value: true\x2C\n        enumerable: false\x2C\n        writable: false\x2C\n        configurable: true\x2C\n      }\x2C\n      name: {\n        __proto__: null\x2C\n        value: 'SystemError'\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      message: {\n        __proto__: null\x2C\n        value: message\x2C\n        enumerable: false\x2C\n        writable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      info: {\n        __proto__: null\x2C\n        value: context\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n        writable: false\x2C\n      }\x2C\n      errno: {\n        __proto__: null\x2C\n        get() {\n          return context.errno;\n        }\x2C\n        set: (value) => {\n          context.errno = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n      syscall: {\n        __proto__: null\x2C\n        get() {\n          return context.syscall;\n        }\x2C\n        set: (value) => {\n          context.syscall = value;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      }\x2C\n    });\n\n    if (context.path !== undefined) {\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\n      // introduced. The `path` and `dest` properties in the context seem to\n      // always be of type string. We should probably just remove the\n      // `.toString()` and `Buffer.from()` operations and set the value on the\n      // context as the user did.\n      ObjectDefineProperty(this\x2C 'path'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.path != null ?\n            context.path.toString() : context.path;\n        }\x2C\n        set: (value) => {\n          context.path = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n\n    if (context.dest !== undefined) {\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\n        __proto__: null\x2C\n        get() {\n          return context.dest != null ?\n            context.dest.toString() : context.dest;\n        }\x2C\n        set: (value) => {\n          context.dest = value ?\n            lazyBuffer().from(value.toString()) : undefined;\n        }\x2C\n        enumerable: true\x2C\n        configurable: true\x2C\n      });\n    }\n  }\n\n  toString() {\n    return `${this.name} [${this.code}]: ${this.message}`;\n  }\n\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\n    return lazyInternalUtilInspect().inspect(this\x2C {\n      ...ctx\x2C\n      getters: true\x2C\n      customInspect: false\x2C\n    });\n  }\n}\n\nfunction makeSystemErrorWithCode(key) {\n  return class NodeError extends SystemError {\n    constructor(ctx) {\n      super(key\x2C ctx);\n    }\n  };\n}\n\n// This is a special error type that is only used for the E function.\nclass HideStackFramesError extends Error {\n}\n\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\n  class HideStackFramesError extends Base {\n    constructor(...args) {\n      if (isErrorStackTraceLimitWritable()) {\n        const limit = Error.stackTraceLimit;\n        Error.stackTraceLimit = 0;\n        super(...args);\n        Error.stackTraceLimit = limit;\n      } else {\n        super(...args);\n      }\n    }\n\n    // This is a workaround for wpt tests that expect that the error\n    // constructor has a `name` property of the base class.\n    get ['constructor']() {\n      return clazz;\n    }\n  }\n\n  return HideStackFramesError;\n}\n\nfunction makeNodeErrorWithCode(Base\x2C key) {\n  const msg = messages.get(key);\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\n\n  switch (expectedLength) {\n    case 0: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === 0\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n          super(msg);\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    case -1: {\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          super();\n          ObjectDefineProperty(this\x2C 'message'\x2C {\n            __proto__: null\x2C\n            value: getMessage(key\x2C args\x2C this)\x2C\n            enumerable: false\x2C\n            writable: true\x2C\n            configurable: true\x2C\n          });\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n    default: {\n\n      class NodeError extends Base {\n        code = key;\n\n        constructor(...args) {\n          assert(\n            args.length === expectedLength\x2C\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n              `match the required ones (${expectedLength}).`\x2C\n          );\n\n          ArrayPrototypeUnshift(args\x2C msg);\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\n        }\n\n        // This is a workaround for wpt tests that expect that the error\n        // constructor has a `name` property of the base class.\n        get ['constructor']() {\n          return Base;\n        }\n\n        get [kIsNodeError]() {\n          return true;\n        }\n\n        toString() {\n          return `${this.name} [${key}]: ${this.message}`;\n        }\n      }\n      return NodeError;\n    }\n  }\n}\n\n/**\n * This function removes unnecessary frames from Node.js core errors.\n * @template {(...args: unknown[]) => unknown} T\n * @param {T} fn\n * @returns {T}\n */\nfunction hideStackFrames(fn) {\n  function wrappedFn(...args) {\n    try {\n      return ReflectApply(fn\x2C this\x2C args);\n    } catch (error) {\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\n      throw error;\n    }\n  }\n  wrappedFn.withoutStackTrace = fn;\n  return wrappedFn;\n}\n\n// Utility function for registering the error codes. Only used here. Exported\n// *only* to allow for testing.\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\n  // Special case for SystemError that formats the error message differently\n  // The SystemErrors only have SystemError as their base classes.\n  messages.set(sym\x2C val);\n\n  const ErrClass = def === SystemError ?\n    makeSystemErrorWithCode(sym) :\n    makeNodeErrorWithCode(def\x2C sym);\n\n  if (otherClasses.length !== 0) {\n    if (otherClasses.includes(HideStackFramesError)) {\n      if (otherClasses.length !== 1) {\n        otherClasses.forEach((clazz) => {\n          if (clazz !== HideStackFramesError) {\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\n          }\n        });\n      }\n    } else {\n      otherClasses.forEach((clazz) => {\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\n      });\n    }\n  }\n\n  if (otherClasses.includes(HideStackFramesError)) {\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\n  }\n\n  codes[sym] = ErrClass;\n}\n\nfunction getExpectedArgumentLength(msg) {\n  let expectedLength = 0;\n  const regex = /%[dfijoOs]/g;\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\n  return expectedLength;\n}\n\nfunction getMessage(key\x2C args\x2C self) {\n  const msg = messages.get(key);\n\n  if (typeof msg === 'function') {\n    assert(\n      msg.length <= args.length\x2C // Default options do not count.\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n        `match the required ones (${msg.length}).`\x2C\n    );\n    return ReflectApply(msg\x2C self\x2C args);\n  }\n\n  const expectedLength = getExpectedArgumentLength(msg);\n  assert(\n    expectedLength === args.length\x2C\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\n      `match the required ones (${expectedLength}).`\x2C\n  );\n  if (args.length === 0)\n    return msg;\n\n  ArrayPrototypeUnshift(args\x2C msg);\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\n}\n\nlet uvBinding;\n\nfunction lazyUv() {\n  uvBinding ??= internalBinding('uv');\n  return uvBinding;\n}\n\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\n\nfunction uvErrmapGet(name) {\n  uvBinding = lazyUv();\n  uvBinding.errmap ??= uvBinding.getErrorMap();\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * function UVException using a context object with data assembled in C++.\n * The goal is to migrate them to ERR_* errors later when compatibility is\n * not a concern.\n */\nclass UVException extends Error {\n  /**\n   * @param {object} ctx\n   */\n  constructor(ctx) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\n\n    let path;\n    let dest;\n    if (ctx.path) {\n      path = ctx.path.toString();\n      message += ` '${path}'`;\n    }\n    if (ctx.dest) {\n      dest = ctx.dest.toString();\n      message += ` -> '${dest}'`;\n    }\n\n    super(message);\n\n    for (const prop of ObjectKeys(ctx)) {\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\n        continue;\n      }\n      this[prop] = ctx[prop];\n    }\n\n    this.code = code;\n    if (path) {\n      this.path = path;\n    }\n    if (dest) {\n      this.dest = dest;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This creates an error compatible with errors produced in the C++\n * This function should replace the deprecated\n * `exceptionWithHostPort()` function.\n */\nclass UVExceptionWithHostPort extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} address\n   * @param {number} [port]\n   */\n  constructor(err\x2C syscall\x2C address\x2C port) {\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\n    const message = `${syscall} ${code}: ${uvmsg}`;\n    let details = '';\n\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n\n    super(`${message}${details}`);\n\n    this.code = code;\n    this.errno = err;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * This used to be util._errnoException().\n */\nclass ErrnoException extends Error {\n  /**\n   * @param {number} err - A libuv error number\n   * @param {string} syscall\n   * @param {string} [original] err\n   */\n  constructor(err\x2C syscall\x2C original) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    const message = original ?\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\n\n    super(message);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\n/**\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\n * New function added the error description directly\n * from C++. this method for backwards compatibility\n * @param {number} err - A libuv error number\n * @param {string} syscall\n * @param {string} address\n * @param {number} [port]\n * @param {string} [additional]\n * @returns {Error}\n */\nclass ExceptionWithHostPort extends Error {\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\n    // TODO(joyeecheung): We have to use the type-checked\n    // getSystemErrorName(err) to guard against invalid arguments from users.\n    // This can be replaced with [ code ] = errmap.get(err) when this method\n    // is no longer exposed to user land.\n    util ??= require('util');\n    const code = util.getSystemErrorName(err);\n    let details = '';\n    if (port && port > 0) {\n      details = ` ${address}:${port}`;\n    } else if (address) {\n      details = ` ${address}`;\n    }\n    if (additional) {\n      details += ` - Local (${additional})`;\n    }\n\n    super(`${syscall} ${code}${details}`);\n\n    this.errno = err;\n    this.code = code;\n    this.syscall = syscall;\n    this.address = address;\n    if (port) {\n      this.port = port;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass DNSException extends Error {\n  /**\n   * @param {number|string} code - A libuv error number or a c-ares error code\n   * @param {string} syscall\n   * @param {string} [hostname]\n   */\n  constructor(code\x2C syscall\x2C hostname) {\n    let errno;\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\n    // c-ares error code.\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\n    // make them available in a property that's not error.errno (since they\n    // can be in conflict with libuv error codes). Also make sure\n    // util.getSystemErrorName() can understand them when an being informed that\n    // the number is a c-ares error code.\n    if (typeof code === 'number') {\n      errno = code;\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\n      // long enough that it's not practical to remove it.\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\n        code = 'ENOTFOUND'; // Fabricated error name.\n      } else {\n        code = lazyInternalUtil().getSystemErrorName(code);\n      }\n    }\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\n    this.errno = errno;\n    this.code = code;\n    this.syscall = syscall;\n    if (hostname) {\n      this.hostname = hostname;\n    }\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nclass ConnResetException extends Error {\n  constructor(msg) {\n    super(msg);\n    this.code = 'ECONNRESET';\n  }\n\n  get ['constructor']() {\n    return Error;\n  }\n}\n\nlet maxStack_ErrorName;\nlet maxStack_ErrorMessage;\n\n/**\n * Returns true if `err.name` and `err.message` are equal to engine-specific\n * values indicating max call stack size has been exceeded.\n * "Maximum call stack size exceeded" in V8.\n * @param {Error} err\n * @returns {boolean}\n */\nfunction isStackOverflowError(err) {\n  if (maxStack_ErrorMessage === undefined) {\n    try {\n      function overflowStack() { overflowStack(); }\n      overflowStack();\n    } catch (err) {\n      maxStack_ErrorMessage = err.message;\n      maxStack_ErrorName = err.name;\n    }\n  }\n\n  return err && err.name === maxStack_ErrorName &&\n         err.message === maxStack_ErrorMessage;\n}\n\n// Only use this for integers! Decimal numbers do not work with this function.\nfunction addNumericalSeparator(val) {\n  let res = '';\n  let i = val.length;\n  const start = val[0] === '-' ? 1 : 0;\n  for (; i >= start + 4; i -= 3) {\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\n  }\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\n}\n\n// Used to enhance the stack that will be picked up by the inspector\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\n\n// These are supposed to be called only on fatal exceptions before\n// the process exits.\nconst fatalExceptionStackEnhancers = {\n  beforeInspector(error) {\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\n      return error.stack;\n    }\n\n    try {\n      // Set the error.stack here so it gets picked up by the\n      // inspector.\n      error.stack = error[kEnhanceStackBeforeInspector]();\n    } catch {\n      // We are just enhancing the error. If it fails\x2C ignore it.\n    }\n    return error.stack;\n  }\x2C\n  afterInspector(error) {\n    const originalStack = error.stack;\n    let useColors = true;\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\n    // rather display them directly to the stdout. On those consoles\x2C\n    // libuv emulates colors by intercepting stdout stream and calling\n    // corresponding Windows API functions for setting console colors.\n    // However\x2C fatal error are handled differently and we cannot easily\n    // highlight them. On Windows\x2C detecting whether a console supports\n    // ANSI escape sequences is not reliable.\n    if (isWindows) {\n      const info = internalBinding('os').getOSInformation();\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.'\x2C 3)\x2C\n                                    Number);\n      if (ver[0] !== 10 || ver[2] < 14393) {\n        useColors = false;\n      }\n    }\n    const {\n      inspect\x2C\n      inspectDefaultOptions: {\n        colors: defaultColors\x2C\n      }\x2C\n    } = lazyInternalUtilInspect();\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\n    try {\n      return inspect(error\x2C {\n        colors\x2C\n        customInspect: false\x2C\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\n      });\n    } catch {\n      return originalStack;\n    }\n  }\x2C\n};\n\nconst {\n  privateSymbols: {\n    arrow_message_private_symbol\x2C\n  }\x2C\n} = internalBinding('util');\n// Ensures the printed error line is from user code.\nfunction setArrowMessage(err\x2C arrowMessage) {\n  err[arrow_message_private_symbol] = arrowMessage;\n}\n\n// Hide stack lines before the first user code line.\nfunction hideInternalStackFrames(error) {\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\n    let frames = stackFrames;\n    if (typeof stackFrames === 'object') {\n      frames = ArrayPrototypeFilter(\n        stackFrames\x2C\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\n                                            'node:internal')\x2C\n      );\n    }\n    ArrayPrototypeUnshift(frames\x2C error);\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\n  });\n}\n\n// Node uses an AbortError that isn't exactly the same as the DOMException\n// to make usage of the error in userland and readable-stream easier.\n// It is a regular error with `.code` and `.name`.\nclass AbortError extends Error {\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\n    if (options !== undefined && typeof options !== 'object') {\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\n    }\n    super(message\x2C options);\n    this.code = 'ABORT_ERR';\n    this.name = 'AbortError';\n  }\n}\n\n/**\n * This creates a generic Node.js error.\n * @param {string} message The error message.\n * @param {object} errorProperties Object with additional properties to be added to the error.\n * @returns {Error}\n */\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\n  // eslint-disable-next-line no-restricted-syntax\n  const err = new Error(message);\n  ObjectAssign(err\x2C errorProperties);\n  return err;\n});\n\n/**\n * Determine the specific type of a value for type-mismatch errors.\n * @param {*} value\n * @returns {string}\n */\nfunction determineSpecificType(value) {\n  if (value === null) {\n    return 'null';\n  } else if (value === undefined) {\n    return 'undefined';\n  }\n\n  const type = typeof value;\n\n  switch (type) {\n    case 'bigint':\n      return `type bigint (${value}n)`;\n    case 'number':\n      if (value === 0) {\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\n      } else if (value !== value) { // eslint-disable-line no-self-compare\n        return 'type number (NaN)';\n      } else if (value === Infinity) {\n        return 'type number (Infinity)';\n      } else if (value === -Infinity) {\n        return 'type number (-Infinity)';\n      }\n      return `type number (${value})`;\n    case 'boolean':\n      return value ? 'type boolean (true)' : 'type boolean (false)';\n    case 'symbol':\n      return `type symbol (${String(value)})`;\n    case 'function':\n      return `function ${value.name}`;\n    case 'object':\n      if (value.constructor && 'name' in value.constructor) {\n        return `an instance of ${value.constructor.name}`;\n      }\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\n    case 'string':\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\n        return `type string ('${value}')`;\n      }\n      return `type string (${JSONStringify(value)})`;\n    default:\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\n      if (value.length > 28) {\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\n      }\n\n      return `type ${type} (${value})`;\n  }\n}\n\n/**\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\n * We cannot use Intl.ListFormat because it's not available in\n * --without-intl builds.\n * @param {string[]} array An array of strings.\n * @param {string} [type] The list type to be inserted before the last element.\n * @returns {string}\n */\nfunction formatList(array\x2C type = 'and') {\n  switch (array.length) {\n    case 0: return '';\n    case 1: return `${array[0]}`;\n    case 2: return `${array[0]} ${type} ${array[1]}`;\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\n    default:\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\n  }\n}\n\nmodule.exports = {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  NodeAggregateError\x2C\n  codes\x2C\n  ConnResetException\x2C\n  DNSException\x2C\n  // This is exported only to facilitate testing.\n  determineSpecificType\x2C\n  E\x2C\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  fatalExceptionStackEnhancers\x2C\n  formatList\x2C\n  genericNodeError\x2C\n  getMessage\x2C\n  hideInternalStackFrames\x2C\n  hideStackFrames\x2C\n  inspectWithNoCustomRetry\x2C\n  isErrorStackTraceLimitWritable\x2C\n  isStackOverflowError\x2C\n  kEnhanceStackBeforeInspector\x2C\n  kIsNodeError\x2C\n  defaultPrepareStackTrace\x2C\n  setInternalPrepareStackTrace\x2C\n  overrideStackTrace\x2C\n  prepareStackTraceCallback\x2C\n  ErrorPrepareStackTrace\x2C\n  setArrowMessage\x2C\n  SystemError\x2C\n  uvErrmapGet\x2C\n  UVException\x2C\n  UVExceptionWithHostPort\x2C\n};\n\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\n// must be an upper case string. The val can be either a function or a string.\n// The def must be an error class.\n// The return value of the function must be a string.\n// Examples:\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\n//\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\n// any given error code must never be reused to identify a different error.\n//\n// Any error code added here should also be added to the documentation\n//\n// Note: Please try to keep these in alphabetical order\n//\n// Note: Node.js specific errors must begin with the prefix ERR_\n\nE('ERR_ACCESS_DENIED'\x2C\n  function(msg\x2C permission = ''\x2C resource = '') {\n    this.permission = permission;\n    this.resource = resource;\n    return msg;\n  }\x2C\n  Error);\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name = undefined) => {\n    if (name) {\n      return `"${name}" is outside of buffer bounds`;\n    }\n    return 'Attempt to access memory outside buffer bounds';\n  }\x2C RangeError);\nE('ERR_BUFFER_TOO_LARGE'\x2C\n  'Cannot create a Buffer larger than %s bytes'\x2C\n  RangeError);\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\n  'Child closed before reply received'\x2C Error);\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\n  Error);\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\n  RangeError);\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\n  'Console expects a writable stream instance for %s'\x2C TypeError);\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\n  'Custom engines not supported by this OpenSSL'\x2C Error);\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\n  'Public key is not valid for specified curve'\x2C Error);\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\n  Error);\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\n  Error);\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\n// Switch to TypeError. The current implementation does not seem right.\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\n  'Cannot do synchronous work on directory handle with concurrent ' +\n  'asynchronous operations'\x2C Error);\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\n  Error);\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\n  'A callback was registered through ' +\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\n     'exclusive with using the `domain` module'\x2C\n  Error);\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\n  Error);\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\n  'Deserialize main function is already configured.'\x2C Error);\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\n  this.errno = ret;\n  return `The encoded data was not valid for encoding ${encoding}`;\n}\x2C TypeError);\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\n  RangeError);\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\n  this.reason = reason;\n  return 'Promise was rejected with falsy value';\n}\x2C Error\x2C HideStackFramesError);\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\n  'The feature %s is unavailable on the current platform' +\n  '\x2C which is being used to run Node.js'\x2C\n  TypeError);\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\nE('ERR_FS_WATCH_QUEUE_OVERFLOW'\x2C 'fs.watch() queued more than %d events'\x2C Error);\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\n  ':authority header is required for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_PATH'\x2C\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\n  'Cannot specify additional headers after response initiated'\x2C Error);\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\n  'Header field "%s" must only have a single value'\x2C TypeError);\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\n  'Informational status codes cannot be used'\x2C RangeError);\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\n  'Invalid informational status code: %s'\x2C RangeError);\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\n  'Packed settings length must be a multiple of six'\x2C RangeError);\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\n  // Using default arguments here is important so the arguments are not counted\n  // towards `Function#length`.\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\n    this.actual = actual;\n    if (min !== undefined) {\n      this.min = min;\n      this.max = max;\n    }\n    return `Invalid value for setting "${name}": ${actual}`;\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\n  'Maximum number of pending settings acknowledgements'\x2C Error);\nE('ERR_HTTP2_NESTED_PUSH'\x2C\n  'A push stream cannot initiate another push stream.'\x2C Error);\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\n  Error);\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\n  'No stream ID is available because maximum stream ID has been reached'\x2C\n  Error);\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\n  'Responses with %s status must not have a payload'\x2C Error);\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\n  'Offset or length can only be specified for regular files'\x2C Error);\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\n  'The socket is already bound to an Http2Session'\x2C Error);\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\n  'The socket has been disconnected from the Http2Session'\x2C Error);\nE('ERR_HTTP2_STATUS_101'\x2C\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\n  let msg = 'The pending stream has been canceled';\n  if (error) {\n    this.cause = error;\n    if (typeof error.message === 'string')\n      msg += ` (caused by: ${error.message})`;\n  }\n  return msg;\n}\x2C Error);\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\n  'A stream cannot depend on itself'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\n  'Trailing headers have already been sent'\x2C Error);\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\n  'emitted'\x2C Error);\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\nE('ERR_HTTP_HEADERS_SENT'\x2C\n  'Cannot %s headers after they are sent to the client'\x2C Error);\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\n  'ServerResponse has an already assigned socket'\x2C Error);\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\nE('ERR_HTTP_TRAILER_INVALID'\x2C\n  'Trailers are invalid with this transfer encoding'\x2C Error);\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\n  'Module "%s" is not of type "%s"'\x2C TypeError);\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\n  function error(attribute\x2C value\x2C url = undefined) {\n    if (url === undefined) {\n      return `Import attribute "${attribute}" with value "${value}" is not supported`;\n    }\n    return `Import attribute "${attribute}" with value "${value}" is not supported in ${url}`;\n  }\x2C TypeError);\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\n  'Inspector is already activated. Close it with inspector.close() ' +\n  'before activating it again.'\x2C\n  Error);\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\n  const suffix = 'This is caused by either a bug in Node.js ' +\n    'or incorrect usage of Node.js internals.\\n' +\n    'Please open an issue with this stack trace at ' +\n    'https://github.com/nodejs/node/issues\\n';\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\n}\x2C Error);\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\n  this.host = host;\n  this.port = port;\n  return `Invalid address family: ${addressType} ${host}:${port}`;\n}\x2C RangeError);\nE('ERR_INVALID_ARG_TYPE'\x2C\n  (name\x2C expected\x2C actual) => {\n    assert(typeof name === 'string'\x2C "'name' must be a string");\n    if (!ArrayIsArray(expected)) {\n      expected = [expected];\n    }\n\n    let msg = 'The ';\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\n      // For cases like 'first argument'\n      msg += `${name} `;\n    } else {\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n      msg += `"${name}" ${type} `;\n    }\n    msg += 'must be ';\n\n    const types = [];\n    const instances = [];\n    const other = [];\n\n    for (const value of expected) {\n      assert(typeof value === 'string'\x2C\n             'All expected entries have to be of type string');\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\n        ArrayPrototypePush(instances\x2C value);\n      } else {\n        assert(value !== 'object'\x2C\n               'The value "object" should be written as "Object"');\n        ArrayPrototypePush(other\x2C value);\n      }\n    }\n\n    // Special handle `object` in case other instances are allowed to outline\n    // the differences between each other.\n    if (instances.length > 0) {\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\n      if (pos !== -1) {\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\n        ArrayPrototypePush(instances\x2C 'Object');\n      }\n    }\n\n    if (types.length > 0) {\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\n      if (instances.length > 0 || other.length > 0)\n        msg += ' or ';\n    }\n\n    if (instances.length > 0) {\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\n      if (other.length > 0)\n        msg += ' or ';\n    }\n\n    if (other.length > 0) {\n      if (other.length > 1) {\n        msg += `one of ${formatList(other\x2C 'or')}`;\n      } else {\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\n          msg += 'an ';\n        msg += `${other[0]}`;\n      }\n    }\n\n    msg += `. Received ${determineSpecificType(actual)}`;\n\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\n  let inspected = lazyInternalUtilInspect().inspect(value);\n  if (inspected.length > 128) {\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\n  }\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\nE('ERR_INVALID_BUFFER_SIZE'\x2C\n  'Buffer size must be a multiple of %s'\x2C RangeError);\nE('ERR_INVALID_CHAR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (name\x2C field = undefined) => {\n    let msg = `Invalid character in ${name}`;\n    if (field !== undefined) {\n      msg += ` ["${field}"]`;\n    }\n    return msg;\n  }\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_CURSOR_POS'\x2C\n  'Cannot set cursor row without setting its column'\x2C TypeError);\nE('ERR_INVALID_FD'\x2C\n  '"fd" must be a positive integer: %s'\x2C RangeError);\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_HOST'\x2C\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\n}\x2C TypeError);\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\n  return `Invalid module "${request}" ${reason}${base ?\n    ` imported from ${base}` : ''}`;\n}\x2C TypeError);\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\n    ''}${message ? `. ${message}` : ''}`;\n}\x2C Error);\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\n    const relError = typeof target === 'string' && !isImport &&\n      target.length && !StringPrototypeStartsWith(target\x2C './');\n    if (key === '.') {\n      assert(isImport === false);\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\n        `in the package config ${pkgPath}package.json${base ?\n          ` imported from ${base}` : ''}${relError ?\n          '; targets must start with "./"' : ''}`;\n    }\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\n      JSONStringify(target)} defined for '${key}' in the package config ${\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\n      '; targets must start with "./"' : ''}`;\n  }\x2C Error);\nE('ERR_INVALID_PROTOCOL'\x2C\n  'Protocol "%s" not supported. Expected "%s"'\x2C\n  TypeError);\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\n  return `Expected ${input} to be returned for the "${prop}" from the` +\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\n}\x2C TypeError);\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\n  const type = determineSpecificType(value);\n\n  return `Expected ${input} to be returned from the "${name}"` +\n         ` function but got ${type}.`;\n}\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\n  'Asynchronous forks do not support ' +\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\n  TypeError);\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\nE('ERR_INVALID_TYPESCRIPT_SYNTAX'\x2C '%s'\x2C SyntaxError);\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\n  this.input = input;\n\n  if (base != null) {\n    this.base = base;\n  }\n\n  // Don't include URL in message.\n  // (See https://github.com/nodejs/node/pull/38614)\n  return 'Invalid URL';\n}\x2C TypeError);\nE('ERR_INVALID_URL_SCHEME'\x2C\n  (expected) => {\n    if (typeof expected === 'string')\n      expected = [expected];\n    assert(expected.length <= 2);\n    const res = expected.length === 2 ?\n      `one of scheme ${expected[0]} or ${expected[1]}` :\n      `of scheme ${expected[0]}`;\n    return `The URL must be ${res}`;\n  }\x2C TypeError);\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\nE('ERR_IP_BLOCKED'\x2C function(ip) {\n  return `IP(${ip}) is blocked by net.BlockList`;\n}\x2C Error);\nE(\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\n  '"%s" did not call the next hook in its chain and did not' +\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\n  Error\x2C\n);\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\nE('ERR_MISSING_ARGS'\x2C\n  (...args) => {\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\n    let msg = 'The ';\n    const len = args.length;\n    const wrap = (a) => `"${a}"`;\n    args = ArrayPrototypeMap(\n      args\x2C\n      (a) => (ArrayIsArray(a) ?\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\n        wrap(a))\x2C\n    );\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\n    return `${msg} must be specified`;\n  }\x2C TypeError);\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\n  if (exactUrl) {\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\n  }\n  return `Cannot find ${\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\n}\x2C Error);\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\n  'byte_offset + byte_length should be less than or equal to the size in ' +\n    'bytes of the array passed in'\x2C\n  RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\n  'Invalid typed array length'\x2C RangeError);\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\nE('ERR_NO_CRYPTO'\x2C\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\nE('ERR_NO_ICU'\x2C\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\nE('ERR_NO_TYPESCRIPT'\x2C\n  'Node.js is not compiled with TypeScript support'\x2C Error);\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\nE('ERR_OUT_OF_RANGE'\x2C\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\n    assert(range\x2C 'Missing "range" argument');\n    let msg = replaceDefaultBoolean ? str :\n      `The value of "${str}" is out of range.`;\n    let received;\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input));\n    } else if (typeof input === 'bigint') {\n      received = String(input);\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\n        received = addNumericalSeparator(received);\n      }\n      received += 'n';\n    } else {\n      received = lazyInternalUtilInspect().inspect(input);\n    }\n    msg += ` It must be ${range}. Received ${received}`;\n    return msg;\n  }\x2C RangeError\x2C HideStackFramesError);\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\n}\x2C TypeError);\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\n  if (subpath === '.')\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\n      ` imported from ${base}` : ''}`;\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\n}\x2C Error);\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\n  'command does not take positional arguments'\x2C TypeError);\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\n    "argument starting with a '-'\x2C place it at the end of the command after " +\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\n  return `Unknown option '${option}'${suggestDashDash}`;\n}\x2C TypeError);\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\n  '%d is not a valid timestamp'\x2C TypeError);\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\nE('ERR_PROXY_INVALID_CONFIG'\x2C '%s'\x2C Error);\nE('ERR_PROXY_TUNNEL'\x2C '%s'\x2C Error);\nE('ERR_QUIC_APPLICATION_ERROR'\x2C 'A QUIC application error occurred. %d [%s]'\x2C Error);\nE('ERR_QUIC_CONNECTION_FAILED'\x2C 'QUIC connection failed'\x2C Error);\nE('ERR_QUIC_ENDPOINT_CLOSED'\x2C 'QUIC endpoint closed: %s (%d)'\x2C Error);\nE('ERR_QUIC_OPEN_STREAM_FAILED'\x2C 'Failed to open QUIC stream'\x2C Error);\nE('ERR_QUIC_TRANSPORT_ERROR'\x2C 'A QUIC transport error occurred. %d [%s]'\x2C Error);\nE('ERR_QUIC_VERSION_NEGOTIATION_ERROR'\x2C 'The QUIC session requires version negotiation'\x2C Error);\nE('ERR_REQUIRE_ASYNC_MODULE'\x2C function(filename\x2C parentFilename) {\n  let message = 'require() cannot be used on an ESM ' +\n  'graph with top-level await. Use import() instead. To see where the' +\n  ' top-level await comes from\x2C use --experimental-print-required-tla.';\n  if (parentFilename) {\n    message += `\\n  From ${parentFilename} `;\n  }\n  if (filename) {\n    message += `\\n  Requiring ${filename} `;\n  }\n  return message;\n}\x2C Error);\nE('ERR_REQUIRE_CYCLE_MODULE'\x2C '%s'\x2C Error);\nE('ERR_REQUIRE_ESM'\x2C\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\n    hideInternalStackFrames(this);\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\n      parentPath}` : ''} not supported.`;\n    if (!packageJsonPath) {\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\n            'import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    const path = require('path');\n    const basename = parentPath && path.basename(filename) ===\n      path.basename(parentPath) ? filename : path.basename(filename);\n    if (hasEsmSyntax) {\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\n        ' a dynamic import() which is available in all CommonJS modules.';\n      return msg;\n    }\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\n      'file whose nearest parent package.json contains "type": "module" ' +\n      'which declares all .js files in that package scope as ES modules.' +\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\n      'code to use dynamic import() which is available in all CommonJS ' +\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\n      'all ES modules instead).\\n';\n    return msg;\n  }\x2C Error);\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\n  'Listen method has been called more than once without closing.'\x2C Error);\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\n  'Cannot find asset %s for the single executable application'\x2C Error);\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\n  'Buffer size must be a positive integer'\x2C TypeError);\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\n  assert(typeof allowZero === 'boolean'\x2C\n         "The 'allowZero' argument must be of type boolean.");\n  const operator = allowZero ? '>=' : '>';\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\n}\x2C RangeError\x2C HideStackFramesError);\nE('ERR_SOCKET_BAD_TYPE'\x2C\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\n  'Could not get or set buffer size'\x2C\n  SystemError);\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\n  'Socket closed before the connection was established'\x2C\n  Error);\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\n  'Socket connection timeout'\x2C Error);\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\nE('ERR_SOURCE_MAP_CORRUPT'\x2C `The source map for '%s' does not exist or is corrupt.`\x2C Error);\nE('ERR_SOURCE_MAP_MISSING_SOURCE'\x2C `Cannot find '%s' imported from the source map for '%s'`\x2C Error);\nE('ERR_SRI_PARSE'\x2C\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\n  SyntaxError);\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\n  'Cannot call %s after a stream was finished'\x2C\n  Error);\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\nE('ERR_STREAM_UNABLE_TO_PIPE'\x2C 'Cannot pipe to a closed or destroyed stream'\x2C Error);\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\n  'stream.unshift() after end event'\x2C Error);\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\n  hideInternalStackFrames(this);\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\n         "The 'failureType' argument must be of type string or symbol.");\n\n  let msg = error?.message ?? error;\n\n  if (typeof msg !== 'string') {\n    msg = inspectWithNoCustomRetry(msg);\n  }\n\n  this.failureType = failureType;\n  this.cause = error;\n  return msg;\n}\x2C Error);\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\n  return `ALPN callback returned a value (${\n    value\n  }) that did not match any of the client's offered protocols (${\n    protocols.join('\x2C ')\n  })`;\n}\x2C TypeError);\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\n  TypeError);\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\n  SyntaxError);\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\n  this.reason = reason;\n  this.host = host;\n  this.cert = cert;\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\n}\x2C Error);\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\n  Error);\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\n  'TLS session renegotiation disabled for this socket'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\n  '"servername" is required parameter for Server.addContext'\x2C Error);\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\n  'At least one category is required'\x2C TypeError);\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\n\nE('ERR_TRAILING_JUNK_AFTER_STREAM_END'\x2C 'Trailing junk found after the end of the compressed stream'\x2C TypeError);\n\n// This should probably be a `RangeError`.\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\n  'handler'\x2C Error);\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\n    'callback was already active'\x2C\n  Error);\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\nE('ERR_UNHANDLED_ERROR'\x2C\n  // Using a default argument here is important so the argument is not counted\n  // towards `Function#length`.\n  (err = undefined) => {\n    const msg = 'Unhandled error.';\n    if (err === undefined) return msg;\n    return `${msg} (${err})`;\n  }\x2C Error);\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\n  RangeError);\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\n  return `Directory import '${path}' is not supported ` +\n    `resolving ES modules imported from ${base}`;\n}\x2C Error);\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\n  if (isWindows && url.protocol.length === 2) {\n    msg +=\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\n  }\n  msg += `. Received protocol '${url.protocol}'`;\n  return msg;\n}\x2C Error);\nE('ERR_UNSUPPORTED_NODE_MODULES_TYPE_STRIPPING'\x2C\n  'Stripping types is currently unsupported for files under node_modules\x2C for "%s"'\x2C\n  Error);\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\n  TypeError);\nE('ERR_UNSUPPORTED_TYPESCRIPT_SYNTAX'\x2C '%s'\x2C SyntaxError);\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\n\n// This should probably be a `TypeError`.\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\n  'At least one valid performance entry type is required'\x2C Error);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\n  'A dynamic import callback was not specified.'\x2C TypeError);\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\n  TypeError);\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\n  'Linked modules must use the same context'\x2C Error);\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\n  this.cause = cause;\n  return message;\n}\x2C Error);\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\n  'Provided module is not an instance of Module'\x2C Error);\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\n  Error);\nE('ERR_WORKER_MESSAGING_ERRORED'\x2C 'The destination thread threw an error while processing the message'\x2C Error);\nE('ERR_WORKER_MESSAGING_FAILED'\x2C 'Cannot find the destination thread or listener'\x2C Error);\nE('ERR_WORKER_MESSAGING_SAME_THREAD'\x2C 'Cannot sent a message to the same thread'\x2C Error);\nE('ERR_WORKER_MESSAGING_TIMEOUT'\x2C 'Sending a message to another thread timed out'\x2C Error);\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\nE('ERR_WORKER_PATH'\x2C (filename) =>\n  'The worker script or module filename must be an absolute path or a ' +\n  'relative path starting with \\'./\\' or \\'../\\'.' +\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\n    ' Wrap file:// URLs with `new URL`.' : ''\n  ) +\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\n    ' Wrap data: URLs with `new URL`.' : ''\n  ) +\n  ` Received "${filename}"`\x2C\n  TypeError);\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\n  'Serializing an uncaught exception failed'\x2C Error);\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\n  '%s is not supported in workers'\x2C TypeError);\nE('ERR_ZSTD_INVALID_PARAM'\x2C '%s is not a valid zstd parameter'\x2C RangeError);\n
code-source-info,0x148003480,7,14771,14959,,,
code-creation,JS,10,36833,0x148003740,1304,dirname node:path:1402:10,0xb1c4a40ab50,^
code-source-info,0x148003740,37,43234,43903,,,
tick,0x1937c8b68,36833,0,0x0,9,0x277c96e8f7df,0x148000610,0x1480002b4,0x277c96e855e7,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,10,37041,0x148003c80,64,get hasSubscribers node:diagnostics_channel:208:21,0xb1c4a400220,^
script-source,30,node:diagnostics_channel,'use strict';\n\nconst {\n  ArrayPrototypeAt\x2C\n  ArrayPrototypeIndexOf\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypePushApply\x2C\n  ArrayPrototypeSlice\x2C\n  ArrayPrototypeSplice\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseReject\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeFinalizationRegistry\x2C\n  SafeMap\x2C\n  SymbolHasInstance\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_INVALID_ARG_TYPE\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { triggerUncaughtException } = internalBinding('errors');\n\nconst { WeakReference } = require('internal/util');\n\n// Can't delete when weakref count reaches 0 as it could increment again.\n// Only GC can be used as a valid time to clean up the channels map.\nclass WeakRefMap extends SafeMap {\n  #finalizers = new SafeFinalizationRegistry((key) => {\n    this.delete(key);\n  });\n\n  set(key\x2C value) {\n    this.#finalizers.register(value\x2C key);\n    return super.set(key\x2C new WeakReference(value));\n  }\n\n  get(key) {\n    return super.get(key)?.get();\n  }\n\n  incRef(key) {\n    return super.get(key)?.incRef();\n  }\n\n  decRef(key) {\n    return super.get(key)?.decRef();\n  }\n}\n\nfunction markActive(channel) {\n  // eslint-disable-next-line no-use-before-define\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\n  channel._subscribers = [];\n  channel._stores = new SafeMap();\n}\n\nfunction maybeMarkInactive(channel) {\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\n  if (!channel._subscribers.length && !channel._stores.size) {\n    // eslint-disable-next-line no-use-before-define\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\n    channel._subscribers = undefined;\n    channel._stores = undefined;\n  }\n}\n\nfunction defaultTransform(data) {\n  return data;\n}\n\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\n  return () => {\n    let context;\n    try {\n      context = transform(data);\n    } catch (err) {\n      process.nextTick(() => {\n        triggerUncaughtException(err\x2C false);\n      });\n      return next();\n    }\n\n    return store.run(context\x2C next);\n  };\n}\n\n// TODO(qard): should there be a C++ channel interface?\nclass ActiveChannel {\n  subscribe(subscription) {\n    validateFunction(subscription\x2C 'subscription');\n    this._subscribers = ArrayPrototypeSlice(this._subscribers);\n    ArrayPrototypePush(this._subscribers\x2C subscription);\n    channels.incRef(this.name);\n  }\n\n  unsubscribe(subscription) {\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\n    if (index === -1) return false;\n\n    const before = ArrayPrototypeSlice(this._subscribers\x2C 0\x2C index);\n    const after = ArrayPrototypeSlice(this._subscribers\x2C index + 1);\n    this._subscribers = before;\n    ArrayPrototypePushApply(this._subscribers\x2C after);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  bindStore(store\x2C transform) {\n    const replacing = this._stores.has(store);\n    if (!replacing) channels.incRef(this.name);\n    this._stores.set(store\x2C transform);\n  }\n\n  unbindStore(store) {\n    if (!this._stores.has(store)) {\n      return false;\n    }\n\n    this._stores.delete(store);\n\n    channels.decRef(this.name);\n    maybeMarkInactive(this);\n\n    return true;\n  }\n\n  get hasSubscribers() {\n    return true;\n  }\n\n  publish(data) {\n    const subscribers = this._subscribers;\n    for (let i = 0; i < (subscribers?.length || 0); i++) {\n      try {\n        const onMessage = subscribers[i];\n        onMessage(data\x2C this.name);\n      } catch (err) {\n        process.nextTick(() => {\n          triggerUncaughtException(err\x2C false);\n        });\n      }\n    }\n  }\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    let run = () => {\n      this.publish(data);\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    };\n\n    for (const entry of this._stores.entries()) {\n      const store = entry[0];\n      const transform = entry[1];\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\n    }\n\n    return run();\n  }\n}\n\nclass Channel {\n  constructor(name) {\n    this._subscribers = undefined;\n    this._stores = undefined;\n    this.name = name;\n\n    channels.set(name\x2C this);\n  }\n\n  static [SymbolHasInstance](instance) {\n    const prototype = ObjectGetPrototypeOf(instance);\n    return prototype === Channel.prototype ||\n           prototype === ActiveChannel.prototype;\n  }\n\n  subscribe(subscription) {\n    markActive(this);\n    this.subscribe(subscription);\n  }\n\n  unsubscribe() {\n    return false;\n  }\n\n  bindStore(store\x2C transform) {\n    markActive(this);\n    this.bindStore(store\x2C transform);\n  }\n\n  unbindStore() {\n    return false;\n  }\n\n  get hasSubscribers() {\n    return false;\n  }\n\n  publish() {}\n\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\n    return ReflectApply(fn\x2C thisArg\x2C args);\n  }\n}\n\nconst channels = new WeakRefMap();\n\nfunction channel(name) {\n  const channel = channels.get(name);\n  if (channel) return channel;\n\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\n  }\n\n  return new Channel(name);\n}\n\nfunction subscribe(name\x2C subscription) {\n  return channel(name).subscribe(subscription);\n}\n\nfunction unsubscribe(name\x2C subscription) {\n  return channel(name).unsubscribe(subscription);\n}\n\nfunction hasSubscribers(name) {\n  const channel = channels.get(name);\n  if (!channel) return false;\n\n  return channel.hasSubscribers;\n}\n\nconst traceEvents = [\n  'start'\x2C\n  'end'\x2C\n  'asyncStart'\x2C\n  'asyncEnd'\x2C\n  'error'\x2C\n];\n\nfunction assertChannel(value\x2C name) {\n  if (!(value instanceof Channel)) {\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\n  }\n}\n\nfunction tracingChannelFrom(nameOrChannels\x2C name) {\n  if (typeof nameOrChannels === 'string') {\n    return channel(`tracing:${nameOrChannels}:${name}`);\n  }\n\n  if (typeof nameOrChannels === 'object' && nameOrChannels !== null) {\n    const channel = nameOrChannels[name];\n    assertChannel(channel\x2C `nameOrChannels.${name}`);\n    return channel;\n  }\n\n  throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\n                                 ['string'\x2C 'object'\x2C 'TracingChannel']\x2C\n                                 nameOrChannels);\n}\n\nclass TracingChannel {\n  constructor(nameOrChannels) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const eventName = traceEvents[i];\n      ObjectDefineProperty(this\x2C eventName\x2C {\n        __proto__: null\x2C\n        value: tracingChannelFrom(nameOrChannels\x2C eventName)\x2C\n      });\n    }\n  }\n\n  get hasSubscribers() {\n    return this.start?.hasSubscribers ||\n      this.end?.hasSubscribers ||\n      this.asyncStart?.hasSubscribers ||\n      this.asyncEnd?.hasSubscribers ||\n      this.error?.hasSubscribers;\n  }\n\n  subscribe(handlers) {\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      this[name]?.subscribe(handlers[name]);\n    }\n  }\n\n  unsubscribe(handlers) {\n    let done = true;\n\n    for (let i = 0; i < traceEvents.length; ++i) {\n      const name = traceEvents[i];\n      if (!handlers[name]) continue;\n\n      if (!this[name]?.unsubscribe(handlers[name])) {\n        done = false;\n      }\n    }\n\n    return done;\n  }\n\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C error } = this;\n\n    return start.runStores(context\x2C () => {\n      try {\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\n        context.result = result;\n        return result;\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function reject(err) {\n      context.error = err;\n      error.publish(context);\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return PromiseReject(err);\n    }\n\n    function resolve(result) {\n      context.result = result;\n      asyncStart.publish(context);\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\n      asyncEnd.publish(context);\n      return result;\n    }\n\n    return start.runStores(context\x2C () => {\n      try {\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\n        // Convert thenables to native promises\n        if (!(promise instanceof Promise)) {\n          promise = PromiseResolve(promise);\n        }\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\n    if (!this.hasSubscribers) {\n      return ReflectApply(fn\x2C thisArg\x2C args);\n    }\n\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\n\n    function wrappedCallback(err\x2C res) {\n      if (err) {\n        context.error = err;\n        error.publish(context);\n      } else {\n        context.result = res;\n      }\n\n      // Using runStores here enables manual context failure recovery\n      asyncStart.runStores(context\x2C () => {\n        try {\n          return ReflectApply(callback\x2C this\x2C arguments);\n        } finally {\n          asyncEnd.publish(context);\n        }\n      });\n    }\n\n    const callback = ArrayPrototypeAt(args\x2C position);\n    validateFunction(callback\x2C 'callback');\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\n\n    return start.runStores(context\x2C () => {\n      try {\n        return ReflectApply(fn\x2C thisArg\x2C args);\n      } catch (err) {\n        context.error = err;\n        error.publish(context);\n        throw err;\n      } finally {\n        end.publish(context);\n      }\n    });\n  }\n}\n\nfunction tracingChannel(nameOrChannels) {\n  return new TracingChannel(nameOrChannels);\n}\n\nmodule.exports = {\n  channel\x2C\n  hasSubscribers\x2C\n  subscribe\x2C\n  tracingChannel\x2C\n  unsubscribe\x2C\n  Channel\x2C\n};\n
code-source-info,0x148003c80,30,4701,4727,,,
code-creation,JS,10,37416,0x148003ce0,328,makeBitMapDescriptor node:internal/streams/readable:127:30,0x32a185945b40,^
code-source-info,0x148003ce0,91,3762,3955,,,
code-creation,JS,10,37416,0x148003e60,328,makeBitMapDescriptor node:internal/streams/writable:126:30,0x32a1859553d0,^
code-source-info,0x148003e60,96,3843,4036,,,
code-creation,JS,10,37416,0x148003fe0,256,get node:diagnostics_channel:48:6,0x3699125fed00,^
code-source-info,0x148003fe0,30,1054,1099,,,
code-creation,JS,10,37416,0x148004100,184,WeakReference node:internal/util:889:3,0x3699125da6f8,^
code-source-info,0x148004100,13,25065,25174,,,
code-creation,JS,10,37416,0x1480041e0,376,SafeWeakRef node:internal/per_context/primordials:443:16,0x3699125c0a38,^
code-source-info,0x1480041e0,3,12628,12655,,,
code-creation,JS,10,37458,0x148004380,304,WeakReference node:internal/util:893:14,0x3699125da820,^
code-source-info,0x148004380,13,25189,25245,,,
code-creation,JS,10,37458,0x1480044e0,384,set node:diagnostics_channel:43:6,0x3699125fec40,^
code-source-info,0x1480044e0,30,933,1047,,,
code-creation,JS,10,37458,0x148004680,304,Channel node:diagnostics_channel:176:14,0x3699125ffd60,^
code-source-info,0x148004680,30,4085,4215,,,
code-creation,JS,10,37458,0x1480047e0,680,channel node:diagnostics_channel:221:17,0xb1c4a400458,^
code-source-info,0x1480047e0,30,4890,5140,,,
code-creation,Eval,9,37541,0x277c96e8ff30,5, node:internal/perf/performance_entry:1:1,0x32a185970e30,~
script-source,103,node:internal/perf/performance_entry,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  Symbol\x2C\n} = primordials;\n\nconst {\n  codes: {\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  customInspectSymbol: kInspect\x2C\n  kEnumerableProperty\x2C\n} = require('internal/util');\nconst { validateThisInternalField } = require('internal/validators');\n\nconst { inspect } = require('util');\n\nconst kName = Symbol('PerformanceEntry.Name');\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\nconst kDuration = Symbol('PerformanceEntry.Duration');\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\nconst kSkipThrow = Symbol('kSkipThrow');\n\nfunction isPerformanceEntry(obj) {\n  return obj?.[kName] !== undefined;\n}\n\nclass PerformanceEntry {\n  constructor(\n    skipThrowSymbol = undefined\x2C\n    name = undefined\x2C\n    type = undefined\x2C\n    start = undefined\x2C\n    duration = undefined\x2C\n  ) {\n    if (skipThrowSymbol !== kSkipThrow) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n\n    this[kName] = name;\n    this[kEntryType] = type;\n    this[kStartTime] = start;\n    this[kDuration] = duration;\n  }\n\n  get name() {\n    validateThisInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return this[kName];\n  }\n\n  get entryType() {\n    validateThisInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\n    return this[kEntryType];\n  }\n\n  get startTime() {\n    validateThisInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\n    return this[kStartTime];\n  }\n\n  get duration() {\n    validateThisInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\n    return this[kDuration];\n  }\n\n  [kInspect](depth\x2C options) {\n    if (depth < 0) return this;\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\n  }\n\n  toJSON() {\n    validateThisInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n    };\n  }\n}\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  entryType: kEnumerableProperty\x2C\n  startTime: kEnumerableProperty\x2C\n  duration: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n}\n\n/**\n * Node.js specific extension to PerformanceEntry.\n */\nclass PerformanceNodeEntry extends PerformanceEntry {\n  get detail() {\n    validateThisInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\n    return this[kDetail];\n  }\n\n  toJSON() {\n    validateThisInternalField(this\x2C kName\x2C 'PerformanceEntry');\n    return {\n      name: this[kName]\x2C\n      entryType: this[kEntryType]\x2C\n      startTime: this[kStartTime]\x2C\n      duration: this[kDuration]\x2C\n      detail: this[kDetail]\x2C\n    };\n  }\n}\n\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\n\n  entry[kDetail] = detail;\n\n  return entry;\n}\n\nmodule.exports = {\n  createPerformanceEntry\x2C\n  PerformanceEntry\x2C\n  isPerformanceEntry\x2C\n  PerformanceNodeEntry\x2C\n  createPerformanceNodeEntry\x2C\n  kSkipThrow\x2C\n};\n
code-source-info,0x277c96e8ff30,103,0,3304,C0O0C4O3304,,
code-creation,JS,9,37666,0x277c96e90258,371, node:internal/perf/performance_entry:1:1,0x32a185970fb0,~
code-source-info,0x277c96e90258,103,0,3304,C0O0C53O25C58O51C63O134C66O134C71O94C76O100C82O231C85O231C90O194C95O206C100O295C103O295C108O265C114O348C117O348C122O336C128O380C131O380C135O380C137O432C140O432C144O432C146O489C149O489C153O489C155O545C158O545C162O545C164O598C167O598C171O598C173O656C176O656C180O656C211O1615C239O754C241O2091C244O2131C256O2152C262O2186C268O2220C274O2253C280O2284C284O2091C292O2542C320O2507C322O3146C329O3167C335O3193C341O3213C347O3235C353O3259C359O3289C365O3161C370O3303,,
tick,0x1938f5aa4,37708,0,0x0,9,0x148000544,0x1480002b4,0x277c96e8f9a9,0x148000610,0x1480002b4,0x277c96e855e7,0x148000610,0x1480002b4,0x277c96e8362e,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,9,37875,0x277c96e904e0,34,protoGetter node:net:880:21,0x7143c2cc00,~
code-source-info,0x277c96e904e0,81,23189,23351,C0O23210C8O23238C13O23249C20O23334C27O23210C33O23350,,
code-creation,Eval,9,38375,0x277c96e90588,5, node:dgram:1:1,0x32a18597c450,~
script-source,104,node:dgram,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypePush\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectDefineProperty\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  SymbolAsyncDispose\x2C\n  SymbolDispose\x2C\n} = primordials;\n\nconst {\n  ErrnoException\x2C\n  ExceptionWithHostPort\x2C\n  codes: {\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_FD_TYPE\x2C\n    ERR_IP_BLOCKED\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_SOCKET_ALREADY_BOUND\x2C\n    ERR_SOCKET_BAD_BUFFER_SIZE\x2C\n    ERR_SOCKET_BUFFER_SIZE\x2C\n    ERR_SOCKET_DGRAM_IS_CONNECTED\x2C\n    ERR_SOCKET_DGRAM_NOT_CONNECTED\x2C\n    ERR_SOCKET_DGRAM_NOT_RUNNING\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n} = require('internal/dgram');\nconst { isIP } = require('internal/net');\nconst {\n  isInt32\x2C\n  validateAbortSignal\x2C\n  validateString\x2C\n  validateNumber\x2C\n  validatePort\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst { Buffer } = require('buffer');\nconst { deprecate\x2C guessHandleType\x2C promisify } = require('internal/util');\nconst { isArrayBufferView } = require('internal/util/types');\nconst EventEmitter = require('events');\nconst { addAbortListener } = require('internal/events/abort_listener');\nconst {\n  defaultTriggerAsyncIdScope\x2C\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\n} = require('internal/async_hooks');\nconst { UV_UDP_REUSEADDR } = internalBinding('constants').os;\n\nconst {\n  constants: { UV_UDP_IPV6ONLY\x2C UV_UDP_REUSEPORT }\x2C\n  UDP\x2C\n  SendWrap\x2C\n} = internalBinding('udp_wrap');\n\nconst dc = require('diagnostics_channel');\nconst udpSocketChannel = dc.channel('udp.socket');\n\nconst BIND_STATE_UNBOUND = 0;\nconst BIND_STATE_BINDING = 1;\nconst BIND_STATE_BOUND = 2;\n\nconst CONNECT_STATE_DISCONNECTED = 0;\nconst CONNECT_STATE_CONNECTING = 1;\nconst CONNECT_STATE_CONNECTED = 2;\n\nconst RECV_BUFFER = true;\nconst SEND_BUFFER = false;\n\n// Lazily loaded\nlet _cluster = null;\nfunction lazyLoadCluster() {\n  return _cluster ??= require('cluster');\n}\nlet _blockList = null;\nfunction lazyLoadBlockList() {\n  return _blockList ??= require('internal/blocklist').BlockList;\n}\n\nfunction Socket(type\x2C listener) {\n  FunctionPrototypeCall(EventEmitter\x2C this);\n  let lookup;\n  let recvBufferSize;\n  let sendBufferSize;\n  let receiveBlockList;\n  let sendBlockList;\n\n  let options;\n  if (type !== null && typeof type === 'object') {\n    options = type;\n    type = options.type;\n    lookup = options.lookup;\n    if (options.recvBufferSize) {\n      validateUint32(options.recvBufferSize\x2C 'options.recvBufferSize');\n    }\n    if (options.sendBufferSize) {\n      validateUint32(options.sendBufferSize\x2C 'options.sendBufferSize');\n    }\n    recvBufferSize = options.recvBufferSize;\n    sendBufferSize = options.sendBufferSize;\n    if (options.receiveBlockList) {\n      if (!lazyLoadBlockList().isBlockList(options.receiveBlockList)) {\n        throw new ERR_INVALID_ARG_TYPE('options.receiveBlockList'\x2C 'net.BlockList'\x2C options.receiveBlockList);\n      }\n      receiveBlockList = options.receiveBlockList;\n    }\n    if (options.sendBlockList) {\n      if (!lazyLoadBlockList().isBlockList(options.sendBlockList)) {\n        throw new ERR_INVALID_ARG_TYPE('options.sendBlockList'\x2C 'net.BlockList'\x2C options.sendBlockList);\n      }\n      sendBlockList = options.sendBlockList;\n    }\n  }\n\n  const handle = newHandle(type\x2C lookup);\n  handle[owner_symbol] = this;\n\n  this[async_id_symbol] = handle.getAsyncId();\n  this.type = type;\n\n  if (typeof listener === 'function')\n    this.on('message'\x2C listener);\n\n  this[kStateSymbol] = {\n    handle\x2C\n    receiving: false\x2C\n    bindState: BIND_STATE_UNBOUND\x2C\n    connectState: CONNECT_STATE_DISCONNECTED\x2C\n    queue: undefined\x2C\n    reuseAddr: options?.reuseAddr\x2C // Use UV_UDP_REUSEADDR if true.\n    reusePort: options?.reusePort\x2C\n    ipv6Only: options?.ipv6Only\x2C\n    recvBufferSize\x2C\n    sendBufferSize\x2C\n    receiveBlockList\x2C\n    sendBlockList\x2C\n  };\n\n  if (options?.signal !== undefined) {\n    const { signal } = options;\n    validateAbortSignal(signal\x2C 'options.signal');\n    const onAborted = () => {\n      if (this[kStateSymbol].handle) this.close();\n    };\n    if (signal.aborted) {\n      onAborted();\n    } else {\n      const disposable = addAbortListener(signal\x2C onAborted);\n      this.once('close'\x2C disposable[SymbolDispose]);\n    }\n  }\n  if (udpSocketChannel.hasSubscribers) {\n    udpSocketChannel.publish({\n      socket: this\x2C\n    });\n  }\n}\nObjectSetPrototypeOf(Socket.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Socket\x2C EventEmitter);\n\n\nfunction createSocket(type\x2C listener) {\n  return new Socket(type\x2C listener);\n}\n\n\nfunction startListening(socket) {\n  const state = socket[kStateSymbol];\n\n  state.handle.onmessage = onMessage;\n  state.handle.onerror = onError;\n  state.handle.recvStart();\n  state.receiving = true;\n  state.bindState = BIND_STATE_BOUND;\n\n  if (state.recvBufferSize)\n    bufferSize(socket\x2C state.recvBufferSize\x2C RECV_BUFFER);\n\n  if (state.sendBufferSize)\n    bufferSize(socket\x2C state.sendBufferSize\x2C SEND_BUFFER);\n\n  socket.emit('listening');\n}\n\nfunction replaceHandle(self\x2C newHandle) {\n  const state = self[kStateSymbol];\n  const oldHandle = state.handle;\n  // Sync the old handle state to new handle\n  if (!oldHandle.hasRef() && typeof newHandle.unref === 'function') {\n    newHandle.unref();\n  }\n  // Set up the handle that we got from primary.\n  newHandle.lookup = oldHandle.lookup;\n  newHandle.bind = oldHandle.bind;\n  newHandle.send = oldHandle.send;\n  newHandle[owner_symbol] = self;\n\n  // Replace the existing handle by the handle we got from primary.\n  oldHandle.close();\n  state.handle = newHandle;\n}\n\nfunction bufferSize(self\x2C size\x2C buffer) {\n  if (size >>> 0 !== size)\n    throw new ERR_SOCKET_BAD_BUFFER_SIZE();\n\n  const ctx = {};\n  const ret = self[kStateSymbol].handle.bufferSize(size\x2C buffer\x2C ctx);\n  if (ret === undefined) {\n    throw new ERR_SOCKET_BUFFER_SIZE(ctx);\n  }\n  return ret;\n}\n\n// Query primary process to get the server handle and utilize it.\nfunction bindServerHandle(self\x2C options\x2C errCb) {\n  const cluster = lazyLoadCluster();\n\n  const state = self[kStateSymbol];\n  cluster._getServer(self\x2C options\x2C (err\x2C handle) => {\n    if (err) {\n      // Do not call callback if socket is closed\n      if (state.handle) {\n        errCb(err);\n      }\n      return;\n    }\n\n    if (!state.handle) {\n      // Handle has been closed in the mean time.\n      return handle.close();\n    }\n\n    replaceHandle(self\x2C handle);\n    startListening(self);\n  });\n}\n\nSocket.prototype.bind = function(port_\x2C address_ /* \x2C callback */) {\n  let port = port_;\n\n  healthCheck(this);\n  const state = this[kStateSymbol];\n\n  if (state.bindState !== BIND_STATE_UNBOUND)\n    throw new ERR_SOCKET_ALREADY_BOUND();\n\n  state.bindState = BIND_STATE_BINDING;\n\n  const cb = arguments.length && arguments[arguments.length - 1];\n  if (typeof cb === 'function') {\n    function removeListeners() {\n      this.removeListener('error'\x2C removeListeners);\n      this.removeListener('listening'\x2C onListening);\n    }\n\n    function onListening() {\n      FunctionPrototypeCall(removeListeners\x2C this);\n      FunctionPrototypeCall(cb\x2C this);\n    }\n\n    this.on('error'\x2C removeListeners);\n    this.on('listening'\x2C onListening);\n  }\n\n  if (port !== null &&\n      typeof port === 'object' &&\n      typeof port.recvStart === 'function') {\n    replaceHandle(this\x2C port);\n    startListening(this);\n    return this;\n  }\n\n  // Open an existing fd instead of creating a new one.\n  if (port !== null && typeof port === 'object' &&\n      isInt32(port.fd) && port.fd > 0) {\n    const fd = port.fd;\n    const exclusive = !!port.exclusive;\n    const state = this[kStateSymbol];\n\n    const cluster = lazyLoadCluster();\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: null\x2C\n        port: null\x2C\n        addressType: this.type\x2C\n        fd\x2C\n        flags: null\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ErrnoException(err\x2C 'open');\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n      return this;\n    }\n\n    const type = guessHandleType(fd);\n    if (type !== 'UDP')\n      throw new ERR_INVALID_FD_TYPE(type);\n    const err = state.handle.open(fd);\n\n    if (err)\n      throw new ErrnoException(err\x2C 'open');\n\n    startListening(this);\n    return this;\n  }\n\n  let address;\n  let exclusive;\n\n  if (port !== null && typeof port === 'object') {\n    address = port.address || '';\n    exclusive = !!port.exclusive;\n    port = port.port;\n  } else {\n    address = typeof address_ === 'function' ? '' : address_;\n    exclusive = false;\n  }\n\n  // Defaulting address for bind to all interfaces\n  if (!address) {\n    if (this.type === 'udp4')\n      address = '0.0.0.0';\n    else\n      address = '::';\n  }\n\n  // Resolve address first\n  state.handle.lookup(address\x2C (err\x2C ip) => {\n    if (!state.handle)\n      return; // Handle has been closed in the mean time\n\n    if (err) {\n      state.bindState = BIND_STATE_UNBOUND;\n      this.emit('error'\x2C err);\n      return;\n    }\n\n    const cluster = lazyLoadCluster();\n\n    let flags = 0;\n    if (state.reuseAddr)\n      flags |= UV_UDP_REUSEADDR;\n    if (state.ipv6Only)\n      flags |= UV_UDP_IPV6ONLY;\n    if (state.reusePort) {\n      exclusive = true;\n      flags |= UV_UDP_REUSEPORT;\n    }\n\n    if (cluster.isWorker && !exclusive) {\n      bindServerHandle(this\x2C {\n        address: ip\x2C\n        port: port\x2C\n        addressType: this.type\x2C\n        fd: -1\x2C\n        flags: flags\x2C\n      }\x2C (err) => {\n        // Callback to handle error.\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n      });\n    } else {\n      const err = state.handle.bind(ip\x2C port || 0\x2C flags);\n      if (err) {\n        const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C ip\x2C port);\n        state.bindState = BIND_STATE_UNBOUND;\n        this.emit('error'\x2C ex);\n        // Todo: close?\n        return;\n      }\n\n      startListening(this);\n    }\n  });\n\n  return this;\n};\n\nSocket.prototype.connect = function(port\x2C address\x2C callback) {\n  port = validatePort(port\x2C 'Port'\x2C false);\n  if (typeof address === 'function') {\n    callback = address;\n    address = '';\n  } else if (address === undefined) {\n    address = '';\n  }\n\n  validateString(address\x2C 'address');\n\n  const state = this[kStateSymbol];\n\n  if (state.connectState !== CONNECT_STATE_DISCONNECTED)\n    throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n\n  state.connectState = CONNECT_STATE_CONNECTING;\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(_connect\x2C this\x2C\n                                        port\x2C address\x2C callback));\n    return;\n  }\n\n  ReflectApply(_connect\x2C this\x2C [port\x2C address\x2C callback]);\n};\n\n\nfunction _connect(port\x2C address\x2C callback) {\n  const state = this[kStateSymbol];\n  if (callback)\n    this.once('connect'\x2C callback);\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doConnect\x2C\n      ex\x2C this\x2C ip\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  state.handle.lookup(address\x2C afterDns);\n}\n\n\nfunction doConnect(ex\x2C self\x2C ip\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n  if (!state.handle)\n    return;\n  if (!ex && state.sendBlockList?.check(ip\x2C `ipv${isIP(ip)}`)) {\n    ex = new ERR_IP_BLOCKED(ip);\n  }\n  if (!ex) {\n    const err = state.handle.connect(ip\x2C port);\n    if (err) {\n      ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port);\n    }\n  }\n\n  if (ex) {\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n    return process.nextTick(() => {\n      if (callback) {\n        self.removeListener('connect'\x2C callback);\n        callback(ex);\n      } else {\n        self.emit('error'\x2C ex);\n      }\n    });\n  }\n\n  state.connectState = CONNECT_STATE_CONNECTED;\n  process.nextTick(() => self.emit('connect'));\n}\n\n\nSocket.prototype.disconnect = function() {\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const err = state.handle.disconnect();\n  if (err)\n    throw new ErrnoException(err\x2C 'connect');\n  else\n    state.connectState = CONNECT_STATE_DISCONNECTED;\n};\n\n\n// Thin wrapper around `send`\x2C here for compatibility with dgram_legacy.js\nSocket.prototype.sendto = function(buffer\x2C\n                                   offset\x2C\n                                   length\x2C\n                                   port\x2C\n                                   address\x2C\n                                   callback) {\n  validateNumber(offset\x2C 'offset');\n  validateNumber(length\x2C 'length');\n  validateNumber(port\x2C 'port');\n  validateString(address\x2C 'address');\n\n  this.send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback);\n};\n\n\nfunction sliceBuffer(buffer\x2C offset\x2C length) {\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer);\n  } else if (!isArrayBufferView(buffer)) {\n    throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  offset = offset >>> 0;\n  length = length >>> 0;\n  if (offset > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\n  }\n\n  if (offset + length > buffer.byteLength) {\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\n  }\n\n  return Buffer.from(buffer.buffer\x2C buffer.byteOffset + offset\x2C length);\n}\n\n\nfunction fixBufferList(list) {\n  const newlist = new Array(list.length);\n\n  for (let i = 0\x2C l = list.length; i < l; i++) {\n    const buf = list[i];\n    if (typeof buf === 'string')\n      newlist[i] = Buffer.from(buf);\n    else if (!isArrayBufferView(buf))\n      return null;\n    else\n      newlist[i] = Buffer.from(buf.buffer\x2C buf.byteOffset\x2C buf.byteLength);\n  }\n\n  return newlist;\n}\n\n\nfunction enqueue(self\x2C toEnqueue) {\n  const state = self[kStateSymbol];\n\n  // If the send queue hasn't been initialized yet\x2C do it\x2C and install an\n  // event handler that flushes the send queue after binding is done.\n  if (state.queue === undefined) {\n    state.queue = [];\n    self.once(EventEmitter.errorMonitor\x2C onListenError);\n    self.once('listening'\x2C onListenSuccess);\n  }\n  ArrayPrototypePush(state.queue\x2C toEnqueue);\n}\n\n\nfunction onListenSuccess() {\n  this.removeListener(EventEmitter.errorMonitor\x2C onListenError);\n  FunctionPrototypeCall(clearQueue\x2C this);\n}\n\n\nfunction onListenError(err) {\n  this.removeListener('listening'\x2C onListenSuccess);\n  this[kStateSymbol].queue = undefined;\n}\n\n\nfunction clearQueue() {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n  state.queue = undefined;\n\n  // Flush the send queue.\n  for (const queueEntry of queue)\n    queueEntry();\n}\n\n// valid combinations\n// For connectionless sockets\n// send(buffer\x2C offset\x2C length\x2C port\x2C address\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port\x2C address)\n// send(buffer\x2C offset\x2C length\x2C port\x2C callback)\n// send(buffer\x2C offset\x2C length\x2C port)\n// send(bufferOrList\x2C port\x2C address\x2C callback)\n// send(bufferOrList\x2C port\x2C address)\n// send(bufferOrList\x2C port\x2C callback)\n// send(bufferOrList\x2C port)\n// For connected sockets\n// send(buffer\x2C offset\x2C length\x2C callback)\n// send(buffer\x2C offset\x2C length)\n// send(bufferOrList\x2C callback)\n// send(bufferOrList)\nSocket.prototype.send = function(buffer\x2C\n                                 offset\x2C\n                                 length\x2C\n                                 port\x2C\n                                 address\x2C\n                                 callback) {\n\n  let list;\n  const state = this[kStateSymbol];\n  const connected = state.connectState === CONNECT_STATE_CONNECTED;\n  if (!connected) {\n    if (address || (port && typeof port !== 'function')) {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n    } else {\n      callback = port;\n      port = offset;\n      address = length;\n    }\n  } else {\n    if (typeof length === 'number') {\n      buffer = sliceBuffer(buffer\x2C offset\x2C length);\n      if (typeof port === 'function') {\n        callback = port;\n        port = null;\n      }\n    } else {\n      callback = offset;\n    }\n\n    if (port || address)\n      throw new ERR_SOCKET_DGRAM_IS_CONNECTED();\n  }\n\n  if (!ArrayIsArray(buffer)) {\n    if (typeof buffer === 'string') {\n      list = [ Buffer.from(buffer) ];\n    } else if (!isArrayBufferView(buffer)) {\n      throw new ERR_INVALID_ARG_TYPE('buffer'\x2C\n                                     ['Buffer'\x2C\n                                      'TypedArray'\x2C\n                                      'DataView'\x2C\n                                      'string']\x2C\n                                     buffer);\n    } else {\n      list = [ buffer ];\n    }\n  } else if (!(list = fixBufferList(buffer))) {\n    throw new ERR_INVALID_ARG_TYPE('buffer list arguments'\x2C\n                                   ['Buffer'\x2C\n                                    'TypedArray'\x2C\n                                    'DataView'\x2C\n                                    'string']\x2C\n                                   buffer);\n  }\n\n  if (!connected)\n    port = validatePort(port\x2C 'Port'\x2C false);\n\n  // Normalize callback so it's either a function or undefined but not anything\n  // else.\n  if (typeof callback !== 'function')\n    callback = undefined;\n\n  if (typeof address === 'function') {\n    callback = address;\n    address = undefined;\n  } else if (address != null) {\n    validateString(address\x2C 'address');\n  }\n\n  healthCheck(this);\n\n  if (state.bindState === BIND_STATE_UNBOUND)\n    this.bind({ port: 0\x2C exclusive: true }\x2C null);\n\n  if (list.length === 0)\n    ArrayPrototypePush(list\x2C Buffer.alloc(0));\n\n  // If the socket hasn't been bound yet\x2C push the outbound packet onto the\n  // send queue and send after binding is complete.\n  if (state.bindState !== BIND_STATE_BOUND) {\n    enqueue(this\x2C FunctionPrototypeBind(this.send\x2C this\x2C\n                                        list\x2C port\x2C address\x2C callback));\n    return;\n  }\n\n  const afterDns = (ex\x2C ip) => {\n    defaultTriggerAsyncIdScope(\n      this[async_id_symbol]\x2C\n      doSend\x2C\n      ex\x2C this\x2C ip\x2C list\x2C address\x2C port\x2C callback\x2C\n    );\n  };\n\n  if (!connected) {\n    state.handle.lookup(address\x2C afterDns);\n  } else {\n    afterDns(null\x2C null);\n  }\n};\n\nfunction doSend(ex\x2C self\x2C ip\x2C list\x2C address\x2C port\x2C callback) {\n  const state = self[kStateSymbol];\n\n  if (ex) {\n    if (typeof callback === 'function') {\n      process.nextTick(callback\x2C ex);\n      return;\n    }\n\n    process.nextTick(() => self.emit('error'\x2C ex));\n    return;\n  } else if (!state.handle) {\n    return;\n  }\n\n  if (ip && state.sendBlockList?.check(ip\x2C `ipv${isIP(ip)}`)) {\n    if (callback) {\n      process.nextTick(callback\x2C new ERR_IP_BLOCKED(ip));\n    }\n    return;\n  }\n\n  const req = new SendWrap();\n  req.list = list;  // Keep reference alive.\n  req.address = address;\n  req.port = port;\n  if (callback) {\n    req.callback = callback;\n    req.oncomplete = afterSend;\n  }\n\n  let err;\n  if (port)\n    err = state.handle.send(req\x2C list\x2C list.length\x2C port\x2C ip\x2C !!callback);\n  else\n    err = state.handle.send(req\x2C list\x2C list.length\x2C !!callback);\n\n  if (err >= 1) {\n    // Synchronous finish. The return code is msg_length + 1 so that we can\n    // distinguish between synchronous success and asynchronous success.\n    if (callback)\n      process.nextTick(callback\x2C null\x2C err - 1);\n    return;\n  }\n\n  if (err && callback) {\n    // Don't emit as error\x2C dgram_legacy.js compatibility\n    const ex = new ExceptionWithHostPort(err\x2C 'send'\x2C address\x2C port);\n    process.nextTick(callback\x2C ex);\n  }\n}\n\nfunction afterSend(err\x2C sent) {\n  if (err) {\n    err = new ExceptionWithHostPort(err\x2C 'send'\x2C this.address\x2C this.port);\n  } else {\n    err = null;\n  }\n\n  this.callback(err\x2C sent);\n}\n\nSocket.prototype.close = function(callback) {\n  const state = this[kStateSymbol];\n  const queue = state.queue;\n\n  if (typeof callback === 'function')\n    this.on('close'\x2C callback);\n\n  if (queue !== undefined) {\n    ArrayPrototypePush(queue\x2C FunctionPrototypeBind(this.close\x2C this));\n    return this;\n  }\n\n  healthCheck(this);\n  stopReceiving(this);\n  state.handle.close();\n  state.handle = null;\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\n                             process.nextTick\x2C\n                             socketCloseNT\x2C\n                             this);\n\n  return this;\n};\n\nSocket.prototype[SymbolAsyncDispose] = async function() {\n  if (!this[kStateSymbol].handle) {\n    return;\n  }\n  await FunctionPrototypeCall(promisify(this.close)\x2C this);\n};\n\n\nfunction socketCloseNT(self) {\n  self.emit('close');\n}\n\n\nSocket.prototype.address = function() {\n  healthCheck(this);\n\n  const out = {};\n  const err = this[kStateSymbol].handle.getsockname(out);\n  if (err) {\n    throw new ErrnoException(err\x2C 'getsockname');\n  }\n\n  return out;\n};\n\nSocket.prototype.remoteAddress = function() {\n  healthCheck(this);\n\n  const state = this[kStateSymbol];\n  if (state.connectState !== CONNECT_STATE_CONNECTED)\n    throw new ERR_SOCKET_DGRAM_NOT_CONNECTED();\n\n  const out = {};\n  const err = state.handle.getpeername(out);\n  if (err)\n    throw new ErrnoException(err\x2C 'getpeername');\n\n  return out;\n};\n\n\nSocket.prototype.setBroadcast = function(arg) {\n  const err = this[kStateSymbol].handle.setBroadcast(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setBroadcast');\n  }\n};\n\n\nSocket.prototype.setTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastTTL = function(ttl) {\n  validateNumber(ttl\x2C 'ttl');\n\n  const err = this[kStateSymbol].handle.setMulticastTTL(ttl);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastTTL');\n  }\n\n  return ttl;\n};\n\n\nSocket.prototype.setMulticastLoopback = function(arg) {\n  const err = this[kStateSymbol].handle.setMulticastLoopback(arg ? 1 : 0);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastLoopback');\n  }\n\n  return arg; // 0.4 compatibility\n};\n\n\nSocket.prototype.setMulticastInterface = function(interfaceAddress) {\n  healthCheck(this);\n  validateString(interfaceAddress\x2C 'interfaceAddress');\n\n  const err = this[kStateSymbol].handle.setMulticastInterface(interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'setMulticastInterface');\n  }\n};\n\nSocket.prototype.addMembership = function(multicastAddress\x2C\n                                          interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.addMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addMembership');\n  }\n};\n\n\nSocket.prototype.dropMembership = function(multicastAddress\x2C\n                                           interfaceAddress) {\n  healthCheck(this);\n\n  if (!multicastAddress) {\n    throw new ERR_MISSING_ARGS('multicastAddress');\n  }\n\n  const { handle } = this[kStateSymbol];\n  const err = handle.dropMembership(multicastAddress\x2C interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropMembership');\n  }\n};\n\nSocket.prototype.addSourceSpecificMembership = function(sourceAddress\x2C\n                                                        groupAddress\x2C\n                                                        interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.addSourceSpecificMembership(sourceAddress\x2C\n                                                          groupAddress\x2C\n                                                          interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'addSourceSpecificMembership');\n  }\n};\n\n\nSocket.prototype.dropSourceSpecificMembership = function(sourceAddress\x2C\n                                                         groupAddress\x2C\n                                                         interfaceAddress) {\n  healthCheck(this);\n\n  validateString(sourceAddress\x2C 'sourceAddress');\n  validateString(groupAddress\x2C 'groupAddress');\n\n  const err =\n    this[kStateSymbol].handle.dropSourceSpecificMembership(sourceAddress\x2C\n                                                           groupAddress\x2C\n                                                           interfaceAddress);\n  if (err) {\n    throw new ErrnoException(err\x2C 'dropSourceSpecificMembership');\n  }\n};\n\n\nfunction healthCheck(socket) {\n  if (!socket[kStateSymbol].handle) {\n    // Error message from dgram_legacy.js.\n    throw new ERR_SOCKET_DGRAM_NOT_RUNNING();\n  }\n}\n\n\nfunction stopReceiving(socket) {\n  const state = socket[kStateSymbol];\n\n  if (!state.receiving)\n    return;\n\n  state.handle.recvStop();\n  state.receiving = false;\n}\n\n\nfunction onMessage(nread\x2C handle\x2C buf\x2C rinfo) {\n  const self = handle[owner_symbol];\n  if (nread < 0) {\n    return self.emit('error'\x2C new ErrnoException(nread\x2C 'recvmsg'));\n  }\n  if (self[kStateSymbol]?.receiveBlockList?.check(rinfo.address\x2C\n                                                  rinfo.family?.toLocaleLowerCase())) {\n    return;\n  }\n  rinfo.size = buf.length; // compatibility\n  self.emit('message'\x2C buf\x2C rinfo);\n}\n\n\nfunction onError(nread\x2C handle\x2C error) {\n  const self = handle[owner_symbol];\n  return self.emit('error'\x2C error);\n}\n\n\nSocket.prototype.ref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.ref();\n\n  return this;\n};\n\n\nSocket.prototype.unref = function() {\n  const handle = this[kStateSymbol].handle;\n\n  if (handle)\n    handle.unref();\n\n  return this;\n};\n\n\nSocket.prototype.setRecvBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.setSendBufferSize = function(size) {\n  bufferSize(this\x2C size\x2C SEND_BUFFER);\n};\n\n\nSocket.prototype.getRecvBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C RECV_BUFFER);\n};\n\n\nSocket.prototype.getSendBufferSize = function() {\n  return bufferSize(this\x2C 0\x2C SEND_BUFFER);\n};\n\nSocket.prototype.getSendQueueSize = function() {\n  return this[kStateSymbol].handle.getSendQueueSize();\n};\n\nSocket.prototype.getSendQueueCount = function() {\n  return this[kStateSymbol].handle.getSendQueueCount();\n};\n\n// Deprecated private APIs.\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].handle;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].handle = val;\n  }\x2C 'Socket.prototype._handle is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_receiving'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].receiving;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].receiving = val;\n  }\x2C 'Socket.prototype._receiving is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_bindState'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].bindState;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].bindState = val;\n  }\x2C 'Socket.prototype._bindState is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_queue'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].queue;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].queue = val;\n  }\x2C 'Socket.prototype._queue is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nObjectDefineProperty(Socket.prototype\x2C '_reuseAddr'\x2C {\n  __proto__: null\x2C\n  get: deprecate(function() {\n    return this[kStateSymbol].reuseAddr;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n  set: deprecate(function(val) {\n    this[kStateSymbol].reuseAddr = val;\n  }\x2C 'Socket.prototype._reuseAddr is deprecated'\x2C 'DEP0112')\x2C\n});\n\n\nSocket.prototype._healthCheck = deprecate(function() {\n  healthCheck(this);\n}\x2C 'Socket.prototype._healthCheck() is deprecated'\x2C 'DEP0112');\n\n\nSocket.prototype._stopReceiving = deprecate(function() {\n  stopReceiving(this);\n}\x2C 'Socket.prototype._stopReceiving() is deprecated'\x2C 'DEP0112');\n\n\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\nObjectDefineProperty(UDP.prototype\x2C 'owner'\x2C {\n  __proto__: null\x2C\n  get() { return this[owner_symbol]; }\x2C\n  set(v) { return this[owner_symbol] = v; }\x2C\n});\n\n\nmodule.exports = {\n  _createSocketHandle: deprecate(\n    _createSocketHandle\x2C\n    'dgram._createSocketHandle() is deprecated'\x2C\n    'DEP0112'\x2C\n  )\x2C\n  createSocket\x2C\n  Socket\x2C\n};\n
code-source-info,0x277c96e90588,104,0,30009,C0O0C4O30009,,
code-creation,JS,9,39166,0x277c96e911a8,1728, node:dgram:1:1,0x32a18597cfb8,~
code-source-info,0x277c96e911a
tick,0x1937c89ac,39208,0,0x0,9,0x148000544,0x1480002b4,0x277c96e8363a,0x148000610,0x1480002b4,0x277c96e8293d,0x148000610,0x1480002b4,0x277c96e81d5a,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,39333,0x277c96e91b18,5, node:internal/dgram:1:1,0x32a18597f5a8,~
script-source,105,node:internal/dgram,'use strict';\n\nconst {\n  FunctionPrototypeBind\x2C\n  Symbol\x2C\n} = primordials;\n\nconst { codes: {\n  ERR_SOCKET_BAD_TYPE\x2C\n} } = require('internal/errors');\nconst { UDP } = internalBinding('udp_wrap');\nconst { guessHandleType } = require('internal/util');\nconst {\n  isInt32\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { UV_EINVAL } = internalBinding('uv');\nconst kStateSymbol = Symbol('state symbol');\nlet dns;  // Lazy load for startup performance.\n\n\nfunction lookup4(lookup\x2C address\x2C callback) {\n  return lookup(address || '127.0.0.1'\x2C 4\x2C callback);\n}\n\n\nfunction lookup6(lookup\x2C address\x2C callback) {\n  return lookup(address || '::1'\x2C 6\x2C callback);\n}\n\nfunction newHandle(type\x2C lookup) {\n  if (lookup === undefined) {\n    if (dns === undefined) {\n      dns = require('dns');\n    }\n\n    lookup = dns.lookup;\n  } else {\n    validateFunction(lookup\x2C 'lookup');\n  }\n\n  if (type === 'udp4') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup4\x2C handle\x2C lookup);\n    return handle;\n  }\n\n  if (type === 'udp6') {\n    const handle = new UDP();\n\n    handle.lookup = FunctionPrototypeBind(lookup6\x2C handle\x2C lookup);\n    handle.bind = handle.bind6;\n    handle.connect = handle.connect6;\n    handle.send = handle.send6;\n    return handle;\n  }\n\n  throw new ERR_SOCKET_BAD_TYPE();\n}\n\n\nfunction _createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\n  const handle = newHandle(addressType);\n  let err;\n\n  if (isInt32(fd) && fd > 0) {\n    const type = guessHandleType(fd);\n    if (type !== 'UDP') {\n      err = UV_EINVAL;\n    } else {\n      err = handle.open(fd);\n    }\n  } else if (port || address) {\n    err = handle.bind(address\x2C port || 0\x2C flags);\n  }\n\n  if (err) {\n    handle.close();\n    return err;\n  }\n\n  return handle;\n}\n\n\nmodule.exports = {\n  kStateSymbol\x2C\n  _createSocketHandle\x2C\n  newHandle\x2C\n};\n
code-source-info,0x277c96e91b18,105,0,1837,C0O0C4O1837,,
code-creation,JS,9,39375,0x277c96e91cb0,199, node:internal/dgram:1:1,0x32a18597f738,~
code-source-info,0x277c96e91cb0,105,0,1837,C0O0C56O25C62O50C67O122C73O122C78O91C83O95C89O166C92O166C97O158C103O223C109O223C114O203C120O292C126O292C131O259C137O270C143O346C146O346C151O332C157O390C160O390C165O418C166O418C168O1763C175O1784C181O1800C187O1823C193O1778C198O1836,,
new,MemoryChunk,0x1db37b240000,262144
code-creation,Eval,9,39541,0x277c96e91e28,5, node:internal/socket_list:1:1,0x1db37b243090,~
script-source,106,node:internal/socket_list,'use strict';\n\nconst { ERR_CHILD_CLOSED_BEFORE_REPLY } = require('internal/errors').codes;\n\nconst EventEmitter = require('events');\n\n// This object keeps track of the sockets that are sent\nclass SocketListSend extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n    this.key = key;\n    this.child = child;\n    child.once('exit'\x2C () => this.emit('exit'\x2C this));\n  }\n\n  _request(msg\x2C cmd\x2C swallowErrors\x2C callback) {\n    const self = this;\n\n    if (!this.child.connected) return onclose();\n    this.child._send(msg\x2C undefined\x2C swallowErrors);\n\n    function onclose() {\n      self.child.removeListener('internalMessage'\x2C onreply);\n      callback(new ERR_CHILD_CLOSED_BEFORE_REPLY());\n    }\n\n    function onreply(msg) {\n      if (!(msg.cmd === cmd && msg.key === self.key)) return;\n      self.child.removeListener('disconnect'\x2C onclose);\n      self.child.removeListener('internalMessage'\x2C onreply);\n\n      callback(null\x2C msg);\n    }\n\n    this.child.once('disconnect'\x2C onclose);\n    this.child.on('internalMessage'\x2C onreply);\n  }\n\n  close(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_NOTIFY_CLOSE'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_ALL_CLOSED'\x2C true\x2C callback);\n  }\n\n  getConnections(callback) {\n    this._request({\n      cmd: 'NODE_SOCKET_GET_COUNT'\x2C\n      key: this.key\x2C\n    }\x2C 'NODE_SOCKET_COUNT'\x2C false\x2C (err\x2C msg) => {\n      if (err) return callback(err);\n      callback(null\x2C msg.count);\n    });\n  }\n}\n\n\n// This object keeps track of the sockets that are received\nclass SocketListReceive extends EventEmitter {\n  constructor(child\x2C key) {\n    super();\n\n    this.connections = 0;\n    this.key = key;\n    this.child = child;\n\n    function onempty(self) {\n      if (!self.child.connected) return;\n\n      self.child._send({\n        cmd: 'NODE_SOCKET_ALL_CLOSED'\x2C\n        key: self.key\x2C\n      }\x2C undefined\x2C true);\n    }\n\n    this.child.on('internalMessage'\x2C (msg) => {\n      if (msg.key !== this.key) return;\n\n      if (msg.cmd === 'NODE_SOCKET_NOTIFY_CLOSE') {\n        // Already empty\n        if (this.connections === 0) return onempty(this);\n\n        // Wait for sockets to get closed\n        this.once('empty'\x2C onempty);\n      } else if (msg.cmd === 'NODE_SOCKET_GET_COUNT') {\n        if (!this.child.connected) return;\n        this.child._send({\n          cmd: 'NODE_SOCKET_COUNT'\x2C\n          key: this.key\x2C\n          count: this.connections\x2C\n        });\n      }\n    });\n  }\n\n  add(obj) {\n    this.connections++;\n\n    // Notify the previous owner of the socket about its state change\n    obj.socket.once('close'\x2C () => {\n      this.connections--;\n\n      if (this.connections === 0) this.emit('empty'\x2C this);\n    });\n  }\n}\n\nmodule.exports = { SocketListSend\x2C SocketListReceive };\n
code-source-info,0x277c96e91e28,106,0,2709,C0O0C4O2709,,
code-creation,JS,9,39625,0x277c96e91fc0,124, node:internal/socket_list:1:1,0x1db37b243170,~
code-source-info,0x277c96e91fc0,106,0,2709,C0O0C8O57C11O57C16O83C21O23C27O113C30O113C35O218C72O1527C99O2653C106O2672C112O2688C118O2668C123O2708,,
code-creation,JS,9,39708,0x277c96e92100,35,customPromiseExecFunction node:child_process:241:35,0x7143c1cfa0,~
code-source-info,0x277c96e92100,79,6976,7375,C0O6976C9O6990C19O7021C29O6997C34O7373,,
code-creation,Eval,9,40000,0x277c96e921a0,5, node:internal/cluster/round_robin_handle:1:1,0x1db37b2470f8,~
script-source,107,node:internal/cluster/round_robin_handle,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  Boolean\x2C\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst net = require('net');\nconst { sendHelper } = require('internal/cluster/utils');\nconst { append\x2C init\x2C isEmpty\x2C peek\x2C remove } = require('internal/linkedlist');\nconst { constants } = internalBinding('tcp_wrap');\n\nmodule.exports = RoundRobinHandle;\n\nfunction RoundRobinHandle(key\x2C address\x2C { port\x2C fd\x2C flags\x2C backlog\x2C readableAll\x2C writableAll }) {\n  this.key = key;\n  this.all = new SafeMap();\n  this.free = new SafeMap();\n  this.handles = init({ __proto__: null });\n  this.handle = null;\n  this.server = net.createServer(assert.fail);\n\n  if (fd >= 0)\n    this.server.listen({ fd\x2C backlog });\n  else if (port >= 0) {\n    this.server.listen({\n      port\x2C\n      host: address\x2C\n      // Currently\x2C net module only supports `ipv6Only` option in `flags`.\n      ipv6Only: Boolean(flags & constants.UV_TCP_IPV6ONLY)\x2C\n      backlog\x2C\n    });\n  } else\n    this.server.listen({\n      path: address\x2C\n      backlog\x2C\n      readableAll\x2C\n      writableAll\x2C\n    });  // UNIX socket path.\n  this.server.once('listening'\x2C () => {\n    this.handle = this.server._handle;\n    this.handle.onconnection = (err\x2C handle) => this.distribute(err\x2C handle);\n    this.server._handle = null;\n    this.server = null;\n  });\n}\n\nRoundRobinHandle.prototype.add = function(worker\x2C send) {\n  assert(this.all.has(worker.id) === false);\n  this.all.set(worker.id\x2C worker);\n\n  const done = () => {\n    if (this.handle.getsockname) {\n      const out = {};\n      this.handle.getsockname(out);\n      // TODO(bnoordhuis) Check err.\n      send(null\x2C { sockname: out }\x2C null);\n    } else {\n      send(null\x2C null\x2C null);  // UNIX socket.\n    }\n\n    this.handoff(worker);  // In case there are connections pending.\n  };\n\n  if (this.server === null)\n    return done();\n\n  // Still busy binding.\n  this.server.once('listening'\x2C done);\n  this.server.once('error'\x2C (err) => {\n    send(err.errno\x2C null);\n  });\n};\n\nRoundRobinHandle.prototype.remove = function(worker) {\n  const existed = this.all.delete(worker.id);\n\n  if (!existed)\n    return false;\n\n  this.free.delete(worker.id);\n\n  if (this.all.size !== 0)\n    return false;\n\n  while (!isEmpty(this.handles)) {\n    const handle = peek(this.handles);\n    handle.close();\n    remove(handle);\n  }\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n\nRoundRobinHandle.prototype.distribute = function(err\x2C handle) {\n  // If `accept` fails just skip it (handle is undefined)\n  if (err) {\n    return;\n  }\n  append(this.handles\x2C handle);\n  // eslint-disable-next-line node-core/no-array-destructuring\n  const [ workerEntry ] = this.free; // this.free is a SafeMap\n\n  if (ArrayIsArray(workerEntry)) {\n    const { 0: workerId\x2C 1: worker } = workerEntry;\n    this.free.delete(workerId);\n    this.handoff(worker);\n  }\n};\n\nRoundRobinHandle.prototype.handoff = function(worker) {\n  if (!this.all.has(worker.id)) {\n    return;  // Worker is closing (or has closed) the server.\n  }\n\n  const handle = peek(this.handles);\n\n  if (handle === null) {\n    this.free.set(worker.id\x2C worker);  // Add to ready queue again.\n    return;\n  }\n\n  remove(handle);\n\n  const message = { act: 'newconn'\x2C key: this.key };\n\n  sendHelper(worker.process\x2C message\x2C handle\x2C (reply) => {\n    if (reply.accepted)\n      handle.close();\n    else\n      this.distribute(0\x2C handle);  // Worker is shutting down. Send to another.\n\n    this.handoff(worker);\n  });\n};\n
code-source-info,0x277c96e921a0,107,0,3453,C0O0C4O3453,,
code-creation,JS,9,40083,0x277c96e92358,208, node:internal/cluster/round_robin_handle:1:1,0x1db37b247288,~
code-source-info,0x277c96e92358,107,0,3453,C0O0C46O25C52O41C58O52C64O94C67O94C71O94C73O134C76O134C80O134C82O173C85O173C90O158C96O256C99O256C104O216C110O224C116O230C122O239C128O245C134O310C137O310C142O296C148O340C150O355C154O1336C163O1350C167O2001C176O2018C180O2399C189O2420C193O2862C202O2880C207O3452,,
code-creation,Eval,9,40125,0x277c96e924e8,5, node:internal/cluster/utils:1:1,0x1db37b247930,~
script-source,108,node:internal/cluster/utils,'use strict';\n\nconst {\n  ReflectApply\x2C\n  SafeMap\x2C\n} = primordials;\n\nmodule.exports = {\n  sendHelper\x2C\n  internal\x2C\n};\n\nconst callbacks = new SafeMap();\nlet seq = 0;\n\nfunction sendHelper(proc\x2C message\x2C handle\x2C cb) {\n  if (!proc.connected)\n    return false;\n\n  // Mark message as internal. See INTERNAL_PREFIX\n  // in lib/internal/child_process.js\n  message = { cmd: 'NODE_CLUSTER'\x2C ...message\x2C seq };\n\n  if (typeof cb === 'function')\n    callbacks.set(seq\x2C cb);\n\n  seq += 1;\n  return proc.send(message\x2C handle);\n}\n\n// Returns an internalMessage listener that hands off normal messages\n// to the callback but intercepts and redirects ACK messages.\nfunction internal(worker\x2C cb) {\n  return function onInternalMessage(message\x2C handle) {\n    if (message.cmd !== 'NODE_CLUSTER')\n      return;\n\n    let fn = cb;\n\n    if (message.ack !== undefined) {\n      const callback = callbacks.get(message.ack);\n\n      if (callback !== undefined) {\n        fn = callback;\n        callbacks.delete(message.ack);\n      }\n    }\n\n    ReflectApply(fn\x2C worker\x2C arguments);\n  };\n}\n
code-source-info,0x277c96e924e8,108,0,1054,C0O0C4O1054,,
code-creation,JS,9,40166,0x277c96e925d8,72, node:internal/cluster/utils:1:1,0x1db37b247a30,~
code-source-info,0x277c96e925d8,108,0,1054,C0O0C24O25C30O41C35O68C42O89C48O103C54O83C58O135C60O135C65O135C67O160C68O160C71O1053,,
tick,0x1938988dc,40208,0,0x0,9,0x148000544,0x1480002b4,0x277c96e923ad,0x148000610,0x1480002b4,0x277c96e81d79,0x148000610,0x1480002b4,0x277c96e817ad,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e8164b,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,40250,0x277c96e926a8,5, node:internal/cluster/shared_handle:1:1,0x1db37b248260,~
script-source,109,node:internal/cluster/shared_handle,'use strict';\n\nconst {\n  SafeMap\x2C\n} = primordials;\n\nconst assert = require('internal/assert');\nconst dgram = require('internal/dgram');\nconst net = require('net');\n\nmodule.exports = SharedHandle;\n\nfunction SharedHandle(key\x2C address\x2C { port\x2C addressType\x2C fd\x2C flags }) {\n  this.key = key;\n  this.workers = new SafeMap();\n  this.handle = null;\n  this.errno = 0;\n\n  let rval;\n  if (addressType === 'udp4' || addressType === 'udp6')\n    rval = dgram._createSocketHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n  else\n    rval = net._createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\n\n  if (typeof rval === 'number')\n    this.errno = rval;\n  else\n    this.handle = rval;\n}\n\nSharedHandle.prototype.add = function(worker\x2C send) {\n  assert(!this.workers.has(worker.id));\n  this.workers.set(worker.id\x2C worker);\n  send(this.errno\x2C null\x2C this.handle);\n};\n\nSharedHandle.prototype.remove = function(worker) {\n  if (!this.workers.has(worker.id))\n    return false;\n\n  this.workers.delete(worker.id);\n\n  if (this.workers.size !== 0)\n    return false;\n\n  this.handle.close();\n  this.handle = null;\n  return true;\n};\n
code-source-info,0x277c96e926a8,109,0,1107,C0O0C4O1107,,
code-creation,JS,9,40291,0x277c96e927c0,89, node:internal/cluster/shared_handle:1:1,0x1db37b248370,~
code-source-info,0x277c96e927c0,109,0,1107,C0O0C22O25C28O67C31O67C35O67C37O109C40O109C44O109C46O148C49O148C53O148C55O165C57O180C61O690C70O704C74O866C83O883C88O1106,,
code-creation,Eval,9,40333,0x277c96e928b8,5, node:internal/cluster/worker:1:1,0x1db37b248ec0,~
script-source,110,node:internal/cluster/worker,'use strict';\n\nconst {\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\n\nconst { kEmptyObject } = require('internal/util');\n\nmodule.exports = Worker;\n\n// Common Worker implementation shared between the cluster primary and workers.\nfunction Worker(options) {\n  if (!(this instanceof Worker))\n    return new Worker(options);\n\n  ReflectApply(EventEmitter\x2C this\x2C []);\n\n  if (options === null || typeof options !== 'object')\n    options = kEmptyObject;\n\n  this.exitedAfterDisconnect = undefined;\n\n  this.state = options.state || 'none';\n  this.id = options.id | 0;\n\n  if (options.process) {\n    this.process = options.process;\n    this.process.on('error'\x2C (code\x2C signal) =>\n      this.emit('error'\x2C code\x2C signal)\x2C\n    );\n    this.process.on('message'\x2C (message\x2C handle) =>\n      this.emit('message'\x2C message\x2C handle)\x2C\n    );\n  }\n}\n\nObjectSetPrototypeOf(Worker.prototype\x2C EventEmitter.prototype);\nObjectSetPrototypeOf(Worker\x2C EventEmitter);\n\nWorker.prototype.kill = function() {\n  ReflectApply(this.destroy\x2C this\x2C arguments);\n};\n\nWorker.prototype.send = function() {\n  return ReflectApply(this.process.send\x2C this.process\x2C arguments);\n};\n\nWorker.prototype.isDead = function() {\n  return this.process.exitCode != null || this.process.signalCode != null;\n};\n\nWorker.prototype.isConnected = function() {\n  return this.process.connected;\n};\n
code-source-info,0x277c96e928b8,110,0,1379,C0O0C4O1379,,
code-creation,JS,9,40375,0x277c96e92a28,158, node:internal/cluster/worker:1:1,0x1db37b248fd0,~
code-source-info,0x277c96e92a28,110,0,1379,C0O0C20O25C25O49C31O102C34O102C38O102C40O147C43O147C48O130C54O174C56O189C60O876C63O904C71O928C76O876C81O940C87O940C92O985C95O992C104O1007C108O1073C111O1080C120O1095C124O1181C127O1188C136O1205C140O1299C143O1306C152O1328C157O1378,,
new,MemoryChunk,0x28e1d9bc0000,262144
code-creation,JS,10,40666,0x148004ac0,752,TracingChannel node:diagnostics_channel:278:14,0xb1c4a400980,^
code-source-info,0x148004ac0,30,6261,6523,,,
code-creation,JS,10,40708,0x148004de0,312,protoGetter node:net:880:21,0x7143c2cc00,^
code-source-info,0x148004de0,81,23189,23351,,,
code-creation,JS,10,40708,0x148004f40,1568,deprecate node:internal/util:172:19,0x3699125d74d0,^
code-source-info,0x148004f40,13,4528,5887,,,
code-creation,JS,10,40708,0x148005580,1016,getDeprecationWarningEmitter node:internal/util:108:38,0x3699125d6e00,^
code-source-info,0x148005580,13,2625,3346,,,
code-creation,JS,10,40708,0x1480059a0,200,assert node:internal/assert:8:16,0x3699125cd8d8,^
script-source,8,node:internal/assert,'use strict';\n\nlet error;\nfunction lazyError() {\n  return error ??= require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\n}\n\nfunction assert(value\x2C message) {\n  if (!value) {\n    const ERR_INTERNAL_ASSERTION = lazyError();\n    throw new ERR_INTERNAL_ASSERTION(message);\n  }\n}\n\nfunction fail(message) {\n  const ERR_INTERNAL_ASSERTION = lazyError();\n  throw new ERR_INTERNAL_ASSERTION(message);\n}\n\nassert.fail = fail;\n\nmodule.exports = assert;\n
code-source-info,0x1480059a0,8,143,278,,,
code-creation,JS,10,41125,0x148005aa0,208,nextPart node:fs:2684:31,0xb1c4a423280,^
script-source,48,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\n\n'use strict';\n\nconst {\n  ArrayFromAsync\x2C\n  ArrayPrototypePush\x2C\n  BigIntPrototypeToString\x2C\n  Boolean\x2C\n  MathMax\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  Promise\x2C\n  PromisePrototypeThen\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  SymbolDispose\x2C\n  uncurryThis\x2C\n} = primordials;\n\nconst { fs: constants } = internalBinding('constants');\nconst {\n  S_IFIFO\x2C\n  S_IFLNK\x2C\n  S_IFMT\x2C\n  S_IFREG\x2C\n  S_IFSOCK\x2C\n  F_OK\x2C\n  R_OK\x2C\n  W_OK\x2C\n  X_OK\x2C\n  O_WRONLY\x2C\n  O_SYMLINK\x2C\n} = constants;\n\nconst pathModule = require('path');\nconst { isAbsolute } = pathModule;\nconst { isArrayBufferView } = require('internal/util/types');\n\nconst binding = internalBinding('fs');\n\nconst { createBlobFromFilePath } = require('internal/blob');\n\nconst { Buffer } = require('buffer');\nconst { isBuffer: BufferIsBuffer } = Buffer;\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\nconst {\n  AbortError\x2C\n  aggregateTwoErrors\x2C\n  codes: {\n    ERR_ACCESS_DENIED\x2C\n    ERR_FS_FILE_TOO_LARGE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst {\n  FSReqCallback\x2C\n  statValues\x2C\n} = binding;\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\n  deprecate\x2C\n  getLazy\x2C\n  kEmptyObject\x2C\n  promisify: {\n    custom: kCustomPromisifiedSymbol\x2C\n  }\x2C\n  SideEffectFreeRegExpPrototypeExec\x2C\n  defineLazyProperties\x2C\n  isWindows\x2C\n  isMacOS\x2C\n} = require('internal/util');\nconst {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n  }\x2C\n  copyObject\x2C\n  Dirent\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  handleErrorFromBinding\x2C\n  preprocessSymlinkDestination\x2C\n  Stats\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  realpathCacheKey\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n} = require('internal/fs/utils');\nconst {\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_BACKWARD_SLASH\x2C\n} = require('internal/constants');\nconst {\n  isInt32\x2C\n  parseFileMode\x2C\n  validateBoolean\x2C\n  validateBuffer\x2C\n  validateEncoding\x2C\n  validateFunction\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateOneOf\x2C\n  validateString\x2C\n  kValidateObjectAllowNullable\x2C\n} = require('internal/validators');\n\nconst permission = require('internal/process/permission');\n\nlet fs;\n\n// Lazy loaded\nlet cpFn;\nlet cpSyncFn;\nlet promises = null;\nlet ReadStream;\nlet WriteStream;\nlet rimraf;\nlet kResistStopPropagation;\nlet ReadFileContext;\n\n// These have to be separate because of how graceful-fs happens to do it's\n// monkeypatching.\nlet FileReadStream;\nlet FileWriteStream;\n\n// Ensure that callbacks run in the global context. Only use this function\n// for callbacks that are passed to the binding layer\x2C callbacks that are\n// invoked from JS already run in the proper scope.\nfunction makeCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\n}\n\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\n// an optimization\x2C since the data passed back to the callback needs to be\n// transformed anyway.\nfunction makeStatsCallback(cb) {\n  validateFunction(cb\x2C 'cb');\n\n  return (err\x2C stats) => {\n    if (err) return cb(err);\n    cb(err\x2C getStatsFromBinding(stats));\n  };\n}\n\nconst isFd = isInt32;\n\nfunction isFileType(stats\x2C fileType) {\n  // Use stats array directly to avoid creating an fs.Stats instance just for\n  // our internal use.\n  let mode = stats[1];\n  if (typeof mode === 'bigint')\n    mode = Number(mode);\n  return (mode & S_IFMT) === fileType;\n}\n\n/**\n * Tests a user's permissions for the file or directory\n * specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction access(path\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = F_OK;\n  }\n\n  path = getValidatedPath(path);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.access(path\x2C mode\x2C req);\n}\n\n/**\n * Synchronously tests a user's permissions for the file or\n * directory specified by `path`.\n * @param {string | Buffer | URL} path\n * @param {number} [mode]\n * @returns {void}\n */\nfunction accessSync(path\x2C mode) {\n  binding.access(getValidatedPath(path)\x2C mode);\n}\n\n/**\n * Tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @param {(exists?: boolean) => any} callback\n * @returns {void}\n */\nfunction exists(path\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n\n  function suppressedCallback(err) {\n    callback(!err);\n  }\n\n  try {\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\n  } catch {\n    return callback(false);\n  }\n}\n\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\n  __proto__: null\x2C\n  value: function exists(path) { // eslint-disable-line func-name-matching\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\n  }\x2C\n});\n\nlet showExistsDeprecation = true;\n/**\n * Synchronously tests whether or not the given path exists.\n * @param {string | Buffer | URL} path\n * @returns {boolean}\n */\nfunction existsSync(path) {\n  try {\n    path = getValidatedPath(path);\n  } catch (err) {\n    if (showExistsDeprecation && err?.code === 'ERR_INVALID_ARG_TYPE') {\n      process.emitWarning(\n        'Passing invalid argument types to fs.existsSync is deprecated'\x2C 'DeprecationWarning'\x2C 'DEP0187'\x2C\n      );\n      showExistsDeprecation = false;\n    }\n    return false;\n  }\n\n  return binding.existsSync(path);\n}\n\nfunction readFileAfterOpen(err\x2C fd) {\n  const context = this.context;\n\n  if (err) {\n    context.callback(err);\n    return;\n  }\n\n  context.fd = fd;\n\n  const req = new FSReqCallback();\n  req.oncomplete = readFileAfterStat;\n  req.context = context;\n  binding.fstat(fd\x2C false\x2C req);\n}\n\nfunction readFileAfterStat(err\x2C stats) {\n  const context = this.context;\n\n  if (err)\n    return context.close(err);\n\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\n  // wise\x2C similar to the promise based version (less peak memory and chunked\n  // stringify operations vs multiple C++/JS boundary crossings).\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n\n  if (size > kIoMaxLength) {\n    err = new ERR_FS_FILE_TOO_LARGE(size);\n    return context.close(err);\n  }\n\n  try {\n    if (size === 0) {\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\n      // the result and reuse the buffer instead of allocating a new one.\n      context.buffers = [];\n    } else {\n      context.buffer = Buffer.allocUnsafeSlow(size);\n    }\n  } catch (err) {\n    return context.close(err);\n  }\n  context.read();\n}\n\nfunction checkAborted(signal\x2C callback) {\n  if (signal?.aborted) {\n    callback(new AbortError(undefined\x2C { cause: signal.reason }));\n    return true;\n  }\n  return false;\n}\n\n/**\n * Asynchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   data?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readFile(path\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { flag: 'r' });\n  ReadFileContext ??= require('internal/fs/read/context');\n  const context = new ReadFileContext(callback\x2C options.encoding);\n  context.isUserFd = isFd(path); // File descriptor ownership\n\n  if (options.signal) {\n    context.signal = options.signal;\n  }\n  if (context.isUserFd) {\n    process.nextTick(function tick(context) {\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\n    }\x2C context);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\n  const req = new FSReqCallback();\n  req.context = context;\n  req.oncomplete = readFileAfterOpen;\n  binding.open(getValidatedPath(path)\x2C flagsNumber\x2C 0o666\x2C req);\n}\n\nfunction tryStatSync(fd\x2C isUserFd) {\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\n  if (stats === undefined && !isUserFd) {\n    fs.closeSync(fd);\n  }\n  return stats;\n}\n\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\n  let threw = true;\n  let buffer;\n  try {\n    if (size > kIoMaxLength) {\n      throw new ERR_FS_FILE_TOO_LARGE(size);\n    }\n    buffer = Buffer.allocUnsafe(size);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return buffer;\n}\n\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\n  let threw = true;\n  let bytesRead;\n  try {\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\n    threw = false;\n  } finally {\n    if (threw && !isUserFd) fs.closeSync(fd);\n  }\n  return bytesRead;\n}\n\n/**\n * Synchronously reads the entire contents of a file.\n * @param {string | Buffer | URL | number} path\n * @param {{\n *   encoding?: string | null;\n *   flag?: string;\n *   }} [options]\n * @returns {string | Buffer}\n */\nfunction readFileSync(path\x2C options) {\n  options = getOptions(options\x2C { flag: 'r' });\n\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\n    if (!isInt32(path)) {\n      path = getValidatedPath(path);\n    }\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\n\n  const stats = tryStatSync(fd\x2C isUserFd);\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\n  let pos = 0;\n  let buffer; // Single buffer with file data\n  let buffers; // List for when size is unknown\n\n  if (size === 0) {\n    buffers = [];\n  } else {\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\n  }\n\n  let bytesRead;\n\n  if (size !== 0) {\n    do {\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\n      pos += bytesRead;\n    } while (bytesRead !== 0 && pos < size);\n  } else {\n    do {\n      // The kernel lies about many files.\n      // Go ahead and try to read some bytes.\n      buffer = Buffer.allocUnsafe(8192);\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\n      if (bytesRead !== 0) {\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\n      }\n      pos += bytesRead;\n    } while (bytesRead !== 0);\n  }\n\n  if (!isUserFd)\n    fs.closeSync(fd);\n\n  if (size === 0) {\n    // Data was collected into the buffers list.\n    buffer = Buffer.concat(buffers\x2C pos);\n  } else if (pos < size) {\n    buffer = buffer.slice(0\x2C pos);\n  }\n\n  if (options.encoding) buffer = buffer.toString(options.encoding);\n  return buffer;\n}\n\nfunction defaultCloseCallback(err) {\n  if (err != null) throw err;\n}\n\n/**\n * Closes the file descriptor.\n * @param {number} fd\n * @param {(err?: Error) => any} [callback]\n * @returns {void}\n */\nfunction close(fd\x2C callback = defaultCloseCallback) {\n  if (callback !== defaultCloseCallback)\n    callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.close(fd\x2C req);\n}\n\n/**\n * Synchronously closes the file descriptor.\n * @param {number} fd\n * @returns {void}\n */\nfunction closeSync(fd) {\n  binding.close(fd);\n}\n\n/**\n * Asynchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @param {(\n *   err?: Error\x2C\n *   fd?: number\n *   ) => any} callback\n * @returns {void}\n */\nfunction open(path\x2C flags\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  if (arguments.length < 3) {\n    callback = flags;\n    flags = 'r';\n    mode = 0o666;\n  } else if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0o666;\n  } else {\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\n  }\n  const flagsNumber = stringToFlags(flags);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.open(path\x2C flagsNumber\x2C mode\x2C req);\n}\n\n/**\n * Synchronously opens a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} [flags]\n * @param {string | number} [mode]\n * @returns {number}\n */\nfunction openSync(path\x2C flags\x2C mode) {\n  return binding.open(\n    getValidatedPath(path)\x2C\n    stringToFlags(flags)\x2C\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\n  );\n}\n\n/**\n * @param {string | Buffer | URL } path\n * @param {{\n *   type?: string;\n *   }} [options]\n * @returns {Promise<Blob>}\n */\nfunction openAsBlob(path\x2C options = kEmptyObject) {\n  validateObject(options\x2C 'options');\n  const type = options.type || '';\n  validateString(type\x2C 'options.type');\n  // The underlying implementation here returns the Blob synchronously for now.\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\n  // this API returns a Promise.\n  path = getValidatedPath(path);\n  return PromiseResolve(createBlobFromFilePath(path\x2C { type }));\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} length\n * @param {number | bigint | null} position\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffer?: Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  let params = null;\n  if (arguments.length <= 4) {\n    if (arguments.length === 4) {\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n      callback = length;\n      params = offsetOrOptions;\n    } else if (arguments.length === 3) {\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\n      if (!isArrayBufferView(buffer)) {\n        // This is fs.read(fd\x2C params\x2C callback)\n        params = buffer;\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\n      }\n      callback = offsetOrOptions;\n    } else {\n      // This is fs.read(fd\x2C callback)\n      callback = buffer;\n      buffer = Buffer.alloc(16384);\n    }\n\n    if (params !== undefined) {\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n    ({\n      offset = 0\x2C\n      length = buffer?.byteLength - offset\x2C\n      position = null\x2C\n    } = params ?? kEmptyObject);\n  }\n\n  validateBuffer(buffer);\n  validateFunction(callback\x2C 'cb');\n\n  if (offset == null) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return process.nextTick(function tick() {\n      callback(null\x2C 0\x2C buffer);\n    });\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  function wrapper(err\x2C bytesRead) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C bytesRead || 0\x2C buffer);\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n}\n\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously reads the file from the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView} buffer\n * @param {number | {\n *   offset?: number;\n *   length?: number;\n *   position?: number | bigint | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n\n  validateBuffer(buffer);\n\n  let offset = offsetOrOptions;\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\n    if (offsetOrOptions !== undefined) {\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\n    }\n\n    ({\n      offset = 0\x2C\n      length = buffer.byteLength - offset\x2C\n      position = null\x2C\n    } = offsetOrOptions ?? kEmptyObject);\n  }\n\n  if (offset === undefined) {\n    offset = 0;\n  } else {\n    validateInteger(offset\x2C 'offset'\x2C 0);\n  }\n\n  length |= 0;\n\n  if (length === 0) {\n    return 0;\n  }\n\n  if (buffer.byteLength === 0) {\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\n                                    'is empty and cannot be written');\n  }\n\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\n\n  if (position == null) {\n    position = -1;\n  } else {\n    validatePosition(position\x2C 'position'\x2C length);\n  }\n\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\n}\n\n/**\n * Reads file from the specified `fd` (file descriptor)\n * and writes to an array of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesRead?: number\x2C\n *   buffers?: ArrayBufferView[]\n * ) => any} callback\n * @returns {void}\n */\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C read) {\n    callback(err\x2C read || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\n\n/**\n * Synchronously reads file from the\n * specified `fd` (file descriptor) and writes to an array\n * of `ArrayBufferView`s.\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction readvSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.readBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Writes `buffer` to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {number | object} [offsetOrOptions]\n * @param {number} [length]\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffer?: Buffer | TypedArray | DataView\n * ) => any} callback\n * @returns {void}\n */\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\n    callback(err\x2C written || 0\x2C buffer);\n  }\n\n  fd = getValidatedFd(fd);\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    callback ||= position || length || offset;\n    validateFunction(callback\x2C 'cb');\n\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n\n    if (offset == null || typeof offset === 'function') {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    if (typeof position !== 'number')\n      position = null;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n\n    const req = new FSReqCallback();\n    req.oncomplete = wrapper;\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\n    return;\n  }\n\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n\n  if (typeof position !== 'function') {\n    if (typeof offset === 'function') {\n      position = offset;\n      offset = null;\n    } else {\n      position = length;\n    }\n    length = 'utf8';\n  }\n\n  const str = buffer;\n  validateEncoding(str\x2C length);\n  callback = position;\n  validateFunction(callback\x2C 'cb');\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\n}\n\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\n\n/**\n * Synchronously writes `buffer` to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {Buffer | TypedArray | DataView | string} buffer\n * @param {{\n *   offset?: number;\n *   length?: number;\n *   position?: number | null;\n *   }} [offsetOrOptions]\n * @param {number} [length]\n * @param {number} [position]\n * @returns {number}\n */\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\n  fd = getValidatedFd(fd);\n  const ctx = {};\n  let result;\n\n  let offset = offsetOrOptions;\n  if (isArrayBufferView(buffer)) {\n    if (typeof offset === 'object') {\n      ({\n        offset = 0\x2C\n        length = buffer.byteLength - offset\x2C\n        position = null\x2C\n      } = offsetOrOptions ?? kEmptyObject);\n    }\n    if (position === undefined)\n      position = null;\n    if (offset == null) {\n      offset = 0;\n    } else {\n      validateInteger(offset\x2C 'offset'\x2C 0);\n    }\n    if (typeof length !== 'number')\n      length = buffer.byteLength - offset;\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\n                                 undefined\x2C ctx);\n  } else {\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\n    validateEncoding(buffer\x2C length);\n\n    if (offset === undefined)\n      offset = null;\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\n                                 undefined\x2C ctx);\n  }\n  handleErrorFromBinding(ctx);\n  return result;\n}\n\n/**\n * Writes an array of `ArrayBufferView`s to the\n * specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @param {(\n *   err?: Error\x2C\n *   bytesWritten?: number\x2C\n *   buffers?: ArrayBufferView[]\n *   ) => any} callback\n * @returns {void}\n */\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\n  function wrapper(err\x2C written) {\n    callback(err\x2C written || 0\x2C buffers);\n  }\n\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n  callback ||= position;\n  validateFunction(callback\x2C 'cb');\n\n  if (buffers.length === 0) {\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = wrapper;\n\n  if (typeof position !== 'number')\n    position = null;\n\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\n}\n\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\n  __proto__: null\x2C\n  value: ['bytesWritten'\x2C 'buffer']\x2C\n  enumerable: false\x2C\n});\n\n/**\n * Synchronously writes an array of `ArrayBufferView`s\n * to the specified `fd` (file descriptor).\n * @param {number} fd\n * @param {ArrayBufferView[]} buffers\n * @param {number | null} [position]\n * @returns {number}\n */\nfunction writevSync(fd\x2C buffers\x2C position) {\n  fd = getValidatedFd(fd);\n  validateBufferArray(buffers);\n\n  if (buffers.length === 0) {\n    return 0;\n  }\n\n  if (typeof position !== 'number')\n    position = null;\n\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\n}\n\n/**\n * Asynchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rename(oldPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.rename(\n    getValidatedPath(oldPath\x2C 'oldPath')\x2C\n    getValidatedPath(newPath\x2C 'newPath')\x2C\n    req\x2C\n  );\n}\n\n\n/**\n * Synchronously renames file at `oldPath` to\n * the pathname provided as `newPath`.\n * @param {string | Buffer | URL} oldPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction renameSync(oldPath\x2C newPath) {\n  binding.rename(\n    getValidatedPath(oldPath\x2C 'oldPath')\x2C\n    getValidatedPath(newPath\x2C 'newPath')\x2C\n  );\n}\n\n/**\n * Truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction truncate(path\x2C len\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  } else if (len === undefined) {\n    len = 0;\n  }\n\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  validateFunction(callback\x2C 'cb');\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\n    if (er) return callback(er);\n    const req = new FSReqCallback();\n    req.oncomplete = function oncomplete(er) {\n      fs.close(fd\x2C (er2) => {\n        callback(aggregateTwoErrors(er2\x2C er));\n      });\n    };\n    binding.ftruncate(fd\x2C len\x2C req);\n  });\n}\n\n/**\n * Synchronously truncates the file.\n * @param {string | Buffer | URL} path\n * @param {number} [len]\n * @returns {void}\n */\nfunction truncateSync(path\x2C len) {\n  if (len === undefined) {\n    len = 0;\n  }\n  // Allow error to be thrown\x2C but still close fd.\n  const fd = fs.openSync(path\x2C 'r+');\n  try {\n    fs.ftruncateSync(fd\x2C len);\n  } finally {\n    fs.closeSync(fd);\n  }\n}\n\n/**\n * Truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\n  if (typeof len === 'function') {\n    callback = len;\n    len = 0;\n  }\n  validateInteger(len\x2C 'len');\n  len = MathMax(0\x2C len);\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.ftruncate(fd\x2C len\x2C req);\n}\n\n/**\n * Synchronously truncates the file descriptor.\n * @param {number} fd\n * @param {number} [len]\n * @returns {void}\n */\nfunction ftruncateSync(fd\x2C len = 0) {\n  validateInteger(len\x2C 'len');\n  binding.ftruncate(fd\x2C len < 0 ? 0 : len);\n}\n\nfunction lazyLoadCp() {\n  if (cpFn === undefined) {\n    ({ cpFn } = require('internal/fs/cp/cp'));\n    cpFn = require('util').callbackify(cpFn);\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\n  }\n}\n\nfunction lazyLoadRimraf() {\n  if (rimraf === undefined)\n    ({ rimraf } = require('internal/fs/rimraf'));\n}\n\n/**\n * Asynchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rmdir(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    validateRmOptions(\n      path\x2C\n      { ...options\x2C force: false }\x2C\n      true\x2C\n      (err\x2C options) => {\n        if (err === false) {\n          const req = new FSReqCallback();\n          req.oncomplete = callback;\n          binding.rmdir(path\x2C req);\n          return;\n        }\n        if (err) {\n          return callback(err);\n        }\n\n        lazyLoadRimraf();\n        rimraf(path\x2C options\x2C callback);\n      });\n  } else {\n    validateRmdirOptions(options);\n    const req = new FSReqCallback();\n    req.oncomplete = callback;\n    binding.rmdir(path\x2C req);\n  }\n}\n\n/**\n * Synchronously removes a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmdirSync(path\x2C options) {\n  path = getValidatedPath(path);\n\n  if (options?.recursive) {\n    emitRecursiveRmdirWarning();\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\n    if (options !== false) {\n      return binding.rmSync(path\x2C options.maxRetries\x2C options.recursive\x2C options.retryDelay);\n    }\n  } else {\n    validateRmdirOptions(options);\n  }\n\n  binding.rmdir(path);\n}\n\n/**\n * Asynchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction rm(path\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  path = getValidatedPath(path);\n\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\n    if (err) {\n      return callback(err);\n    }\n    lazyLoadRimraf();\n    return rimraf(path\x2C options\x2C callback);\n  });\n}\n\n/**\n * Synchronously removes files and\n * directories (modeled on the standard POSIX `rm` utility).\n * @param {string | Buffer | URL} path\n * @param {{\n *   force?: boolean;\n *   maxRetries?: number;\n *   recursive?: boolean;\n *   retryDelay?: number;\n *   }} [options]\n * @returns {void}\n */\nfunction rmSync(path\x2C options) {\n  const opts = validateRmOptionsSync(path\x2C options\x2C false);\n  return binding.rmSync(getValidatedPath(path)\x2C opts.maxRetries\x2C opts.recursive\x2C opts.retryDelay);\n}\n\n/**\n * Forces all currently queued I/O operations associated\n * with the file to the operating system's synchronized\n * I/O completion state.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fdatasync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fdatasync(fd\x2C req);\n}\n\n/**\n * Synchronously forces all currently queued I/O operations\n * associated with the file to the operating\n * system's synchronized I/O completion state.\n * @param {number} fd\n * @returns {void}\n */\nfunction fdatasyncSync(fd) {\n  binding.fdatasync(fd);\n}\n\n/**\n * Requests for all data for the open file descriptor\n * to be flushed to the storage device.\n * @param {number} fd\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fsync(fd\x2C callback) {\n  const req = new FSReqCallback();\n  req.oncomplete = makeCallback(callback);\n  binding.fsync(fd\x2C req);\n}\n\n/**\n * Synchronously requests for all data for the open\n * file descriptor to be flushed to the storage device.\n * @param {number} fd\n * @returns {void}\n */\nfunction fsyncSync(fd) {\n  binding.fsync(fd);\n}\n\n/**\n * Asynchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction mkdir(path\x2C options\x2C callback) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'function') {\n    callback = options;\n  } else if (typeof options === 'number' || typeof options === 'string') {\n    mode = parseFileMode(options\x2C 'mode');\n  } else if (options) {\n    if (options.recursive !== undefined) {\n      recursive = options.recursive;\n      validateBoolean(recursive\x2C 'options.recursive');\n    }\n    if (options.mode !== undefined) {\n      mode = parseFileMode(options.mode\x2C 'options.mode');\n    }\n  }\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdir(\n    getValidatedPath(path)\x2C\n    mode\x2C\n    recursive\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously creates a directory.\n * @param {string | Buffer | URL} path\n * @param {{\n *   recursive?: boolean;\n *   mode?: string | number;\n *   } | number} [options]\n * @returns {string | void}\n */\nfunction mkdirSync(path\x2C options) {\n  let mode = 0o777;\n  let recursive = false;\n  if (typeof options === 'number' || typeof options === 'string') {\n    mode = parseFileMode(options\x2C 'mode');\n  } else if (options) {\n    if (options.recursive !== undefined) {\n      recursive = options.recursive;\n      validateBoolean(recursive\x2C 'options.recursive');\n    }\n    if (options.mode !== undefined) {\n      mode = parseFileMode(options.mode\x2C 'options.mode');\n    }\n  }\n\n  const result = binding.mkdir(\n    getValidatedPath(path)\x2C\n    mode\x2C\n    recursive\x2C\n  );\n\n  if (recursive) {\n    return result;\n  }\n}\n\n/*\n * An recursive algorithm for reading the entire contents of the `basePath` directory.\n * This function does not validate `basePath` as a directory. It is passed directly to\n * `binding.readdir`.\n * @param {string} basePath\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Dirent[]\n * ) => any} callback\n * @returns {void}\n*/\nfunction readdirRecursive(basePath\x2C options\x2C callback) {\n  const context = {\n    withFileTypes: Boolean(options.withFileTypes)\x2C\n    encoding: options.encoding\x2C\n    basePath\x2C\n    readdirResults: []\x2C\n    pathsQueue: [basePath]\x2C\n  };\n\n  let i = 0;\n\n  function read(path) {\n    const req = new FSReqCallback();\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n\n      if (result === undefined) {\n        callback(null\x2C context.readdirResults);\n        return;\n      }\n\n      processReaddirResult({\n        result\x2C\n        currentPath: path\x2C\n        context\x2C\n      });\n\n      if (i < context.pathsQueue.length) {\n        read(context.pathsQueue[i++]);\n      } else {\n        callback(null\x2C context.readdirResults);\n      }\n    };\n\n    binding.readdir(\n      path\x2C\n      context.encoding\x2C\n      context.withFileTypes\x2C\n      req\x2C\n    );\n  }\n\n  read(context.pathsQueue[i++]);\n}\n\n// Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\n// The first array is the names\x2C and the second array is the types.\n// They are guaranteed to be the same length; hence\x2C setting `length` to the length\n// of the first array within the result.\nconst processReaddirResult = (args) => (args.context.withFileTypes ? handleDirents(args) : handleFilePaths(args));\n\nfunction handleDirents({ result\x2C currentPath\x2C context }) {\n  const { 0: names\x2C 1: types } = result;\n  const { length } = names;\n\n  for (let i = 0; i < length; i++) {\n    // Avoid excluding symlinks\x2C as they are not directories.\n    // Refs: https://github.com/nodejs/node/issues/52663\n    const fullPath = pathModule.join(currentPath\x2C names[i]);\n    const dirent = getDirent(currentPath\x2C names[i]\x2C types[i]);\n    ArrayPrototypePush(context.readdirResults\x2C dirent);\n\n    if (dirent.isDirectory() || binding.internalModuleStat(fullPath) === 1) {\n      ArrayPrototypePush(context.pathsQueue\x2C fullPath);\n    }\n  }\n}\n\nfunction handleFilePaths({ result\x2C currentPath\x2C context }) {\n  for (let i = 0; i < result.length; i++) {\n    const resultPath = pathModule.join(currentPath\x2C result[i]);\n    const relativeResultPath = pathModule.relative(context.basePath\x2C resultPath);\n    const stat = binding.internalModuleStat(resultPath);\n    ArrayPrototypePush(context.readdirResults\x2C relativeResultPath);\n\n    if (stat === 1) {\n      ArrayPrototypePush(context.pathsQueue\x2C resultPath);\n    }\n  }\n}\n\n/**\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\n * This function does not validate `basePath` as a directory. It is passed directly to\n * `binding.readdir`.\n * @param {string} basePath\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\n * @returns {string[] | Dirent[]}\n */\nfunction readdirSyncRecursive(basePath\x2C options) {\n  const context = {\n    withFileTypes: Boolean(options.withFileTypes)\x2C\n    encoding: options.encoding\x2C\n    basePath\x2C\n    readdirResults: []\x2C\n    pathsQueue: [basePath]\x2C\n  };\n\n  function read(path) {\n    const readdirResult = binding.readdir(\n      path\x2C\n      context.encoding\x2C\n      context.withFileTypes\x2C\n    );\n\n    if (readdirResult === undefined) {\n      return;\n    }\n\n    processReaddirResult({\n      result: readdirResult\x2C\n      currentPath: path\x2C\n      context\x2C\n    });\n  }\n\n  for (let i = 0; i < context.pathsQueue.length; i++) {\n    read(context.pathsQueue[i]);\n  }\n\n  return context.readdirResults;\n}\n\n/**\n * Reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @param {(\n *   err?: Error\x2C\n *   files?: string[] | Buffer[] | Dirent[]\n * ) => any} callback\n * @returns {void}\n */\nfunction readdir(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    // Make shallow copy to prevent mutating options from affecting results\n    options = copyObject(options);\n\n    readdirRecursive(path\x2C options\x2C callback);\n    return;\n  }\n\n  const req = new FSReqCallback();\n  if (!options.withFileTypes) {\n    req.oncomplete = callback;\n  } else {\n    req.oncomplete = (err\x2C result) => {\n      if (err) {\n        callback(err);\n        return;\n      }\n      getDirents(path\x2C result\x2C callback);\n    };\n  }\n  binding.readdir(\n    path\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously reads the contents of a directory.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   encoding?: string;\n *   withFileTypes?: boolean;\n *   recursive?: boolean;\n *   }} [options]\n * @returns {string | Buffer[] | Dirent[]}\n */\nfunction readdirSync(path\x2C options) {\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  if (options.recursive != null) {\n    validateBoolean(options.recursive\x2C 'options.recursive');\n  }\n\n  if (options.recursive) {\n    return readdirSyncRecursive(path\x2C options);\n  }\n\n  const result = binding.readdir(\n    path\x2C\n    options.encoding\x2C\n    !!options.withFileTypes\x2C\n  );\n\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\n}\n\n/**\n * Invokes the callback with the `fs.Stats`\n * for the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} [callback]\n * @returns {void}\n */\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.fstat(fd\x2C options.bigint\x2C req);\n}\n\n/**\n * Retrieves the `fs.Stats` for the symbolic link\n * referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    const resource = BufferIsBuffer(path) ? BufferToString(path) : path;\n    callback(new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C resource));\n    return;\n  }\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.lstat(path\x2C options.bigint\x2C req);\n}\n\n/**\n * Asynchronously gets the stats of a file.\n * @param {string | Buffer | URL} path\n * @param {{ bigint?: boolean; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   stats?: Stats\n *   ) => any} callback\n * @returns {void}\n */\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  callback = makeStatsCallback(callback);\n\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = callback;\n  binding.stat(getValidatedPath(path)\x2C options.bigint\x2C req);\n}\n\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = kEmptyObject;\n  }\n  validateFunction(callback\x2C 'cb');\n  path = getValidatedPath(path);\n  const req = new FSReqCallback(options.bigint);\n  req.oncomplete = (err\x2C stats) => {\n    if (err) {\n      return callback(err);\n    }\n\n    callback(err\x2C getStatFsFromBinding(stats));\n  };\n  binding.statfs(getValidatedPath(path)\x2C options.bigint\x2C req);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the file descriptor.\n * @param {number} fd\n * @param {{ bigint?: boolean; }} [options]\n * @returns {Stats | undefined}\n */\nfunction fstatSync(fd\x2C options = { bigint: false }) {\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats` for\n * the symbolic link referred to by the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats | undefined}\n */\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  path = getValidatedPath(path);\n  if (permission.isEnabled() && !permission.has('fs.read'\x2C path)) {\n    const resource = BufferIsBuffer(path) ? BufferToString(path) : path;\n    throw new ERR_ACCESS_DENIED('Access to this API has been restricted'\x2C 'FileSystemRead'\x2C resource);\n  }\n  const stats = binding.lstat(\n    getValidatedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n\n  if (stats === undefined) {\n    return;\n  }\n  return getStatsFromBinding(stats);\n}\n\n/**\n * Synchronously retrieves the `fs.Stats`\n * for the `path`.\n * @param {string | Buffer | URL} path\n * @param {{\n *   bigint?: boolean;\n *   throwIfNoEntry?: boolean;\n *   }} [options]\n * @returns {Stats}\n */\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\n  const stats = binding.stat(\n    getValidatedPath(path)\x2C\n    options.bigint\x2C\n    undefined\x2C\n    options.throwIfNoEntry\x2C\n  );\n  if (stats === undefined) {\n    return undefined;\n  }\n  return getStatsFromBinding(stats);\n}\n\nfunction statfsSync(path\x2C options = { bigint: false }) {\n  const stats = binding.statfs(getValidatedPath(path)\x2C options.bigint);\n  return getStatFsFromBinding(stats);\n}\n\n/**\n * Reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @param {(\n *   err?: Error\x2C\n *   linkString?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction readlink(path\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.readlink(getValidatedPath(path)\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously reads the contents of a symbolic link\n * referred to by `path`.\n * @param {string | Buffer | URL} path\n * @param {{ encoding?: string; } | string} [options]\n * @returns {string | Buffer}\n */\nfunction readlinkSync(path\x2C options) {\n  options = getOptions(options);\n  return binding.readlink(getValidatedPath(path)\x2C options.encoding);\n}\n\n/**\n * Creates the link called `path` pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction symlink(target\x2C path\x2C type\x2C callback) {\n  if (callback === undefined) {\n    callback = makeCallback(type);\n    type = undefined;\n  } else {\n    validateOneOf(type\x2C 'type'\x2C ['dir'\x2C 'file'\x2C 'junction'\x2C null\x2C undefined]);\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n        return;\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\n      return;\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  if (isWindows && type == null) {\n    let absoluteTarget;\n    try {\n      // Symlinks targets can be relative to the newly created path.\n      // Calculate absolute file name of the symlink target\x2C and check\n      // if it is a directory. Ignore resolve error to keep symlink\n      // errors consistent between platforms if invalid path is\n      // provided.\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\n    } catch {\n      // Continue regardless of error.\n    }\n    if (absoluteTarget !== undefined) {\n      stat(absoluteTarget\x2C (err\x2C stat) => {\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\n        const resolvedFlags = stringToSymlinkType(resolvedType);\n        const destination = preprocessSymlinkDestination(target\x2C\n                                                         resolvedType\x2C\n                                                         path);\n\n        const req = new FSReqCallback();\n        req.oncomplete = callback;\n        binding.symlink(\n          destination\x2C\n          path\x2C\n          resolvedFlags\x2C\n          req\x2C\n        );\n      });\n      return;\n    }\n  }\n\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\n\n  const flags = stringToSymlinkType(type);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.symlink(destination\x2C path\x2C flags\x2C req);\n}\n\n/**\n * Synchronously creates the link called `path`\n * pointing to `target`.\n * @param {string | Buffer | URL} target\n * @param {string | Buffer | URL} path\n * @param {string | null} [type]\n * @returns {void}\n */\nfunction symlinkSync(target\x2C path\x2C type) {\n  validateOneOf(type\x2C 'type'\x2C ['dir'\x2C 'file'\x2C 'junction'\x2C null\x2C undefined]);\n  if (isWindows && type == null) {\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\n      type = 'dir';\n    }\n  }\n\n  if (permission.isEnabled()) {\n    // The permission model's security guarantees fall apart in the presence of\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\n    if (BufferIsBuffer(target)) {\n      if (!isAbsolute(BufferToString(target))) {\n        throw new ERR_ACCESS_DENIED('relative symbolic link target');\n      }\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\n    }\n  }\n\n  target = getValidatedPath(target\x2C 'target');\n  path = getValidatedPath(path);\n\n  binding.symlink(\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\n    path\x2C\n    stringToSymlinkType(type)\x2C\n  );\n}\n\n/**\n * Creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction link(existingPath\x2C newPath\x2C callback) {\n  callback = makeCallback(callback);\n\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n\n  binding.link(existingPath\x2C newPath\x2C req);\n}\n\n/**\n * Synchronously creates a new link from the `existingPath`\n * to the `newPath`.\n * @param {string | Buffer | URL} existingPath\n * @param {string | Buffer | URL} newPath\n * @returns {void}\n */\nfunction linkSync(existingPath\x2C newPath) {\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\n  newPath = getValidatedPath(newPath\x2C 'newPath');\n\n  binding.link(\n    existingPath\x2C\n    newPath\x2C\n  );\n}\n\n/**\n * Asynchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction unlink(path\x2C callback) {\n  callback = makeCallback(callback);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.unlink(getValidatedPath(path)\x2C req);\n}\n\n/**\n * Synchronously removes a file or symbolic link.\n * @param {string | Buffer | URL} path\n * @returns {void}\n */\nfunction unlinkSync(path) {\n  binding.unlink(getValidatedPath(path));\n}\n\n/**\n * Sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchmod(fd\x2C mode\x2C callback) {\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchmod(fd\x2C mode\x2C req);\n}\n\n/**\n * Synchronously sets the permissions on the file.\n * @param {number} fd\n * @param {string | number} mode\n * @returns {void}\n */\nfunction fchmodSync(fd\x2C mode) {\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchmod API is disabled when Permission Model is enabled.');\n  }\n  binding.fchmod(\n    fd\x2C\n    parseFileMode(mode\x2C 'mode')\x2C\n  );\n}\n\n/**\n * Changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchmod(path\x2C mode\x2C callback) {\n  validateFunction(callback\x2C 'cb');\n  mode = parseFileMode(mode\x2C 'mode');\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\n    if (err) {\n      callback(err);\n      return;\n    }\n    // Prefer to return the chmod error\x2C if one occurs\x2C\n    // but still try to close\x2C and report closing errors if they occur.\n    fs.fchmod(fd\x2C mode\x2C (err) => {\n      fs.close(fd\x2C (err2) => {\n        callback(aggregateTwoErrors(err2\x2C err));\n      });\n    });\n  });\n}\n\n/**\n * Synchronously changes the permissions on a symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} mode\n * @returns {void}\n */\nfunction lchmodSync(path\x2C mode) {\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\n\n  // Prefer to return the chmod error\x2C if one occurs\x2C\n  // but still try to close\x2C and report closing errors if they occur.\n  try {\n    fs.fchmodSync(fd\x2C mode);\n  } finally {\n    fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chmod(path\x2C mode\x2C callback) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chmod(path\x2C mode\x2C req);\n}\n\n/**\n * Synchronously changes the permissions of a file.\n * @param {string | Buffer | URL} path\n * @param {string | number} mode\n * @returns {void}\n */\nfunction chmodSync(path\x2C mode) {\n  path = getValidatedPath(path);\n  mode = parseFileMode(mode\x2C 'mode');\n\n  binding.chmod(path\x2C mode);\n}\n\n/**\n * Sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lchown(path\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the symbolic link.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction lchownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.lchown(path\x2C uid\x2C gid);\n}\n\n/**\n * Sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  callback = makeCallback(callback);\n  if (permission.isEnabled()) {\n    callback(new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.'));\n    return;\n  }\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.fchown(fd\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously sets the owner of the file.\n * @param {number} fd\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction fchownSync(fd\x2C uid\x2C gid) {\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  if (permission.isEnabled()) {\n    throw new ERR_ACCESS_DENIED('fchown API is disabled when Permission Model is enabled.');\n  }\n\n  binding.fchown(fd\x2C uid\x2C gid);\n}\n\n/**\n * Asynchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.chown(path\x2C uid\x2C gid\x2C req);\n}\n\n/**\n * Synchronously changes the owner and group\n * of a file.\n * @param {string | Buffer | URL} path\n * @param {number} uid\n * @param {number} gid\n * @returns {void}\n */\nfunction chownSync(path\x2C uid\x2C gid) {\n  path = getValidatedPath(path);\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\n  binding.chown(path\x2C uid\x2C gid);\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.utimes(\n    path\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by `path`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction utimesSync(path\x2C atime\x2C mtime) {\n  binding.utimes(\n    getValidatedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\n/**\n * Changes the file system timestamps of the object\n * referenced by the supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\n  atime = toUnixTimestamp(atime\x2C 'atime');\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\n}\n\n/**\n * Synchronously changes the file system timestamps\n * of the object referenced by the\n * supplied `fd` (file descriptor).\n * @param {number} fd\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction futimesSync(fd\x2C atime\x2C mtime) {\n  binding.futimes(\n    fd\x2C\n    toUnixTimestamp(atime\x2C 'atime')\x2C\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\n  );\n}\n\n/**\n * Changes the access and modification times of\n * a file in the same way as `fs.utimes()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\n  callback = makeCallback(callback);\n  path = getValidatedPath(path);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.lutimes(\n    path\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n    req\x2C\n  );\n}\n\n/**\n * Synchronously changes the access and modification\n * times of a file in the same way as `fs.utimesSync()`.\n * @param {string | Buffer | URL} path\n * @param {number | string | Date} atime\n * @param {number | string | Date} mtime\n * @returns {void}\n */\nfunction lutimesSync(path\x2C atime\x2C mtime) {\n  binding.lutimes(\n    getValidatedPath(path)\x2C\n    toUnixTimestamp(atime)\x2C\n    toUnixTimestamp(mtime)\x2C\n  );\n}\n\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\n  if (signal?.aborted) {\n    const abortError = new AbortError(undefined\x2C { cause: signal.reason });\n    if (isUserFd) {\n      callback(abortError);\n    } else {\n      fs.close(fd\x2C (err) => {\n        callback(aggregateTwoErrors(err\x2C abortError));\n      });\n    }\n    return;\n  }\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\n    if (writeErr) {\n      if (isUserFd) {\n        callback(writeErr);\n      } else {\n        fs.close(fd\x2C (err) => {\n          callback(aggregateTwoErrors(err\x2C writeErr));\n        });\n      }\n    } else if (written === length) {\n      if (!flush) {\n        if (isUserFd) {\n          callback(null);\n        } else {\n          fs.close(fd\x2C callback);\n        }\n      } else {\n        fs.fsync(fd\x2C (syncErr) => {\n          if (syncErr) {\n            if (isUserFd) {\n              callback(syncErr);\n            } else {\n              fs.close(fd\x2C (err) => {\n                callback(aggregateTwoErrors(err\x2C syncErr));\n              });\n            }\n          } else if (isUserFd) {\n            callback(null);\n          } else {\n            fs.close(fd\x2C callback);\n          }\n        });\n      }\n    } else {\n      offset += written;\n      length -= written;\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Asynchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   signal?: AbortSignal;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n  const flag = options.flag || 'w';\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  if (isFd(path)) {\n    const isUserFd = true;\n    const signal = options.signal;\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    return;\n  }\n\n  if (checkAborted(options.signal\x2C callback))\n    return;\n\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\n    if (openErr) {\n      callback(openErr);\n    } else {\n      const isUserFd = false;\n      const signal = options.signal;\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\n    }\n  });\n}\n\n/**\n * Synchronously writes data to the file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer | TypedArray | DataView} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @returns {void}\n */\nfunction writeFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C {\n    encoding: 'utf8'\x2C\n    mode: 0o666\x2C\n    flag: 'w'\x2C\n    flush: false\x2C\n  });\n\n  const flush = options.flush ?? false;\n\n  validateBoolean(flush\x2C 'options.flush');\n\n  const flag = options.flag || 'w';\n\n  // C++ fast path for string data and UTF8 encoding\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\n    if (!isInt32(path)) {\n      path = getValidatedPath(path);\n    }\n\n    return binding.writeFileUtf8(\n      path\x2C\n      data\x2C\n      stringToFlags(flag)\x2C\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\n    );\n  }\n\n  if (!isArrayBufferView(data)) {\n    validateStringAfterArrayBufferView(data\x2C 'data');\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\n  }\n\n  const isUserFd = isFd(path); // File descriptor ownership\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\n\n  let offset = 0;\n  let length = data.byteLength;\n  try {\n    while (length > 0) {\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\n      offset += written;\n      length -= written;\n    }\n\n    if (flush) {\n      fs.fsyncSync(fd);\n    }\n  } finally {\n    if (!isUserFd) fs.closeSync(fd);\n  }\n}\n\n/**\n * Asynchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   flush?: boolean;\n *   } | string} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\n  callback ||= options;\n  validateFunction(callback\x2C 'cb');\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\n}\n\n/**\n * Synchronously appends data to a file.\n * @param {string | Buffer | URL | number} path\n * @param {string | Buffer} data\n * @param {{\n *   encoding?: string | null;\n *   mode?: number;\n *   flag?: string;\n *   } | string} [options]\n * @returns {void}\n */\nfunction appendFileSync(path\x2C data\x2C options) {\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  // Force append behavior when using a supplied file descriptor\n  if (!options.flag || isFd(path))\n    options.flag = 'a';\n\n  fs.writeFileSync(path\x2C data\x2C options);\n}\n\n/**\n * Watches for the changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {string | {\n *   persistent?: boolean;\n *   recursive?: boolean;\n *   encoding?: string;\n *   signal?: AbortSignal;\n *   }} [options]\n * @param {(\n *   eventType?: string\x2C\n *   filename?: string | Buffer\n *   ) => any} [listener]\n * @returns {watchers.FSWatcher}\n */\nfunction watch(filename\x2C options\x2C listener) {\n  if (typeof options === 'function') {\n    listener = options;\n  }\n  options = getOptions(options);\n\n  // Don't make changes directly on options object\n  options = copyObject(options);\n\n  if (options.persistent === undefined) options.persistent = true;\n  if (options.recursive === undefined) options.recursive = false;\n\n  let watcher;\n  const watchers = require('internal/fs/watchers');\n  const path = getValidatedPath(filename);\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\n  // e.g. Linux due to the limitations of inotify.\n  if (options.recursive && !isMacOS && !isWindows) {\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\n    watcher = new nonNativeWatcher.FSWatcher(options);\n    watcher[watchers.kFSWatchStart](path);\n  } else {\n    watcher = new watchers.FSWatcher();\n    watcher[watchers.kFSWatchStart](path\x2C\n                                    options.persistent\x2C\n                                    options.recursive\x2C\n                                    options.encoding);\n  }\n\n  if (listener) {\n    watcher.addListener('change'\x2C listener);\n  }\n  if (options.signal) {\n    if (options.signal.aborted) {\n      process.nextTick(() => watcher.close());\n    } else {\n      const listener = () => watcher.close();\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\n      watcher.once('close'\x2C () => {\n        options.signal.removeEventListener('abort'\x2C listener);\n      });\n    }\n  }\n\n  return watcher;\n}\n\n\nconst statWatchers = new SafeMap();\n\n/**\n * Watches for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {{\n *   bigint?: boolean;\n *   persistent?: boolean;\n *   interval?: number;\n *   }} [options]\n * @param {(\n *   current?: Stats\x2C\n *   previous?: Stats\n *   ) => any} listener\n * @returns {watchers.StatWatcher}\n */\nfunction watchFile(filename\x2C options\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  let stat;\n\n  if (options === null || typeof options !== 'object') {\n    listener = options;\n    options = null;\n  }\n\n  options = {\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\n    // a little on the slow side but let's stick with it for now to keep\n    // behavioral changes to a minimum.\n    interval: 5007\x2C\n    persistent: true\x2C\n    ...options\x2C\n  };\n\n  validateFunction(listener\x2C 'listener');\n\n  stat = statWatchers.get(filename);\n  const watchers = require('internal/fs/watchers');\n  if (stat === undefined) {\n    stat = new watchers.StatWatcher(options.bigint);\n    stat[watchers.kFSStatWatcherStart](filename\x2C\n                                       options.persistent\x2C options.interval);\n    statWatchers.set(filename\x2C stat);\n  } else {\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\n  }\n\n  stat.addListener('change'\x2C listener);\n  return stat;\n}\n\n/**\n * Stops watching for changes on `filename`.\n * @param {string | Buffer | URL} filename\n * @param {() => any} [listener]\n * @returns {void}\n */\nfunction unwatchFile(filename\x2C listener) {\n  filename = getValidatedPath(filename);\n  filename = pathModule.resolve(filename);\n  const stat = statWatchers.get(filename);\n\n  if (stat === undefined) return;\n  const watchers = require('internal/fs/watchers');\n  if (typeof listener === 'function') {\n    const beforeListenerCount = stat.listenerCount('change');\n    stat.removeListener('change'\x2C listener);\n    if (stat.listenerCount('change') < beforeListenerCount)\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\n  } else {\n    stat.removeAllListeners('change');\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\n  }\n\n  if (stat.listenerCount('change') === 0) {\n    stat.stop();\n    statWatchers.delete(filename);\n  }\n}\n\n\nlet splitRoot;\nif (isWindows) {\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\n  // slash.\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\n  splitRoot = function splitRoot(str) {\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\n  };\n} else {\n  splitRoot = function splitRoot(str) {\n    for (let i = 0; i < str.length; ++i) {\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\n        return StringPrototypeSlice(str\x2C 0\x2C i);\n    }\n    return str;\n  };\n}\n\nfunction encodeRealpathResult(result\x2C options) {\n  if (!options || !options.encoding || options.encoding === 'utf8')\n    return result;\n  const asBuffer = Buffer.from(result);\n  if (options.encoding === 'buffer') {\n    return asBuffer;\n  }\n  return asBuffer.toString(options.encoding);\n}\n\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\nlet nextPart;\nif (isWindows) {\n  nextPart = function nextPart(p\x2C i) {\n    for (; i < p.length; ++i) {\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\n\n      // Check for a separator character\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\n        return i;\n    }\n    return -1;\n  };\n} else {\n  nextPart = function nextPart(p\x2C i) {\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\n  };\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string | null; }} [options]\n * @returns {string | Buffer}\n */\nfunction realpathSync(p\x2C options) {\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const cache = options[realpathCacheKey];\n  const maybeCachedResult = cache?.get(p);\n  if (maybeCachedResult) {\n    return maybeCachedResult;\n  }\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n  const original = p;\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  // Skip over roots\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows) {\n    const out = binding.lstat(base\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n    if (out === undefined) {\n      return;\n    }\n    knownHard.add(base);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base) || cache?.get(base) === base) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        break;\n      }\n      continue;\n    }\n\n    let resolvedLink;\n    const maybeCachedResolved = cache?.get(base);\n    if (maybeCachedResolved) {\n      resolvedLink = maybeCachedResolved;\n    } else {\n      // Use stats array directly to avoid creating an fs.Stats instance just\n      // for our internal use.\n\n      const stats = binding.lstat(base\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (stats === undefined) {\n        return;\n      }\n\n      if (!isFileType(stats\x2C S_IFLNK)) {\n        knownHard.add(base);\n        cache?.set(base\x2C base);\n        continue;\n      }\n\n      // Read the link if it wasn't read before\n      // dev/ino always return 0 on windows\x2C so skip the check.\n      let linkTarget = null;\n      let id;\n      if (!isWindows) {\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\n        id = `${dev}:${ino}`;\n        if (seenLinks.has(id)) {\n          linkTarget = seenLinks.get(id);\n        }\n      }\n      if (linkTarget === null) {\n        binding.stat(base\x2C false\x2C undefined\x2C true);\n        linkTarget = binding.readlink(base\x2C undefined);\n      }\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\n\n      cache?.set(base\x2C resolvedLink);\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\n    }\n\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n\n    // Skip over roots\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      const out = binding.lstat(base\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\n      if (out === undefined) {\n        return;\n      }\n      knownHard.add(base);\n    }\n  }\n\n  cache?.set(original\x2C p);\n  return encodeRealpathResult(p\x2C options);\n}\n\n/**\n * Returns the resolved pathname.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @returns {string | Buffer}\n */\nrealpathSync.native = (path\x2C options) => {\n  options = getOptions(options);\n  return binding.realpath(\n    getValidatedPath(path)\x2C\n    options.encoding\x2C\n  );\n};\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} p\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nfunction realpath(p\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n  } else {\n    validateFunction(callback\x2C 'cb');\n  }\n  options = getOptions(options);\n  p = toPathIfFileURL(p);\n\n  if (typeof p !== 'string') {\n    p += '';\n  }\n  validatePath(p);\n  p = pathModule.resolve(p);\n\n  const seenLinks = new SafeMap();\n  const knownHard = new SafeSet();\n\n  // Current character position in p\n  let pos;\n  // The partial path so far\x2C including a trailing slash if any\n  let current;\n  // The partial path without a trailing slash (except when pointing at a root)\n  let base;\n  // The partial path scanned in the previous round\x2C with slash\n  let previous;\n\n  current = base = splitRoot(p);\n  pos = current.length;\n\n  // On windows\x2C check that the root exists. On unix there is no need.\n  if (isWindows && !knownHard.has(base)) {\n    fs.lstat(base\x2C (err) => {\n      if (err) return callback(err);\n      knownHard.add(base);\n      LOOP();\n    });\n  } else {\n    process.nextTick(LOOP);\n  }\n\n  // Walk down the path\x2C swapping out linked path parts for their real\n  // values\n  function LOOP() {\n    // Stop if scanned past end of path\n    if (pos >= p.length) {\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\n    }\n\n    // find the next part\n    const result = nextPart(p\x2C pos);\n    previous = current;\n    if (result === -1) {\n      const last = StringPrototypeSlice(p\x2C pos);\n      current += last;\n      base = previous + last;\n      pos = p.length;\n    } else {\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\n      pos = result + 1;\n    }\n\n    // Continue if not a symlink\x2C break if a pipe/socket\n    if (knownHard.has(base)) {\n      if (isFileType(statValues\x2C S_IFIFO) ||\n          isFileType(statValues\x2C S_IFSOCK)) {\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\n      }\n      return process.nextTick(LOOP);\n    }\n\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\n  }\n\n  function gotStat(err\x2C stats) {\n    if (err) return callback(err);\n\n    // If not a symlink\x2C skip to the next path part\n    if (!stats.isSymbolicLink()) {\n      knownHard.add(base);\n      return process.nextTick(LOOP);\n    }\n\n    // Stat & read the link if not read before.\n    // Call `gotTarget()` as soon as the link target is known.\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\n    let id;\n    if (!isWindows) {\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\n      id = `${dev}:${ino}`;\n      if (seenLinks.has(id)) {\n        return gotTarget(null\x2C seenLinks.get(id));\n      }\n    }\n    fs.stat(base\x2C (err) => {\n      if (err) return callback(err);\n\n      fs.readlink(base\x2C (err\x2C target) => {\n        if (!isWindows) seenLinks.set(id\x2C target);\n        gotTarget(err\x2C target);\n      });\n    });\n  }\n\n  function gotTarget(err\x2C target) {\n    if (err) return callback(err);\n\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // Resolve the link\x2C then start over\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\n    current = base = splitRoot(p);\n    pos = current.length;\n\n    // On windows\x2C check that the root exists. On unix there is no need.\n    if (isWindows && !knownHard.has(base)) {\n      fs.lstat(base\x2C (err) => {\n        if (err) return callback(err);\n        knownHard.add(base);\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n}\n\n/**\n * Asynchronously computes the canonical pathname by\n * resolving `.`\x2C `..` and symbolic links.\n * @param {string | Buffer | URL} path\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   resolvedPath?: string | Buffer\n *   ) => any} callback\n * @returns {void}\n */\nrealpath.native = (path\x2C options\x2C callback) => {\n  callback = makeCallback(callback || options);\n  options = getOptions(options);\n  path = getValidatedPath(path);\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.realpath(path\x2C options.encoding\x2C req);\n};\n\n/**\n * Creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @param {(\n *   err?: Error\x2C\n *   directory?: string\n *   ) => any} callback\n * @returns {void}\n */\nfunction mkdtemp(prefix\x2C options\x2C callback) {\n  callback = makeCallback(typeof options === 'function' ? options : callback);\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {string}\n */\nfunction mkdtempSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n  return binding.mkdtemp(prefix\x2C options.encoding);\n}\n\n/**\n * Synchronously creates a unique temporary directory.\n * The returned value is a disposable object which removes the\n * directory and its contents when disposed.\n * @param {string | Buffer | URL} prefix\n * @param {string | { encoding?: string; }} [options]\n * @returns {object} A disposable object with a "path" property.\n */\nfunction mkdtempDisposableSync(prefix\x2C options) {\n  options = getOptions(options);\n\n  prefix = getValidatedPath(prefix\x2C 'prefix');\n  warnOnNonPortableTemplate(prefix);\n\n  const path = binding.mkdtemp(prefix\x2C options.encoding);\n  // Stash the full path in case of process.chdir()\n  const fullPath = pathModule.resolve(process.cwd()\x2C path);\n\n  const remove = () => {\n    binding.rmSync(fullPath\x2C 0 /* maxRetries */\x2C true /* recursive */\x2C 100 /* retryDelay */);\n  };\n  return {\n    path\x2C\n    remove\x2C\n    [SymbolDispose]() {\n      remove();\n    }\x2C\n  };\n}\n\n/**\n * Asynchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\n  if (typeof mode === 'function') {\n    callback = mode;\n    mode = 0;\n  }\n\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  callback = makeCallback(callback);\n\n  const req = new FSReqCallback();\n  req.oncomplete = callback;\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\n}\n\n/**\n * Synchronously copies `src` to `dest`. By\n * default\x2C `dest` is overwritten if it already exists.\n * @param {string | Buffer | URL} src\n * @param {string | Buffer | URL} dest\n * @param {number} [mode]\n * @returns {void}\n */\nfunction copyFileSync(src\x2C dest\x2C mode) {\n  binding.copyFile(\n    getValidatedPath(src\x2C 'src')\x2C\n    getValidatedPath(dest\x2C 'dest')\x2C\n    mode\x2C\n  );\n}\n\n/**\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @param {(err?: Error) => any} callback\n * @returns {void}\n */\nfunction cp(src\x2C dest\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n  options = validateCpOptions(options);\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  lazyLoadCp();\n  cpFn(src\x2C dest\x2C options\x2C callback);\n}\n\n/**\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\n * symlink. The contents of directories will be copied recursively.\n * @param {string | URL} src\n * @param {string | URL} dest\n * @param {object} [options]\n * @returns {void}\n */\nfunction cpSync(src\x2C dest\x2C options) {\n  options = validateCpOptions(options);\n  src = getValidatedPath(src\x2C 'src');\n  dest = getValidatedPath(dest\x2C 'dest');\n  lazyLoadCp();\n  cpSyncFn(src\x2C dest\x2C options);\n}\n\nfunction lazyLoadStreams() {\n  if (!ReadStream) {\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\n    FileReadStream = ReadStream;\n    FileWriteStream = WriteStream;\n  }\n}\n\n/**\n * Creates a readable stream with a default `highWaterMark`\n * of 64 KiB.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   end?: number;\n *   highWaterMark?: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   }} [options]\n * @returns {ReadStream}\n */\nfunction createReadStream(path\x2C options) {\n  lazyLoadStreams();\n  return new ReadStream(path\x2C options);\n}\n\n/**\n * Creates a write stream.\n * @param {string | Buffer | URL} path\n * @param {string | {\n *   flags?: string;\n *   encoding?: string;\n *   fd?: number | FileHandle;\n *   mode?: number;\n *   autoClose?: boolean;\n *   emitClose?: boolean;\n *   start: number;\n *   fs?: object | null;\n *   signal?: AbortSignal | null;\n *   highWaterMark?: number;\n *   flush?: boolean;\n *   }} [options]\n * @returns {WriteStream}\n */\nfunction createWriteStream(path\x2C options) {\n  lazyLoadStreams();\n  return new WriteStream(path\x2C options);\n}\n\nconst lazyGlob = getLazy(() => require('internal/fs/glob').Glob);\n\nfunction glob(pattern\x2C options\x2C callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = undefined;\n  }\n  callback = makeCallback(callback);\n\n  const Glob = lazyGlob();\n  PromisePrototypeThen(\n    ArrayFromAsync(new Glob(pattern\x2C options).glob())\x2C\n    (res) => callback(null\x2C res)\x2C\n    callback\x2C\n  );\n}\n\nfunction globSync(pattern\x2C options) {\n  const Glob = lazyGlob();\n  return new Glob(pattern\x2C options).globSync();\n}\n\n\nmodule.exports = fs = {\n  appendFile\x2C\n  appendFileSync\x2C\n  access\x2C\n  accessSync\x2C\n  chown\x2C\n  chownSync\x2C\n  chmod\x2C\n  chmodSync\x2C\n  close\x2C\n  closeSync\x2C\n  copyFile\x2C\n  copyFileSync\x2C\n  cp\x2C\n  cpSync\x2C\n  createReadStream\x2C\n  createWriteStream\x2C\n  exists\x2C\n  existsSync\x2C\n  fchown\x2C\n  fchownSync\x2C\n  fchmod\x2C\n  fchmodSync\x2C\n  fdatasync\x2C\n  fdatasyncSync\x2C\n  fstat\x2C\n  fstatSync\x2C\n  fsync\x2C\n  fsyncSync\x2C\n  ftruncate\x2C\n  ftruncateSync\x2C\n  futimes\x2C\n  futimesSync\x2C\n  glob\x2C\n  globSync\x2C\n  lchown\x2C\n  lchownSync\x2C\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\n  link\x2C\n  linkSync\x2C\n  lstat\x2C\n  lstatSync\x2C\n  lutimes\x2C\n  lutimesSync\x2C\n  mkdir\x2C\n  mkdirSync\x2C\n  mkdtemp\x2C\n  mkdtempSync\x2C\n  mkdtempDisposableSync\x2C\n  open\x2C\n  openSync\x2C\n  openAsBlob\x2C\n  readdir\x2C\n  readdirSync\x2C\n  read\x2C\n  readSync\x2C\n  readv\x2C\n  readvSync\x2C\n  readFile\x2C\n  readFileSync\x2C\n  readlink\x2C\n  readlinkSync\x2C\n  realpath\x2C\n  realpathSync\x2C\n  rename\x2C\n  renameSync\x2C\n  rm\x2C\n  rmSync\x2C\n  rmdir\x2C\n  rmdirSync\x2C\n  stat\x2C\n  statfs\x2C\n  statSync\x2C\n  statfsSync\x2C\n  symlink\x2C\n  symlinkSync\x2C\n  truncate\x2C\n  truncateSync\x2C\n  unwatchFile\x2C\n  unlink\x2C\n  unlinkSync\x2C\n  utimes\x2C\n  utimesSync\x2C\n  watch\x2C\n  watchFile\x2C\n  writeFile\x2C\n  writeFileSync\x2C\n  write\x2C\n  writeSync\x2C\n  writev\x2C\n  writevSync\x2C\n  Dirent\x2C\n  Stats\x2C\n\n  get ReadStream() {\n    lazyLoadStreams();\n    return ReadStream;\n  }\x2C\n\n  set ReadStream(val) {\n    ReadStream = val;\n  }\x2C\n\n  get WriteStream() {\n    lazyLoadStreams();\n    return WriteStream;\n  }\x2C\n\n  set WriteStream(val) {\n    WriteStream = val;\n  }\x2C\n\n  // Legacy names... these have to be separate because of how graceful-fs\n  // (and possibly other) modules monkey patch the values.\n  get FileReadStream() {\n    lazyLoadStreams();\n    return FileReadStream;\n  }\x2C\n\n  set FileReadStream(val) {\n    FileReadStream = val;\n  }\x2C\n\n  get FileWriteStream() {\n    lazyLoadStreams();\n    return FileWriteStream;\n  }\x2C\n\n  set FileWriteStream(val) {\n    FileWriteStream = val;\n  }\x2C\n\n  // For tests\n  _toUnixTimestamp: toUnixTimestamp\x2C\n};\n\ndefineLazyProperties(\n  fs\x2C\n  'internal/fs/dir'\x2C\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\n);\n\nObjectDefineProperties(fs\x2C {\n  F_OK: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: deprecate(\n      function get() {\n        return F_OK || 0;\n      }\x2C\n      'fs.F_OK is deprecated\x2C use fs.constants.F_OK instead'\x2C\n      'DEP0176'\x2C\n    )\x2C\n  }\x2C\n  R_OK: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: deprecate(\n      function get() {\n        return R_OK || 0;\n      }\x2C\n      'fs.R_OK is deprecated\x2C use fs.constants.R_OK instead'\x2C\n      'DEP0176'\x2C\n    )\x2C\n  }\x2C\n  W_OK: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: deprecate(\n      function get() {\n        return W_OK || 0;\n      }\x2C\n      'fs.W_OK is deprecated\x2C use fs.constants.W_OK instead'\x2C\n      'DEP0176'\x2C\n    )\x2C\n  }\x2C\n  X_OK: {\n    __proto__: null\x2C\n    enumerable: false\x2C\n    get: deprecate(\n      function get() {\n        return X_OK || 0;\n      }\x2C\n      'fs.X_OK is deprecated\x2C use fs.constants.X_OK instead'\x2C\n      'DEP0176'\x2C\n    )\x2C\n  }\x2C\n  constants: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value: constants\x2C\n  }\x2C\n  promises: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n    get() {\n      promises ??= require('internal/fs/promises').exports;\n      return promises;\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x148005aa0,48,69925,69983,,,
code-creation,JS,10,43166,0x148005ba0,344,isFileType node:fs:197:20,0xb1c4a41c320,^
code-source-info,0x148005ba0,48,4901,5142,,,
code-creation,JS,10,43166,0x148005d20,5736,realpathSync node:fs:2695:22,0xb1c4a423340,^
code-source-info,0x148005d20,48,70178,73848,,,
tick,0x19392e988,43166,0,0x0,9,0x3231531c640f,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
tick,0x19383d3f4,43208,0,0x0,9,0x3231531c640f,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,43208,0x277c96e92b80,5, /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x1db37b2515b8,~
script-source,111,/opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js,'use strict'\nconst net = require('net')\n\nlet isWorker = false\ntry {\n  // Skip redirecting stdout in Worker threads.\n  isWorker = !require('worker_threads').isMainThread\n} catch (e) {}\n\nif (!isWorker) {\n  const socket = new net.Socket({\n    fd: 3\x2C\n    readable: false\x2C\n    writable: true\n  })\n  Object.defineProperty(process\x2C 'stdout'\x2C {\n    configurable: true\x2C\n    enumerable: true\x2C\n    get: () => socket\n  })\n  Object.defineProperty(process.stdout\x2C 'fd'\x2C {\n    value: socket._handle.fd\n  })\n}\n
code-source-info,0x277c96e92b80,111,0,494,C0O0C4O494,,
code-creation,JS,9,43250,0x277c96e92cb8,157, /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:1:1,0x1db37b251708,~
code-source-info,0x277c96e92cb8,111,0,494,C0O25C3O25C8O56C13O118C16O130C21O155C30O127C42O185C53O227C65O219C70O219C72O294C76O301C81O316C93O392C101O301C106O412C110O419C115O434C119O442C135O476C140O484C148O419C156O493,,
code-creation,Eval,9,43500,0x277c96e92e00,5, node:worker_threads:1:1,0x1db37b251f60,~
script-source,112,node:worker_threads,'use strict';\n\nconst {\n  isInternalThread\x2C\n  isMainThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  threadId\x2C\n  Worker\x2C\n} = require('internal/worker');\n\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUncloneable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  BroadcastChannel\x2C\n} = require('internal/worker/io');\n\nconst {\n  postMessageToThread\x2C\n} = require('internal/worker/messaging');\n\nconst {\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n} = require('internal/buffer');\n\nconst { locks } = require('internal/locks');\n\nmodule.exports = {\n  isInternalThread\x2C\n  isMainThread\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  markAsUncloneable\x2C\n  markAsUntransferable\x2C\n  isMarkedAsUntransferable\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort\x2C\n  resourceLimits\x2C\n  postMessageToThread\x2C\n  threadId\x2C\n  SHARE_ENV\x2C\n  Worker\x2C\n  parentPort: null\x2C\n  workerData: null\x2C\n  BroadcastChannel\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  locks\x2C\n};\n
code-source-info,0x277c96e92e00,112,0,977,C0O0C4O977,,
code-creation,JS,9,43541,0x277c96e92f38,264, node:worker_threads:1:1,0x1db37b252030,~
code-source-info,0x277c96e92f38,112,0,977,C0O160C4O160C10O25C15O45C20O61C25O74C30O92C35O114C40O136C45O148C50O327C54O327C60O199C65O214C70O232C75O253C80O281C85O305C90O394C94O394C100O369C105O497C109O497C115O443C120O467C126O544C130O544C136O534C142O572C150O593C156O613C162O629C168O644C174O662C180O683C186O707C192O735C198O763C204O787C210O805C216O828C222O840C228O853C234O903C240O923C246O945C252O967C258O587C263O976,,
code-creation,Eval,9,43791,0x277c96e93118,5, node:internal/worker:1:1,0x1db37b253ec8,~
script-source,113,node:internal/worker,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  AtomicsAdd\x2C\n  Float64Array\x2C\n  FunctionPrototypeBind\x2C\n  MathMax\x2C\n  ObjectEntries\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  ReflectApply\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  String\x2C\n  StringPrototypeTrim\x2C\n  Symbol\x2C\n  SymbolAsyncDispose\x2C\n  SymbolFor\x2C\n  TypedArrayPrototypeFill\x2C\n  Uint32Array\x2C\n  globalThis: { SharedArrayBuffer }\x2C\n} = primordials;\n\nconst EventEmitter = require('events');\nconst assert = require('internal/assert');\nconst path = require('path');\nconst {\n  internalEventLoopUtilization\x2C\n} = require('internal/perf/event_loop_utilization');\n\nconst errorCodes = require('internal/errors').codes;\nconst {\n  ERR_WORKER_NOT_RUNNING\x2C\n  ERR_WORKER_PATH\x2C\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\n  ERR_INVALID_ARG_TYPE\x2C\n  ERR_INVALID_ARG_VALUE\x2C\n} = errorCodes;\n\nconst workerIo = require('internal/worker/io');\nconst {\n  drainMessagePort\x2C\n  receiveMessageOnPort\x2C\n  MessageChannel\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n} = workerIo;\nconst { createMainThreadPort\x2C destroyMainThreadPort } = require('internal/worker/messaging');\nconst { deserializeError } = require('internal/error_serdes');\nconst { fileURLToPath\x2C isURL\x2C pathToFileURL } = require('internal/url');\nconst { kEmptyObject } = require('internal/util');\nconst { validateArray\x2C validateString } = require('internal/validators');\nconst {\n  throwIfBuildingSnapshot\x2C\n} = require('internal/v8/startup_snapshot');\nconst {\n  ownsProcessState\x2C\n  isMainThread\x2C\n  isInternalThread\x2C\n  resourceLimits: resourceLimitsRaw\x2C\n  threadId\x2C\n  Worker: WorkerImpl\x2C\n  kMaxYoungGenerationSizeMb\x2C\n  kMaxOldGenerationSizeMb\x2C\n  kCodeRangeSizeMb\x2C\n  kStackSizeMb\x2C\n  kTotalResourceLimitCount\x2C\n} = internalBinding('worker');\n\nconst kHandle = Symbol('kHandle');\nconst kPublicPort = Symbol('kPublicPort');\nconst kDispose = Symbol('kDispose');\nconst kOnExit = Symbol('kOnExit');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\nconst kParentSideStdio = Symbol('kParentSideStdio');\nconst kLoopStartTime = Symbol('kLoopStartTime');\nconst kIsInternal = Symbol('kIsInternal');\nconst kIsOnline = Symbol('kIsOnline');\n\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\n  debug = fn;\n});\n\nconst dc = require('diagnostics_channel');\nconst workerThreadsChannel = dc.channel('worker_threads');\n\nlet cwdCounter;\n\nconst environmentData = new SafeMap();\n\n// SharedArrayBuffers can be disabled with --enable-sharedarraybuffer-per-context.\nif (isMainThread && SharedArrayBuffer !== undefined) {\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\n  const originalChdir = process.chdir;\n  process.chdir = function(path) {\n    AtomicsAdd(cwdCounter\x2C 0\x2C 1);\n    originalChdir(path);\n  };\n}\n\nfunction setEnvironmentData(key\x2C value) {\n  if (value === undefined)\n    environmentData.delete(key);\n  else\n    environmentData.set(key\x2C value);\n}\n\nfunction getEnvironmentData(key) {\n  return environmentData.get(key);\n}\n\nfunction assignEnvironmentData(data) {\n  if (data === undefined) return;\n  data.forEach((value\x2C key) => {\n    environmentData.set(key\x2C value);\n  });\n}\n\nclass Worker extends EventEmitter {\n  constructor(filename\x2C options = kEmptyObject) {\n    throwIfBuildingSnapshot('Creating workers');\n    super();\n    const isInternal = arguments[2] === kIsInternal;\n    debug(\n      `[${threadId}] create new worker`\x2C\n      filename\x2C\n      options\x2C\n      `isInternal: ${isInternal}`\x2C\n    );\n    if (options.execArgv)\n      validateArray(options.execArgv\x2C 'options.execArgv');\n\n    let argv;\n    if (options.argv) {\n      validateArray(options.argv\x2C 'options.argv');\n      argv = ArrayPrototypeMap(options.argv\x2C String);\n    }\n\n    let url\x2C doEval;\n    if (isInternal) {\n      doEval = 'internal';\n      url = `node:${filename}`;\n    } else if (options.eval) {\n      if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_VALUE(\n          'options.eval'\x2C\n          options.eval\x2C\n          'must be false when \\'filename\\' is not a string'\x2C\n        );\n      }\n      url = null;\n      doEval = 'classic';\n    } else if (isURL(filename) && filename.protocol === 'data:') {\n      url = null;\n      doEval = 'data-url';\n      filename = `${filename}`;\n    } else {\n      doEval = false;\n      if (isURL(filename)) {\n        url = filename;\n        filename = fileURLToPath(filename);\n      } else if (typeof filename !== 'string') {\n        throw new ERR_INVALID_ARG_TYPE(\n          'filename'\x2C\n          ['string'\x2C 'URL']\x2C\n          filename\x2C\n        );\n      } else if (path.isAbsolute(filename) ||\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\n        filename = path.resolve(filename);\n        url = pathToFileURL(filename);\n      } else {\n        throw new ERR_WORKER_PATH(filename);\n      }\n    }\n\n    let env;\n    if (typeof options.env === 'object' && options.env !== null) {\n      env = { __proto__: null };\n      ArrayPrototypeForEach(\n        ObjectEntries(options.env)\x2C\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\n      );\n    } else if (options.env == null) {\n      env = process.env;\n    } else if (options.env !== SHARE_ENV) {\n      throw new ERR_INVALID_ARG_TYPE(\n        'options.env'\x2C\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\n        options.env);\n    }\n\n    let name = 'WorkerThread';\n    if (options.name) {\n      validateString(options.name\x2C 'options.name');\n      name = StringPrototypeTrim(options.name);\n    }\n\n    debug('instantiating Worker.'\x2C `url: ${url}`\x2C `doEval: ${doEval}`);\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\n    this[kHandle] = new WorkerImpl(url\x2C\n                                   env === process.env ? null : env\x2C\n                                   options.execArgv\x2C\n                                   parseResourceLimits(options.resourceLimits)\x2C\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\n                                   isInternal\x2C\n                                   name);\n    if (this[kHandle].invalidExecArgv) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\n    }\n    if (this[kHandle].invalidNodeOptions) {\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\n    }\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\n    };\n    this[kPort] = this[kHandle].messagePort;\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\n    this[kPort].start();\n    this[kPort].unref();\n    this[kPort][kWaitingStreams] = 0;\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\n\n    let stdin = null;\n    if (options.stdin)\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\n    if (!options.stdout) {\n      stdout[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stdout\x2C process.stdout);\n    }\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\n    if (!options.stderr) {\n      stderr[kIncrementsPortRef] = false;\n      pipeWithoutWarning(stderr\x2C process.stderr);\n    }\n\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\n\n    const mainThreadPortToWorker = createMainThreadPort(this.threadId);\n    const {\n      port1: publicPortToParent\x2C\n      port2: publicPortToWorker\x2C\n    } = new MessageChannel();\n    const transferList = [mainThreadPortToWorker\x2C publicPortToWorker];\n    // If transferList is provided.\n    if (options.transferList)\n      ArrayPrototypePush(transferList\x2C\n                         ...new SafeArrayIterator(options.transferList));\n\n    this[kPublicPort] = publicPortToParent;\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\n    });\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\n    this[kPort].postMessage({\n      argv\x2C\n      type: messageTypes.LOAD_SCRIPT\x2C\n      filename\x2C\n      doEval\x2C\n      isInternal\x2C\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\n      workerData: options.workerData\x2C\n      environmentData\x2C\n      hasStdin: !!options.stdin\x2C\n      publicPort: publicPortToWorker\x2C\n      mainThreadPort: mainThreadPortToWorker\x2C\n    }\x2C transferList);\n    // Use this to cache the Worker's loopStart value once available.\n    this[kLoopStartTime] = -1;\n    this[kIsOnline] = false;\n    this.performance = {\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\n    };\n    // Actually start the new thread now that everything is in place.\n    this[kHandle].startThread();\n\n    process.nextTick(() => process.emit('worker'\x2C this));\n    if (workerThreadsChannel.hasSubscribers) {\n      workerThreadsChannel.publish({\n        worker: this\x2C\n      });\n    }\n  }\n\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\n    drainMessagePort(this[kPublicPort]);\n    drainMessagePort(this[kPort]);\n    destroyMainThreadPort(this.threadId);\n    this.removeAllListeners('message');\n    this.removeAllListeners('messageerrors');\n    this[kPublicPort].unref();\n    this[kPort].unref();\n    this[kDispose]();\n    if (customErr) {\n      debug(`[${threadId}] failing with custom error ${customErr} \\\n        and with reason ${customErrReason}`);\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\n    }\n    this.emit('exit'\x2C code);\n    this.removeAllListeners();\n  }\n\n  [kOnCouldNotSerializeErr]() {\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\n  }\n\n  [kOnErrorMessage](serialized) {\n    // This is what is called for uncaught exceptions.\n    const error = deserializeError(serialized);\n    this.emit('error'\x2C error);\n  }\n\n  [kOnMessage](message) {\n    switch (message.type) {\n      case messageTypes.UP_AND_RUNNING:\n        this[kIsOnline] = true;\n        return this.emit('online');\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\n        return this[kOnCouldNotSerializeErr]();\n      case messageTypes.ERROR_MESSAGE:\n        return this[kOnErrorMessage](message.error);\n      case messageTypes.STDIO_PAYLOAD:\n      {\n        const { stream\x2C chunks } = message;\n        const readable = this[kParentSideStdio][stream];\n        // This is a hot path\x2C use a for(;;) loop\n        for (let i = 0; i < chunks.length; i++) {\n          const { chunk\x2C encoding } = chunks[i];\n          readable.push(chunk\x2C encoding);\n        }\n        return;\n      }\n      case messageTypes.STDIO_WANTS_MORE_DATA:\n      {\n        const { stream } = message;\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\n      }\n    }\n\n    assert.fail(`Unknown worker message type ${message.type}`);\n  }\n\n  [kDispose]() {\n    this[kHandle].onexit = null;\n    this[kHandle] = null;\n    this[kPort] = null;\n    this[kPublicPort] = null;\n\n    const { stdout\x2C stderr } = this[kParentSideStdio];\n\n    if (!stdout.readableEnded) {\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\n      stdout.push(null);\n    }\n    if (!stderr.readableEnded) {\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\n      stderr.push(null);\n    }\n  }\n\n  postMessage(...args) {\n    if (this[kPublicPort] === null) return;\n\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\n  }\n\n  terminate(callback) {\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\n\n    this.ref();\n\n    if (typeof callback === 'function') {\n      process.emitWarning(\n        'Passing a callback to worker.terminate() is deprecated. ' +\n        'It returns a Promise instead.'\x2C\n        'DeprecationWarning'\x2C 'DEP0132');\n      if (this[kHandle] === null) return PromiseResolve();\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\n    }\n\n    if (this[kHandle] === null) return PromiseResolve();\n\n    this[kHandle].stopThread();\n\n    // Do not use events.once() here\x2C because the 'exit' event will always be\n    // emitted regardless of any errors\x2C and the point is to only resolve\n    // once the thread has actually stopped.\n    return new Promise((resolve) => {\n      this.once('exit'\x2C resolve);\n    });\n  }\n\n  async [SymbolAsyncDispose]() {\n    await this.terminate();\n  }\n\n  ref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].ref();\n    this[kPublicPort].ref();\n  }\n\n  unref() {\n    if (this[kHandle] === null) return;\n\n    this[kHandle].unref();\n    this[kPublicPort].unref();\n  }\n\n  get threadId() {\n    if (this[kHandle] === null) return -1;\n\n    return this[kHandle].threadId;\n  }\n\n  get stdin() {\n    return this[kParentSideStdio].stdin;\n  }\n\n  get stdout() {\n    return this[kParentSideStdio].stdout;\n  }\n\n  get stderr() {\n    return this[kParentSideStdio].stderr;\n  }\n\n  get resourceLimits() {\n    if (this[kHandle] === null) return {};\n\n    return makeResourceLimits(this[kHandle].getResourceLimits());\n  }\n\n  getHeapSnapshot(options) {\n    const {\n      HeapSnapshotStream\x2C\n      getHeapSnapshotOptions\x2C\n    } = require('internal/heap_utils');\n    const optionsArray = getHeapSnapshotOptions(options);\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\n    return new Promise((resolve\x2C reject) => {\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\n      heapSnapshotTaker.ondone = (handle) => {\n        resolve(new HeapSnapshotStream(handle));\n      };\n    });\n  }\n\n  getHeapStatistics() {\n    const taker = this[kHandle]?.getHeapStatistics();\n\n    return new Promise((resolve\x2C reject) => {\n      if (!taker) return reject(new ERR_WORKER_NOT_RUNNING());\n      taker.ondone = (handle) => {\n        resolve(handle);\n      };\n    });\n  }\n}\n\n/**\n * A worker which has an internal module for entry point (e.g. internal/module/esm/worker).\n * Internal workers bypass the permission model.\n */\nclass InternalWorker extends Worker {\n  constructor(filename\x2C options) {\n    super(filename\x2C options\x2C kIsInternal);\n  }\n\n  receiveMessageSync() {\n    return receiveMessageOnPort(this[kPublicPort]);\n  }\n}\n\nfunction pipeWithoutWarning(source\x2C dest) {\n  const sourceMaxListeners = source._maxListeners;\n  const destMaxListeners = dest._maxListeners;\n  source.setMaxListeners(Infinity);\n  dest.setMaxListeners(Infinity);\n\n  source.pipe(dest);\n\n  source._maxListeners = sourceMaxListeners;\n  dest._maxListeners = destMaxListeners;\n}\n\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\nfunction parseResourceLimits(obj) {\n  const ret = resourceLimitsArray;\n  TypedArrayPrototypeFill(ret\x2C -1);\n  if (typeof obj !== 'object' || obj === null) return ret;\n\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\n  if (typeof obj.codeRangeSizeMb === 'number')\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\n  if (typeof obj.stackSizeMb === 'number')\n    ret[kStackSizeMb] = obj.stackSizeMb;\n  return ret;\n}\n\nfunction makeResourceLimits(float64arr) {\n  return {\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\n  };\n}\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\n  // has had a chance to turn. So it will be impossible to read the ELU of\n  // a worker thread immediately after it's been created.\n  if (!this[kIsOnline] || !this[kHandle]) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  // Cache loopStart\x2C since it's only written to once.\n  if (this[kLoopStartTime] === -1) {\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\n    if (this[kLoopStartTime] === -1)\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  return internalEventLoopUtilization(\n    this[kLoopStartTime]\x2C\n    this[kHandle].loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nmodule.exports = {\n  ownsProcessState\x2C\n  kIsOnline\x2C\n  isMainThread\x2C\n  isInternalThread\x2C\n  SHARE_ENV\x2C\n  resourceLimits:\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\n  setEnvironmentData\x2C\n  getEnvironmentData\x2C\n  assignEnvironmentData\x2C\n  threadId\x2C\n  InternalWorker\x2C\n  Worker\x2C\n};\n
code-source-info,0x277c96e93118,113,0,16848,C0O0C4O16848,,
code-creation,JS,9,44250,0x277c96e93870,1378, node:internal/worker:1:1,0x1db37b254a70,~
code-source-info,0x277c96e
tick,0x1937c897c,44291,0,0x0,9,0x148000544,0x1480002b4,0x277c96e92f3c,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e92cc8,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,44583,0x277c96e93ff8,5, node:internal/perf/event_loop_utilization:1:1,0x1db37b2563d8,~
script-source,114,node:internal/perf/event_loop_utilization,'use strict';\n\nconst {\n  constants: {\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\n  }\x2C\n  loopIdleTime\x2C\n  milestones\x2C\n} = internalBinding('performance');\n\nfunction eventLoopUtilization(util1\x2C util2) {\n  // Get the original milestone timestamps that calculated from the beginning\n  // of the process.\n  return internalEventLoopUtilization(\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\n    loopIdleTime()\x2C\n    util1\x2C\n    util2\x2C\n  );\n}\n\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\n  if (loopStart <= 0) {\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\n  }\n\n  if (util2) {\n    const idle = util1.idle - util2.idle;\n    const active = util1.active - util2.active;\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\n  }\n\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\n  // and offset it by the loopStart time (which is also calculated from the\n  // beginning of the process).\n  const now = process.hrtime();\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\n\n  if (!util1) {\n    return {\n      idle: loopIdleTime\x2C\n      active\x2C\n      utilization: active / (loopIdleTime + active)\x2C\n    };\n  }\n\n  const idleDelta = loopIdleTime - util1.idle;\n  const activeDelta = active - util1.active;\n  const utilization = activeDelta / (idleDelta + activeDelta);\n  return {\n    idle: idleDelta\x2C\n    active: activeDelta\x2C\n    utilization\x2C\n  };\n}\n\nmodule.exports = {\n  internalEventLoopUtilization\x2C\n  eventLoopUtilization\x2C\n};\n
code-source-info,0x277c96e93ff8,114,0,1527,C0O0C4O1527,,
code-creation,JS,9,44625,0x277c96e940f8,85, node:internal/perf/event_loop_utilization:1:1,0x1db37b2564f8,~
code-source-info,0x277c96e940f8,114,0,1527,C0O0C29O120C32O120C37O36C42O42C48O88C54O104C60O1449C67O1470C73O1502C79O1464C84O1526,,
code-creation,Eval,9,44791,0x277c96e941e0,5, node:internal/worker/io:1:1,0x1db37b257d40,~
script-source,115,node:internal/worker/io,'use strict';\n\nconst {\n  Array\x2C\n  FunctionPrototypeBind\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptors\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectSetPrototypeOf\x2C\n  ObjectValues\x2C\n  ReflectApply\x2C\n  Symbol\x2C\n  SymbolFor\x2C\n} = primordials;\n\nconst {\n  assignFunctionName\x2C\n  kEnumerableProperty\x2C\n  setOwnProperty\x2C\n} = require('internal/util');\n\nconst {\n  handle_onclose: handleOnCloseSymbol\x2C\n  oninit: onInitSymbol\x2C\n  no_message_symbol: noMessageSymbol\x2C\n} = internalBinding('symbols');\nconst {\n  privateSymbols: {\n    transfer_mode_private_symbol\x2C\n  }\x2C\n  constants: {\n    kCloneable\x2C\n  }\x2C\n} = internalBinding('util');\nconst {\n  MessagePort\x2C\n  MessageChannel\x2C\n  broadcastChannel\x2C\n  drainMessagePort\x2C\n  moveMessagePortToContext\x2C\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\n  stopMessagePort\x2C\n  DOMException\x2C\n} = internalBinding('messaging');\nconst {\n  getEnvMessagePort\x2C\n} = internalBinding('worker');\n\nconst { Readable\x2C Writable } = require('stream');\nconst {\n  Event\x2C\n  EventTarget\x2C\n  NodeEventTarget\x2C\n  defineEventHandler\x2C\n  initNodeEventTarget\x2C\n  kCreateEvent\x2C\n  kNewListener\x2C\n  kRemoveListener\x2C\n} = require('internal/event_target');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  codes: {\n    ERR_INVALID_THIS\x2C\n    ERR_MISSING_ARGS\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst kHandle = Symbol('kHandle');\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\nconst kName = Symbol('kName');\nconst kOnMessage = Symbol('kOnMessage');\nconst kOnMessageError = Symbol('kOnMessageError');\nconst kPort = Symbol('kPort');\nconst kWaitingStreams = Symbol('kWaitingStreams');\nconst kWritableCallback = Symbol('kWritableCallback');\nconst kStartedReading = Symbol('kStartedReading');\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\nconst kCurrentlyReceivingPorts =\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\nconst kType = Symbol('kType');\n\nconst messageTypes = {\n  UP_AND_RUNNING: 'upAndRunning'\x2C\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\n  ERROR_MESSAGE: 'errorMessage'\x2C\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\n  LOAD_SCRIPT: 'loadScript'\x2C\n};\n\n// createFastMessageEvent skips webidl argument validation when the arguments\n// passed are known to be valid.\nlet fastCreateMessageEvent;\nfunction lazyMessageEvent(type\x2C init) {\n  fastCreateMessageEvent ??= require('internal/deps/undici/undici').createFastMessageEvent;\n  return fastCreateMessageEvent(type\x2C init);\n}\n\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\n// not provide methods that are not present in the Browser and not documented\n// on our side (e.g. stopMessagePort).\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\nfor (let i = 0; i < propertiesValues.length; i++) {\n  // We want to use null-prototype objects to not rely on globally mutable\n  // %Object.prototype%.\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\n}\n// Save a copy of the original set of methods as a shallow clone.\nconst MessagePortPrototype = ObjectCreate(\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\n  messagePortPrototypePropertyDescriptors);\n// Set up the new inheritance chain.\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\n// Copy methods that are inherited from HandleWrap\x2C because\n// changing the prototype of MessagePort.prototype implicitly removed them.\nMessagePort.prototype.ref = MessagePortPrototype.ref;\nMessagePort.prototype.unref = MessagePortPrototype.unref;\nMessagePort.prototype.hasRef = function hasRef() {\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n};\n\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\nObjectDefineProperty(\n  MessagePort.prototype\x2C\n  kCreateEvent\x2C\n  {\n    __proto__: null\x2C\n    value: assignFunctionName(kCreateEvent\x2C function(data\x2C type) {\n      if (type !== 'message' && type !== 'messageerror') {\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\n      }\n      const ports = this[kCurrentlyReceivingPorts];\n      this[kCurrentlyReceivingPorts] = undefined;\n      return lazyMessageEvent(type\x2C { data\x2C ports });\n    })\x2C\n    configurable: false\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n  });\n\n// This is called from inside the `MessagePort` constructor.\nfunction oninit() {\n  initNodeEventTarget(this);\n  setupPortReferencing(this\x2C this\x2C 'message');\n  this[kCurrentlyReceivingPorts] = undefined;\n}\n\ndefineEventHandler(MessagePort.prototype\x2C 'message');\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\n\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: true\x2C\n  writable: false\x2C\n  value: oninit\x2C\n});\n\nclass MessagePortCloseEvent extends Event {\n  constructor() {\n    super('close');\n  }\n}\n\n// This is called after the underlying `uv_async_t` has been closed.\nfunction onclose() {\n  this.dispatchEvent(new MessagePortCloseEvent());\n}\n\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: onclose\x2C\n});\n\nMessagePort.prototype.close = function close(cb) {\n  if (typeof cb === 'function')\n    this.once('close'\x2C cb);\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\n};\n\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\n  __proto__: null\x2C\n  enumerable: false\x2C\n  writable: false\x2C\n  value: function inspect() {  // eslint-disable-line func-name-matching\n    let ref;\n    try {\n      // This may throw when `this` does not refer to a native object\x2C\n      // e.g. when accessing the prototype directly.\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\n    } catch { return this; }\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\n                        ref === undefined ? {\n                          active: false\x2C\n                        } : {\n                          active: true\x2C\n                          refed: ref\x2C\n                        }\x2C\n                        this);\n  }\x2C\n});\n\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\n  // Keep track of whether there are any workerMessage listeners:\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\n  // If there are none or all are removed\x2C unref() the channel so the worker\n  // can shutdown gracefully.\n  port.unref();\n  eventEmitter.on('newListener'\x2C function(name) {\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\n  });\n  eventEmitter.on('removeListener'\x2C function(name) {\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\n  });\n  const origNewListener = eventEmitter[kNewListener];\n  setOwnProperty(eventEmitter\x2C kNewListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) newListener(size - 1);\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\n  });\n  const origRemoveListener = eventEmitter[kRemoveListener];\n  setOwnProperty(eventEmitter\x2C kRemoveListener\x2C function(size\x2C type\x2C ...args) {\n    if (type === eventName) removeListener(size);\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\n  });\n\n  function newListener(size) {\n    if (size === 0) {\n      port.ref();\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\n    }\n  }\n\n  function removeListener(size) {\n    if (size === 0) {\n      stopMessagePort(port);\n      port.unref();\n    }\n  }\n}\n\n\nclass ReadableWorkerStdio extends Readable {\n  constructor(port\x2C name) {\n    super();\n    this[kPort] = port;\n    this[kName] = name;\n    this[kIncrementsPortRef] = true;\n    this[kStartedReading] = false;\n    this.on('end'\x2C () => {\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\n        if (--this[kPort][kWaitingStreams] === 0)\n          this[kPort].unref();\n      }\n    });\n  }\n\n  _read() {\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\n      this[kStartedReading] = true;\n      if (this[kPort][kWaitingStreams]++ === 0)\n        this[kPort].ref();\n    }\n\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\n      stream: this[kName]\x2C\n    });\n  }\n}\n\nclass WritableWorkerStdio extends Writable {\n  constructor(port\x2C name) {\n    super({ decodeStrings: false });\n    this[kPort] = port;\n    this[kName] = name;\n    this[kWritableCallback] = null;\n  }\n\n  _writev(chunks\x2C cb) {\n    const toSend = new Array(chunks.length);\n\n    // We avoid .map() because it's a hot path\n    for (let i = 0; i < chunks.length; i++) {\n      const { chunk\x2C encoding } = chunks[i];\n      toSend[i] = { chunk\x2C encoding };\n    }\n\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: toSend\x2C\n    });\n    if (process._exiting) {\n      cb();\n    } else {\n      // Only one writev happens at any given time\x2C\n      // so we can safely overwrite the callback.\n      this[kWritableCallback] = cb;\n      if (this[kPort][kWaitingStreams]++ === 0)\n        this[kPort].ref();\n    }\n  }\n\n  _final(cb) {\n    this[kPort].postMessage({\n      type: messageTypes.STDIO_PAYLOAD\x2C\n      stream: this[kName]\x2C\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\n    });\n    cb();\n  }\n\n  [kStdioWantsMoreDataCallback]() {\n    const cb = this[kWritableCallback];\n    if (cb) {\n      this[kWritableCallback] = null;\n      cb();\n      if (--this[kPort][kWaitingStreams] === 0)\n        this[kPort].unref();\n    }\n  }\n}\n\nfunction createWorkerStdio() {\n  const port = getEnvMessagePort();\n  port[kWaitingStreams] = 0;\n  return {\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\n  };\n}\n\nfunction receiveMessageOnPort(port) {\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\n  if (message === noMessageSymbol) return undefined;\n  return { message };\n}\n\nfunction onMessageEvent(type\x2C data) {\n  this.dispatchEvent(lazyMessageEvent(type\x2C { data }));\n}\n\nfunction isBroadcastChannel(value) {\n  return value?.[kType] === 'BroadcastChannel';\n}\n\nclass BroadcastChannel extends EventTarget {\n  /**\n   * @param {string} name\n   */\n  constructor(name) {\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('name');\n    super();\n    this[kType] = 'BroadcastChannel';\n    this[kName] = `${name}`;\n    this[kHandle] = broadcastChannel(this[kName]);\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\n    this[kOnMessageError] =\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\n    this[kHandle].on('message'\x2C this[kOnMessage]);\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\n  }\n\n  [inspect.custom](depth\x2C options) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (depth < 0)\n      return 'BroadcastChannel';\n\n    const opts = {\n      ...options\x2C\n      depth: options.depth == null ? null : options.depth - 1\x2C\n    };\n\n    return `BroadcastChannel ${inspect({\n      name: this[kName]\x2C\n      active: this[kHandle] !== undefined\x2C\n    }\x2C opts)}`;\n  }\n\n  /**\n   * @type {string}\n   */\n  get name() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    return this[kName];\n  }\n\n  /**\n   * @returns {void}\n   */\n  close() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle] === undefined)\n      return;\n    this[kHandle].off('message'\x2C this[kOnMessage]);\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\n    this[kOnMessage] = undefined;\n    this[kOnMessageError] = undefined;\n    this[kHandle].close();\n    this[kHandle] = undefined;\n  }\n\n  /**\n   *\n   * @param {any} message\n   * @returns {void}\n   */\n  postMessage(message) {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (arguments.length === 0)\n      throw new ERR_MISSING_ARGS('message');\n    if (this[kHandle] === undefined)\n      throw new DOMException('BroadcastChannel is closed.'\x2C 'InvalidStateError');\n    if (this[kHandle].postMessage(message) === undefined)\n      throw new DOMException('Message could not be posted.');\n  }\n\n  // The ref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  ref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].ref();\n    return this;\n  }\n\n  // The unref() method is Node.js specific and not part of the standard\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\n  // Platform APIs with Node.js specific methods but ref and unref\n  // are a bit special.\n  /**\n   * @returns {BroadcastChannel}\n   */\n  unref() {\n    if (!isBroadcastChannel(this))\n      throw new ERR_INVALID_THIS('BroadcastChannel');\n    if (this[kHandle])\n      this[kHandle].unref();\n    return this;\n  }\n}\n\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\n  name: kEnumerableProperty\x2C\n  close: kEnumerableProperty\x2C\n  postMessage: kEnumerableProperty\x2C\n});\n\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\n\nfunction markAsUncloneable(obj) {\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null) {\n    return;\n  }\n  obj[transfer_mode_private_symbol] &= ~kCloneable;\n}\n\nmodule.exports = {\n  drainMessagePort\x2C\n  messageTypes\x2C\n  kPort\x2C\n  kIncrementsPortRef\x2C\n  kWaitingStreams\x2C\n  kStdioWantsMoreDataCallback\x2C\n  markAsUncloneable\x2C\n  moveMessagePortToContext\x2C\n  MessagePort\x2C\n  MessageChannel\x2C\n  receiveMessageOnPort\x2C\n  setupPortReferencing\x2C\n  ReadableWorkerStdio\x2C\n  WritableWorkerStdio\x2C\n  createWorkerStdio\x2C\n  BroadcastChannel\x2C\n};\n
code-source-info,0x277c96e941e0,115,0,14151,C0O0C4O14151,,
code-creation,JS,9,45125,0x277c96e948d8,1420, node:internal/worker/io:1:1,0x1db37b2580e0,~
code-source-info,0x277c96e948d
tick,0x101743174,45208,0,0x0,0,0x148000544,0x1480002b4,0x277c96e93a7b,0x148000610,0x1480002b4,0x277c96e92f3c,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e92cc8,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,Eval,9,45375,0x277c96e950d8,5, node:internal/worker/messaging:1:1,0x1db37b25b738,~
script-source,116,node:internal/worker/messaging,'use strict';\n\nconst {\n  AtomicsNotify\x2C\n  AtomicsStore\x2C\n  AtomicsWaitAsync\x2C\n  Int32Array\x2C\n  SafeMap\x2C\n  globalThis\x2C\n} = primordials;\n\nconst {\n  SharedArrayBuffer\x2C\n} = globalThis;\n\nconst {\n  isMainThread\x2C\n  threadId: currentThreadId\x2C\n} = internalBinding('worker');\n\nconst {\n  codes: {\n    ERR_WORKER_MESSAGING_ERRORED\x2C\n    ERR_WORKER_MESSAGING_FAILED\x2C\n    ERR_WORKER_MESSAGING_SAME_THREAD\x2C\n    ERR_WORKER_MESSAGING_TIMEOUT\x2C\n  }\x2C\n} = require('internal/errors');\n\nconst { MessageChannel } = require('internal/worker/io');\n\nconst { validateNumber } = require('internal/validators');\n\nconst messageTypes = {\n  REGISTER_MAIN_THREAD_PORT: 'registerMainThreadPort'\x2C\n  UNREGISTER_MAIN_THREAD_PORT: 'unregisterMainThreadPort'\x2C\n  SEND_MESSAGE_TO_WORKER: 'sendMessageToWorker'\x2C\n  RECEIVE_MESSAGE_FROM_WORKER: 'receiveMessageFromWorker'\x2C\n};\n\n// This is only populated by main thread and always empty in other threads\nconst threadsPorts = new SafeMap();\n\n// This is only populated in child threads and always undefined in main thread\nlet mainThreadPort;\n\n// SharedArrayBuffer must always be Int32\x2C so it's * 4.\n// We need one for the operation status (performing / performed) and one for the result (success / failure).\nconst WORKER_MESSAGING_SHARED_DATA = 2 * 4;\nconst WORKER_MESSAGING_STATUS_INDEX = 0;\nconst WORKER_MESSAGING_RESULT_INDEX = 1;\n\n// Response codes\nconst WORKER_MESSAGING_RESULT_DELIVERED = 0;\nconst WORKER_MESSAGING_RESULT_NO_LISTENERS = 1;\nconst WORKER_MESSAGING_RESULT_LISTENER_ERROR = 2;\n\n// This event handler is always executed on the main thread only\nfunction handleMessageFromThread(message) {\n  switch (message.type) {\n    case messageTypes.REGISTER_MAIN_THREAD_PORT:\n      {\n        const { threadId\x2C port } = message;\n\n        // Register the port\n        threadsPorts.set(threadId\x2C port);\n\n        // Handle messages on this port\n        // When a new thread wants to register a children\n        // this take care of doing that.\n        // This way any thread can be linked to the main one.\n        port.on('message'\x2C handleMessageFromThread);\n\n        // Never block the thread on this port\n        port.unref();\n      }\n\n      break;\n    case messageTypes.UNREGISTER_MAIN_THREAD_PORT:\n      threadsPorts.get(message.threadId).close();\n      threadsPorts.delete(message.threadId);\n      break;\n    case messageTypes.SEND_MESSAGE_TO_WORKER:\n      {\n        // Send the message to the target thread\n        const { source\x2C destination\x2C value\x2C transferList\x2C memory } = message;\n        sendMessageToWorker(source\x2C destination\x2C value\x2C transferList\x2C memory);\n      }\n      break;\n  }\n}\n\nfunction handleMessageFromMainThread(message) {\n  switch (message.type) {\n    case messageTypes.RECEIVE_MESSAGE_FROM_WORKER:\n      receiveMessageFromWorker(message.source\x2C message.value\x2C message.memory);\n      break;\n  }\n}\n\nfunction sendMessageToWorker(source\x2C destination\x2C value\x2C transferList\x2C memory) {\n  // We are on the main thread\x2C we can directly process the message\n  if (destination === 0) {\n    receiveMessageFromWorker(source\x2C value\x2C memory);\n    return;\n  }\n\n  // Search the port to the target thread\n  const port = threadsPorts.get(destination);\n\n  if (!port) {\n    const status = new Int32Array(memory);\n    AtomicsStore(status\x2C WORKER_MESSAGING_RESULT_INDEX\x2C WORKER_MESSAGING_RESULT_NO_LISTENERS);\n    AtomicsStore(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n    AtomicsNotify(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n    return;\n  }\n\n  port.postMessage(\n    {\n      type: messageTypes.RECEIVE_MESSAGE_FROM_WORKER\x2C\n      source\x2C\n      destination\x2C\n      value\x2C\n      memory\x2C\n    }\x2C\n    transferList\x2C\n  );\n}\n\nfunction receiveMessageFromWorker(source\x2C value\x2C memory) {\n  let response = WORKER_MESSAGING_RESULT_NO_LISTENERS;\n\n  try {\n    if (process.emit('workerMessage'\x2C value\x2C source)) {\n      response = WORKER_MESSAGING_RESULT_DELIVERED;\n    }\n  } catch {\n    response = WORKER_MESSAGING_RESULT_LISTENER_ERROR;\n  }\n\n  // Populate the result\n  const status = new Int32Array(memory);\n  AtomicsStore(status\x2C WORKER_MESSAGING_RESULT_INDEX\x2C response);\n  AtomicsStore(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n  AtomicsNotify(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 1);\n}\n\nfunction createMainThreadPort(threadId) {\n  // Create a channel that links the new thread to the main thread\n  const {\n    port1: mainThreadPortToMain\x2C\n    port2: mainThreadPortToThread\x2C\n  } = new MessageChannel();\n\n  const registrationMessage = {\n    type: messageTypes.REGISTER_MAIN_THREAD_PORT\x2C\n    threadId\x2C\n    port: mainThreadPortToMain\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(registrationMessage);\n  } else {\n    mainThreadPort.postMessage(registrationMessage\x2C [mainThreadPortToMain]);\n  }\n\n  return mainThreadPortToThread;\n}\n\nfunction destroyMainThreadPort(threadId) {\n  const unregistrationMessage = {\n    type: messageTypes.UNREGISTER_MAIN_THREAD_PORT\x2C\n    threadId\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(unregistrationMessage);\n  } else {\n    mainThreadPort.postMessage(unregistrationMessage);\n  }\n}\n\nfunction setupMainThreadPort(port) {\n  mainThreadPort = port;\n  mainThreadPort.on('message'\x2C handleMessageFromMainThread);\n\n  // Never block the process on this port\n  mainThreadPort.unref();\n}\n\nasync function postMessageToThread(threadId\x2C value\x2C transferList\x2C timeout) {\n  if (typeof transferList === 'number' && typeof timeout === 'undefined') {\n    timeout = transferList;\n    transferList = [];\n  }\n\n  if (typeof timeout !== 'undefined') {\n    validateNumber(timeout\x2C 'timeout'\x2C 0);\n  }\n\n  if (threadId === currentThreadId) {\n    throw new ERR_WORKER_MESSAGING_SAME_THREAD();\n  }\n\n  const memory = new SharedArrayBuffer(WORKER_MESSAGING_SHARED_DATA);\n  const status = new Int32Array(memory);\n  const promise = AtomicsWaitAsync(status\x2C WORKER_MESSAGING_STATUS_INDEX\x2C 0\x2C timeout).value;\n\n  const message = {\n    type: messageTypes.SEND_MESSAGE_TO_WORKER\x2C\n    source: currentThreadId\x2C\n    destination: threadId\x2C\n    value\x2C\n    memory\x2C\n    transferList\x2C\n  };\n\n  if (isMainThread) {\n    handleMessageFromThread(message);\n  } else {\n    mainThreadPort.postMessage(message\x2C transferList);\n  }\n\n  // Wait for the response\n  const response = await promise;\n\n  if (response === 'timed-out') {\n    throw new ERR_WORKER_MESSAGING_TIMEOUT();\n  } else if (status[WORKER_MESSAGING_RESULT_INDEX] === WORKER_MESSAGING_RESULT_NO_LISTENERS) {\n    throw new ERR_WORKER_MESSAGING_FAILED();\n  } else if (status[WORKER_MESSAGING_RESULT_INDEX] === WORKER_MESSAGING_RESULT_LISTENER_ERROR) {\n    throw new ERR_WORKER_MESSAGING_ERRORED();\n  }\n}\n\nmodule.exports = {\n  createMainThreadPort\x2C\n  destroyMainThreadPort\x2C\n  setupMainThreadPort\x2C\n  postMessageToThread\x2C\n};\n
code-source-info,0x277c96e950d8,116,0,6666,C0O0C4O6666,,
code-creation,JS,9,45541,0x277c96e95328,321, node:internal/worker/messaging:1:1,0x1db37b25b9b8,~
code-source-info,0x277c96e95328,116,0,6666,C0O0C119O25C125O42C131O58C137O78C143O92C148O103C153O143C159O236C162O236C167O189C173O215C179O431C182O431C187O281C192O287C198O321C204O354C210O392C216O487C219O487C224O468C230O546C233O546C238O527C244O600C248O600C250O924C252O924C257O924C259O1023C260O1023C262O1242C264O1242C266O1287C267O1287C269O1328C271O1328C273O1392C274O1392C276O1440C278O1440C280O1490C282O1490C284O6549C291O6570C297O6594C303O6619C309O6642C315O6564C320O6665,,
code-creation,Eval,9,45666,0x277c96e95558,5, node:internal/error_serdes:1:1,0x1db37b25cad0,~
script-source,117,node:internal/error_serdes,'use strict';\n\nconst {\n  ArrayPrototypeForEach\x2C\n  Error\x2C\n  EvalError\x2C\n  FunctionPrototypeCall\x2C\n  ObjectAssign\x2C\n  ObjectCreate\x2C\n  ObjectDefineProperty\x2C\n  ObjectGetOwnPropertyDescriptor\x2C\n  ObjectGetOwnPropertyNames\x2C\n  ObjectGetPrototypeOf\x2C\n  ObjectKeys\x2C\n  ObjectPrototypeToString\x2C\n  RangeError\x2C\n  ReferenceError\x2C\n  SafeSet\x2C\n  StringFromCharCode\x2C\n  StringPrototypeSubstring\x2C\n  SymbolFor\x2C\n  SymbolToStringTag\x2C\n  SyntaxError\x2C\n  TypeError\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  URIError\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst { inspect: { custom: customInspectSymbol } } = require('util');\n\nconst kSerializedError = 0;\nconst kSerializedObject = 1;\nconst kInspectedError = 2;\nconst kInspectedSymbol = 3;\nconst kCustomInspectedObject = 4;\nconst kCircularReference = 5;\n\nconst kSymbolStringLength = 'Symbol('.length;\n\nconst errors = {\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\n};\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\n\nfunction TryGetAllProperties(object\x2C target = object\x2C rememberSet) {\n  const all = { __proto__: null };\n  if (object === null)\n    return all;\n  ObjectAssign(all\x2C\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target\x2C rememberSet));\n  const keys = ObjectGetOwnPropertyNames(object);\n  ArrayPrototypeForEach(keys\x2C (key) => {\n    let descriptor;\n    try {\n      // TODO: create a null-prototype descriptor with needed properties only\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\n    } catch { return; }\n    const getter = descriptor.get;\n    if (getter && key !== '__proto__') {\n      try {\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\n        delete descriptor.get;\n        delete descriptor.set;\n      } catch {\n        // Continue regardless of error.\n      }\n    }\n    if (key === 'cause') {\n      descriptor.value = serializeError(descriptor.value\x2C rememberSet);\n      all[key] = descriptor;\n    } else if ('value' in descriptor &&\n            typeof descriptor.value !== 'function' && typeof descriptor.value !== 'symbol') {\n      all[key] = descriptor;\n    }\n  });\n  return all;\n}\n\nfunction GetConstructors(object) {\n  const constructors = [];\n\n  for (let current = object;\n    current !== null;\n    current = ObjectGetPrototypeOf(current)) {\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\n    if (desc?.value) {\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\n        __proto__: null\x2C\n        value: desc.value\x2C enumerable: true\x2C\n      });\n    }\n  }\n\n  return constructors;\n}\n\nfunction GetName(object) {\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\n  return desc?.value;\n}\n\nlet internalUtilInspect;\nfunction inspect(...args) {\n  internalUtilInspect ??= require('internal/util/inspect');\n  return internalUtilInspect.inspect(...args);\n}\n\nlet serialize;\nfunction serializeError(error\x2C rememberSet = new SafeSet()) {\n  serialize ??= require('v8').serialize;\n  if (typeof error === 'symbol') {\n    return Buffer.from(StringFromCharCode(kInspectedSymbol) + inspect(error)\x2C 'utf8');\n  }\n\n  try {\n    if (typeof error === 'object' &&\n        ObjectPrototypeToString(error) === '[object Error]') {\n      if (rememberSet.has(error)) {\n        return Buffer.from([kCircularReference]);\n      }\n      rememberSet.add(error);\n\n      const constructors = GetConstructors(error);\n      for (let i = 0; i < constructors.length; i++) {\n        const name = GetName(constructors[i]);\n        if (errorConstructorNames.has(name)) {\n          const serialized = serialize({\n            constructor: name\x2C\n            properties: TryGetAllProperties(error\x2C error\x2C rememberSet)\x2C\n          });\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\n        }\n      }\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    if (error != null && customInspectSymbol in error) {\n      return Buffer.from(StringFromCharCode(kCustomInspectedObject) + inspect(error)\x2C 'utf8');\n    }\n  } catch {\n    // Continue regardless of error.\n  }\n  try {\n    const serialized = serialize(error);\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\n  } catch {\n    // Continue regardless of error.\n  }\n  return Buffer.from(StringFromCharCode(kInspectedError) + inspect(error)\x2C 'utf8');\n}\n\nfunction fromBuffer(error) {\n  return Buffer.from(TypedArrayPrototypeGetBuffer(error)\x2C\n                     TypedArrayPrototypeGetByteOffset(error) + 1\x2C\n                     TypedArrayPrototypeGetByteLength(error) - 1);\n}\n\nlet deserialize;\nfunction deserializeError(error) {\n  deserialize ??= require('v8').deserialize;\n  switch (error[0]) {\n    case kSerializedError: {\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\n      const ctor = errors[constructor];\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\n        __proto__: null\x2C\n        value: { __proto__: null\x2C value: 'Error'\x2C configurable: true }\x2C\n        enumerable: true\x2C\n      });\n      if ('cause' in properties && 'value' in properties.cause) {\n        properties.cause.value = deserializeError(properties.cause.value);\n      }\n      return ObjectCreate(ctor.prototype\x2C properties);\n    }\n    case kSerializedObject:\n      return deserialize(error.subarray(1));\n    case kInspectedError:\n      return fromBuffer(error).toString('utf8');\n    case kInspectedSymbol: {\n      const buf = fromBuffer(error);\n      return SymbolFor(StringPrototypeSubstring(buf.toString('utf8')\x2C kSymbolStringLength\x2C buf.length - 1));\n    }\n    case kCustomInspectedObject:\n      return {\n        __proto__: null\x2C\n        [customInspectSymbol]: () => fromBuffer(error).toString('utf8')\x2C\n      };\n    case kCircularReference:\n      return {\n        __proto__: null\x2C\n        [customInspectSymbol]: () => '[Circular object]'\x2C\n      };\n  }\n  require('assert').fail('This should not happen');\n}\n\nmodule.exports = { serializeError\x2C deserializeError };\n
code-source-info,0x277c96e95558,117,0,6023,C0O0C4O6023,,
code-creation,JS,9,45833,0x277c96e957d8,462, node:internal/error_serdes:1:1,0x1db37b25ce10,~
code-source-info,0x277c96e957d8,117,0,6023,C0O0C144O25C150O50C155O59C160O72C166O97C172O113C178O129C184O153C190O187C196O216C202O240C207O254C213O281C218O295C223O313C229O324C235O346C241O374C247O387C253O408C258O423C263O436C269O468C275O504C281O540C286O587C292O587C297O576C303O659C309O659C314O623C319O633C325O702C326O702C328O731C330O731C332O758C334O758C336O786C338O786C340O820C342O820C344O850C346O850C348O882C351O892C355O882C357O916C364O920C370O927C376O938C382O950C388O960C394O973C400O989C406O916C408O1033C414O1045C421O1033C426O1033C428O2769C429O2769C431O2932C432O2932C434O4628C435O4628C437O5968C444O5987C450O6003C456O5983C461O6022,,
code-creation,Eval,9,46000,0x277c96e95ab8,5, node:internal/locks:1:1,0x1db37b25eac8,~
script-source,118,node:internal/locks,'use strict';\n\nconst {\n  ObjectDefineProperties\x2C\n  Promise\x2C\n  PromiseResolve\x2C\n  Symbol\x2C\n  SymbolToStringTag\x2C\n} = primordials;\n\nconst {\n  ERR_ILLEGAL_CONSTRUCTOR\x2C\n  ERR_INVALID_THIS\x2C\n} = require('internal/errors');\nconst {\n  kEmptyObject\x2C\n  lazyDOMException\x2C\n} = require('internal/util');\nconst {\n  validateAbortSignal\x2C\n  validateFunction\x2C\n} = require('internal/validators');\nconst { threadId } = require('internal/worker');\nconst {\n  converters\x2C\n  createEnumConverter\x2C\n  createDictionaryConverter\x2C\n} = require('internal/webidl');\n\nconst locks = internalBinding('locks');\n\nconst kName = Symbol('kName');\nconst kMode = Symbol('kMode');\nconst kConstructLock = Symbol('kConstructLock');\nconst kConstructLockManager = Symbol('kConstructLockManager');\n\n// WebIDL dictionary LockOptions\nconst convertLockOptions = createDictionaryConverter([\n  {\n    key: 'mode'\x2C\n    converter: createEnumConverter('LockMode'\x2C [\n      'shared'\x2C\n      'exclusive'\x2C\n    ])\x2C\n    defaultValue: () => 'exclusive'\x2C\n  }\x2C\n  {\n    key: 'ifAvailable'\x2C\n    converter: (value) => !!value\x2C\n    defaultValue: () => false\x2C\n  }\x2C\n  {\n    key: 'steal'\x2C\n    converter: (value) => !!value\x2C\n    defaultValue: () => false\x2C\n  }\x2C\n  {\n    key: 'signal'\x2C\n    converter: converters.object\x2C\n  }\x2C\n]);\n\n// https://w3c.github.io/web-locks/#api-lock\nclass Lock {\n  constructor(symbol = undefined\x2C name\x2C mode) {\n    if (symbol !== kConstructLock) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n    this[kName] = name;\n    this[kMode] = mode;\n  }\n\n  get name() {\n    if (this instanceof Lock) {\n      return this[kName];\n    }\n    throw new ERR_INVALID_THIS('Lock');\n  }\n\n  get mode() {\n    if (this instanceof Lock) {\n      return this[kMode];\n    }\n    throw new ERR_INVALID_THIS('Lock');\n  }\n}\n\nObjectDefineProperties(Lock.prototype\x2C {\n  name: { __proto__: null\x2C enumerable: true }\x2C\n  mode: { __proto__: null\x2C enumerable: true }\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    value: 'Lock'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  }\x2C\n});\n\n// Helper to create Lock objects from internal C++ lock data\nfunction createLock(internalLock) {\n  return internalLock === null ? null : new Lock(kConstructLock\x2C internalLock.name\x2C internalLock.mode);\n}\n\n// Convert LOCK_STOLEN_ERROR to AbortError DOMException\nfunction convertLockError(error) {\n  if (error?.message === locks.LOCK_STOLEN_ERROR) {\n    return lazyDOMException('The operation was aborted'\x2C 'AbortError');\n  }\n  return error;\n}\n\n// https://w3c.github.io/web-locks/#api-lock-manager\nclass LockManager {\n  constructor(symbol = undefined) {\n    if (symbol !== kConstructLockManager) {\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\n    }\n  }\n\n  /**\n   * Request a Web Lock for a named resource.\n   * @param {string} name - The name of the lock resource\n   * @param {object} [options] - Lock options (optional)\n   * @param {string} [options.mode] - Lock mode: 'exclusive' or 'shared' default is exclusive\n   * @param {boolean} [options.ifAvailable] - Only grant if immediately available\n   * @param {boolean} [options.steal] - Steal existing locks with same name\n   * @param {AbortSignal} [options.signal] - Signal to abort pending lock request\n   * @param {Function} callback - Function called when lock is granted\n   * @returns {Promise} Promise that resolves when the lock is released\n   * @throws {TypeError} When name is not a string or callback is not a function\n   * @throws {DOMException} When validation fails or operation is not supported\n   */\n  // https://w3c.github.io/web-locks/#api-lock-manager-request\n  async request(name\x2C options\x2C callback) {\n    if (callback === undefined) {\n      callback = options;\n      options = undefined;\n    }\n\n    name = converters.DOMString(name);\n    validateFunction(callback\x2C 'callback');\n\n    if (options === undefined || typeof options === 'function') {\n      options = kEmptyObject;\n    }\n\n    // Convert LockOptions dictionary\n    options = convertLockOptions(options);\n\n    const { mode\x2C ifAvailable\x2C steal\x2C signal } = options;\n\n    validateAbortSignal(signal\x2C 'options.signal');\n\n    if (signal) {\n      signal.throwIfAborted();\n    }\n\n    if (name.startsWith('-')) {\n      // If name starts with U+002D HYPHEN-MINUS (-)\x2C then reject promise with a\n      // "NotSupportedError" DOMException.\n      throw lazyDOMException('Lock name may not start with hyphen'\x2C\n                             'NotSupportedError');\n    }\n\n    if (ifAvailable === true && steal === true) {\n      // If both options' steal dictionary member and option's\n      // ifAvailable dictionary member are true\x2C then reject promise with a\n      // "NotSupportedError" DOMException.\n      throw lazyDOMException('ifAvailable and steal are mutually exclusive'\x2C\n                             'NotSupportedError');\n    }\n\n    if (mode !== locks.LOCK_MODE_EXCLUSIVE && steal === true) {\n      // If options' steal dictionary member is true and options' mode\n      // dictionary member is not "exclusive"\x2C then return a promise rejected\n      // with a "NotSupportedError" DOMException.\n      throw lazyDOMException(`mode: "${locks.LOCK_MODE_SHARED}" and steal are mutually exclusive`\x2C\n                             'NotSupportedError');\n    }\n\n    if (signal && (steal === true || ifAvailable === true)) {\n      // If options' signal dictionary member is present\x2C and either of\n      // options' steal dictionary member or options' ifAvailable dictionary\n      // member is true\x2C then return a promise rejected with a\n      // "NotSupportedError" DOMException.\n      throw lazyDOMException('signal cannot be used with steal or ifAvailable'\x2C\n                             'NotSupportedError');\n    }\n\n    const clientId = `node-${process.pid}-${threadId}`;\n\n    // Handle requests with AbortSignal\n    if (signal) {\n      return new Promise((resolve\x2C reject) => {\n        let lockGranted = false;\n\n        const abortListener = () => {\n          if (!lockGranted) {\n            reject(signal.reason || lazyDOMException('The operation was aborted'\x2C 'AbortError'));\n          }\n        };\n\n        signal.addEventListener('abort'\x2C abortListener\x2C { once: true });\n\n        const wrappedCallback = (lock) => {\n          return PromiseResolve().then(() => {\n            if (signal.aborted) {\n              return undefined;\n            }\n            lockGranted = true;\n            return callback(createLock(lock));\n          });\n        };\n\n        try {\n          const released = locks.request(\n            name\x2C\n            clientId\x2C\n            mode\x2C\n            steal\x2C\n            ifAvailable\x2C\n            wrappedCallback\x2C\n          );\n\n          // When released promise settles\x2C clean up listener and resolve main promise\n          released\n            .then(resolve\x2C (error) => reject(convertLockError(error)))\n            .finally(() => {\n              signal.removeEventListener('abort'\x2C abortListener);\n            });\n        } catch (error) {\n          signal.removeEventListener('abort'\x2C abortListener);\n          reject(convertLockError(error));\n        }\n      });\n    }\n\n    // When ifAvailable: true and lock is not available\x2C C++ passes null to indicate no lock granted\n    const wrapCallback = (internalLock) => {\n      const lock = createLock(internalLock);\n      return callback(lock);\n    };\n\n    // Standard request without signal\n    try {\n      return await locks.request(name\x2C clientId\x2C mode\x2C steal\x2C ifAvailable\x2C wrapCallback);\n    } catch (error) {\n      const convertedError = convertLockError(error);\n      throw convertedError;\n    }\n  }\n\n  /**\n   * Query the current state of locks for this environment.\n   * @returns {Promise<{held: Array<object>\x2C pending: Array<object>}>} Promise resolving to lock manager snapshot\n   */\n  // https://w3c.github.io/web-locks/#api-lock-manager-query\n  async query() {\n    if (this instanceof LockManager) {\n      return locks.query();\n    }\n    throw new ERR_INVALID_THIS('LockManager');\n  }\n}\n\nObjectDefineProperties(LockManager.prototype\x2C {\n  request: { __proto__: null\x2C enumerable: true }\x2C\n  query: { __proto__: null\x2C enumerable: true }\x2C\n  [SymbolToStringTag]: {\n    __proto__: null\x2C\n    value: 'LockManager'\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  }\x2C\n});\n\nObjectDefineProperties(LockManager.prototype.request\x2C {\n  length: {\n    __proto__: null\x2C\n    value: 2\x2C\n    writable: false\x2C\n    enumerable: false\x2C\n    configurable: true\x2C\n  }\x2C\n});\n\nmodule.exports = {\n  Lock\x2C\n  LockManager\x2C\n  locks: new LockManager(kConstructLockManager)\x2C\n};\n
code-source-info,0x277c96e95ab8,118,0,8471,C0O0C4O8471,,
code-creation,JS,9,46208,0x277c96e95e60,579, node:internal/locks:1:1,0x1db37b25ed68,~
code-source-info,0x277c96e95e60,118,0,8471,C0O0C72O25C77O51C83O62C89O80C94O90C99O186C102O186C107O137C113O164C119O262C122O262C127O224C133O240C139O343C142O343C147O298C153O321C159O396C162O396C167O383C173O502C176O502C181O434C187O448C192O471C197O545C200O545C204O545C206O586C209O586C213O586C215O617C218O617C222O617C224O657C227O657C231O657C233O713C236O713C240O713C242O807C257O871C262O871C271O966C293O1033C301O1071C323O1126C331O1164C356O1231C370O807C374O807C417O1294C419O1744C422O1772C434O1882C436O1902C445O1744C492O7935C504O8049C506O8069C515O7900C520O8231C525O8241C535O8196C540O8377C547O8398C553O8406C562O8428C573O8392C578O8470,,
tick,0x1015aebd0,46250,0,0x0,0,0x277c96e9601d,0x148000610,0x1480002b4,0x277c96e92fba,0x148000610,0x2347af044cac,0x621fa65a368,0x3231531c4a7e,0x3231531c4c9a,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x621fa65a690,0x277c96e92cc8,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,9,46291,0x277c96e961d0,36,LockManager node:internal/locks:115:14,0x1db37b25f218,~
code-source-info,0x277c96e961d0,118,2550,2669,C10O2577C14O2592C16O2588C21O2623C28O2629C33O2623C35O2668,,
code-creation,JS,9,46375,0x277c96e964e8,992,Socket node:net:362:16,0x7143c2ca98,~
code-source-info,0x277c96e964e
code-creation,JS,9,46458,0x277c96e96c70,504,Duplex node:internal/streams/duplex:64:16,0x7143c3d078,~
code-source-info,0x277c96e96c
code-creation,JS,9,46500,0x277c96e97058,254,Readable node:internal/streams/readable:318:18,0x32a185945bf0,~
code-source-info,0x277c96e97058,91,10071,11088,C0O10071C9O10085C16O10096C21O10122C28O10129C33O10151C34O10155C51O10185C56O10207C61O10228C66O10248C71O10273C77O10168C81O10510C99O10532C104O10530C108O10576C112O10614C120O10641C123O10662C127O10652C131O10692C139O10722C142O10746C146O10736C150O10779C158O10811C161O10837C165O10827C169O10865C175O10879C182O10902C190O10879C195O10924C202O10931C210O10931C216O10955C219O10964C226O10990C233O11002C246O11002C253O11087,,
code-creation,JS,9,46541,0x277c96e97230,18,Stream node:internal/streams/legacy:11:16,0x7143c3dd60,~
code-source-info,0x277c96e97230,90,145,178,C0O156C5O159C10O159C17O177,,
code-creation,JS,9,46583,0x277c96e973a0,383,ReadableState node:internal/streams/readable:260:23,0x32a185945ba8,~
code-source-info,0x277c96e973a0,91,7946,9890,C0O8095C2O8100C7O8110C12O8123C14O8121C20O8138C22O8136C28O8153C30O8151C33O8108C37O8285C44O8296C53O8314C56O8319C62O8330C67O8327C71O8346C82O8369C91O8395C94O8400C100O8411C105O8408C109O8569C114O8590C118O8604C133O8604C142O8677C147O8677C151O8588C155O8712C157O8724C161O8732C162O8749C166O8756C167O8768C171O8775C173O8786C177O8854C181O8877C191O8898C194O8903C200O8914C205O8911C209O9003C213O9026C223O9049C226O9054C232O9065C237O9062C241O9302C248O9309C256O9330C261O9377C268O9407C273O9426C276O9431C282O9442C287O9439C293O9473C298O9484C303O9484C310O9519C312O9540C318O9574C325O9580C330O9574C331O9732C332O9755C336O9766C343O9777C352O9795C354O9814C357O9836C364O9810C369O9808C373O9875C377O9865C382O9889,,
code-creation,JS,9,46625,0x277c96e97660,98,getHighWaterMark node:internal/streams/state:33:26,0x32a185949ce8,~
code-source-info,0x277c96e97660,93,934,1342,C0O988C12O988C18O1039C21O1062C26O1067C33O1095C38O1121C47O1143C56O1188C69O1194C74O1188C75O1242C80O1249C84O1264C85O1291C88O1328C93O1298C97O1340,,
code-creation,JS,9,46666,0x277c96e97760,26,highWaterMarkFrom node:internal/streams/state:15:27,0x32a185949c10,~
code-source-info,0x277c96e97760,93,421,562,C0O471C7O503C15O523C19O541C25O560,,
code-creation,JS,9,46666,0x277c96e977f8,22,get node:internal/streams/readable:130:8,0x32a18594c460,~
code-source-info,0x277c96e977f8,91,3811,3852,C0O3816C4O3829C6O3828C12O3837C17O3844C21O3850,,
code-creation,JS,9,46666,0x277c96e97890,15,getDefaultHighWaterMark node:internal/streams/state:20:33,0x32a185949c58,~
code-source-info,0x277c96e97890,93,596,694,C0O613C6O633C12O666C14O692,,
code-creation,JS,9,46708,0x277c96e97a00,412,WritableState node:internal/streams/writable:302:23,0x32a185955438,~
code-source-info,0x277c96e97a
code-creation,JS,9,46750,0x277c96e97cd0,22,get node:internal/streams/writable:129:8,0x32a185958468,~
code-source-info,0x277c96e97cd0,96,3892,3933,C0O3897C4O3910C6O3909C12O3918C17O3925C21O3931,,
code-creation,JS,9,46750,0x277c96e97d88,65,resetBuffer node:internal/streams/writable:362:21,0x32a185955480,~
code-source-info,0x277c96e97d88,96,11628,11772,C0O11640C2O11646C6O11662C10O11672C11O11692C15O11699C17O11705C26O11716C31O11730C33O11728C39O11713C43O11742C46O11748C52O11760C54O11759C59O11756C64O11771,,
code-creation,JS,9,46791,0x277c96e97e60,50,set node:internal/streams/readable:131:8,0x32a18594c4a8,~
code-source-info,0x277c96e97e60,91,3861,3947,C0O3877C4O3888C8O3893C17O3904C20O3901C26O3920C30O3925C39O3936C44O3933C49O3946,,
code-creation,JS,9,46791,0x277c96e97f68,131,createHandle node:net:179:22,0x7143c2c738,~
code-source-info,0x277c96e97f68,81,4958,5320,C0O4978C13O4978C18O5021C23O5021C28O5044C30O5053C35O5071C42O5094C46O5106C49O5120C57O5129C60O5143C67O5078C72O5157C73O5165C75O5174C80O5191C87O5213C91O5225C94O5238C102O5247C105O5260C112O5198C117O5274C118O5282C125O5288C130O5282,,
code-creation,JS,9,46833,0x277c96e98098,14,set node:net:2447:6,0x7143c2eb50,~
code-source-info,0x277c96e98098,81,68564,68597,C0O68570C2O68582C7O68591C13O68595,,
code-creation,JS,9,46833,0x277c96e98120,8,get node:net:2446:6,0x7143c2eb08,~
code-source-info,0x277c96e98120,81,68529,68557,C0O68534C2O68546C4O68545C7O68555,,
code-creation,JS,9,46916,0x277c96e98248,315,Readable.on node:internal/streams/readable:1130:33,0x32a185946dd0,~
code-source-info,0x277c96e
code-creation,JS,9,46916,0x277c96e984d8,133,initSocketHandle node:net:318:26,0x7143c2ca08,~
code-source-info,0x277c96e984d8,81,8172,8750,C0O8188C5O8188C9O8204C10O8219C14O8305C20O8325C27O8333C32O8347C36O8364C43O8381C45O8379C49O8399C51O8404C57O8442C62O8423C66O8421C70O8471C72O8476C74O8475C78O8490C80O8526C82O8531C84O8530C88O8550C90O8591C94O8609C99O8614C105O8647C106O8654C107O8663C112O8677C116O8707C121O8715C126O8715C132O8749,,
code-creation,JS,9,46958,0x277c96e986a0,155,undestroy node:internal/streams/destroy:173:19,0x7143c3bf50,~
code-source-info,0x277c96e986a0,88,3192,3864,C0O3214C5O3247C10O3266C14O3279C15O3293C19O3305C20O3314C24O3327C25O3342C29O3355C30O3367C34O3380C35O3390C39O3402C40O3417C44O3430C45O3440C49O3465C57O3461C61O3506C69O3502C73O3533C77O3546C78O3560C82O3572C83O3584C87O3597C88O3606C92O3619C93O3634C97O3647C98O3657C102O3669C103O3684C107O3697C108O3711C112O3724C113O3738C117O3763C125O3759C129O3800C137O3796C141O3839C149O3835C154O3863,,
code-creation,JS,9,47000,0x277c96e98820,61,set node:internal/streams/readable:184:8,0x32a1859464f0,~
code-source-info,0x277c96e98820,91,6226,6389,C0O6242C4O6263C6O6268C11O6283C15O6300C17O6305C26O6316C31O6313C37O6349C39O6354C48O6366C50O6365C55O6362C60O6388,,
code-creation,JS,9,47000,0x277c96e988f0,50,set node:internal/streams/writable:130:8,0x32a1859584b0,~
code-source-info,0x277c96e988f0,96,3942,4028,C0O3958C4O3969C8O3974C17O3985C20O3982C26O4001C30O4006C39O4017C44O4014C49O4027,,
code-creation,JS,9,47000,0x277c96e989b8,61,set node:internal/streams/writable:215:8,0x32a1859559d8,~
code-source-info,0x277c96e989b8,96,7087,7250,C0O7103C4O7124C6O7129C11O7144C15O7161C17O7166C26O7177C31O7174C37O7210C39O7215C48O7227C50O7226C55O7223C60O7249,,
code-creation,JS,9,47041,0x277c96e98a98,45,get node:internal/streams/writable:228:8,0x32a185955a20,~
code-source-info,0x277c96e98a98,96,7323,7420,C0O7328C2O7341C4O7340C10O7351C12O7349C17O7365C24O7378C30O7389C32O7387C37O7400C44O7418,,
code-creation,JS,9,47041,0x277c96e98b58,32,getNewAsyncId node:net:198:23,0x7143c2c780,~
code-source-info,0x277c96e98b58,81,5345,5461,C0O5358C4O5391C14O5424C17O5424C22O5446C27O5446C31O5459,,
code-creation,JS,9,47083,0x277c96e98bf8,5,get /opt/homebrew/lib/node_modules/0x/lib/preload/redir-stdout.js:19:10,0x1db37b251778,~
code-source-info,0x277c96e98bf8,111,392,404,C0O398C4O404,,
code-creation,JS,10,47291,0x1480073c0,480, node:internal/util:798:18,0x3699125da2b0,^
code-source-info,0x1480073c0,13,22627,22747,,,
code-creation,JS,10,47333,0x1480075c0,64,noop node:internal/util/debuglog:57:14,0x3699125e5b20,^
script-source,19,node:internal/util/debuglog,'use strict';\n\nconst {\n  MathFloor\x2C\n  Number\x2C\n  NumberPrototypeToFixed\x2C\n  ObjectDefineProperty\x2C\n  RegExp\x2C\n  RegExpPrototypeExec\x2C\n  SafeArrayIterator\x2C\n  SafeMap\x2C\n  StringPrototypePadStart\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n  StringPrototypeToUpperCase\x2C\n} = primordials;\nconst {\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\n} = require('internal/constants');\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\nconst { getCategoryEnabledBuffer\x2C trace } = internalBinding('trace_events');\n\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\nlet debugImpls;\nlet testEnabled;\n\n\n// `debugEnv` is initial value of process.env.NODE_DEBUG\nfunction initializeDebugEnv(debugEnv) {\n  debugImpls = { __proto__: null };\n  if (debugEnv) {\n    // This is run before any user code\x2C it's OK not to use primordials.\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\n      .replaceAll('*'\x2C '.*')\n      .replaceAll('\x2C'\x2C '$|^');\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\n  } else {\n    testEnabled = () => false;\n  }\n}\n\n// Emits warning when user sets\n// NODE_DEBUG=http or NODE_DEBUG=http2.\nfunction emitWarningIfNeeded(set) {\n  if ('HTTP' === set || 'HTTP2' === set) {\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\n      'data (such as passwords\x2C tokens and authentication headers) ' +\n      'in the resulting log.');\n  }\n}\n\nconst noop = () => {};\n\nlet utilColors;\nfunction lazyUtilColors() {\n  utilColors ??= require('internal/util/colors');\n  return utilColors;\n}\n\nfunction debuglogImpl(enabled\x2C set) {\n  if (debugImpls[set] === undefined) {\n    if (enabled) {\n      const pid = process.pid;\n      emitWarningIfNeeded(set);\n      debugImpls[set] = function debug(...args) {\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\n        const msg = formatWithOptions({ colors }\x2C ...args);\n        const coloredPID = inspect(pid\x2C { colors });\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\n      };\n    } else {\n      debugImpls[set] = noop;\n    }\n  }\n  return debugImpls[set];\n}\n\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\n// so it needs to be called lazily in top scopes of internal modules\n// that may be loaded before these run time states are allowed to\n// be accessed.\nfunction debuglog(set\x2C cb) {\n  function init() {\n    set = StringPrototypeToUpperCase(set);\n    enabled = testEnabled(set);\n  }\n  let debug = (...args) => {\n    init();\n    // Only invokes debuglogImpl() when the debug function is\n    // called for the first time.\n    debug = debuglogImpl(enabled\x2C set);\n    if (typeof cb === 'function')\n      cb(debug);\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  let enabled;\n  let test = () => {\n    init();\n    test = () => enabled;\n    return enabled;\n  };\n  const logger = (...args) => {\n    // Improve performance when debug is disabled\x2C avoid calling `new SafeArrayIterator(args)`\n    if (enabled === false) return;\n    switch (args.length) {\n      case 1: return debug(args[0]);\n      case 2: return debug(args[0]\x2C args[1]);\n      default: return debug(...new SafeArrayIterator(args));\n    }\n  };\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\n    __proto__: null\x2C\n    get() {\n      return test();\n    }\x2C\n    configurable: true\x2C\n    enumerable: true\x2C\n  });\n  return logger;\n}\n\nfunction pad(value) {\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\n}\n\nconst kNone = 1 << 0;\nconst kSkipLog = 1 << 1;\nconst kSkipTrace = 1 << 2;\nconst kShouldSkipAll = kSkipLog | kSkipTrace;\n\nconst kSecond = 1000;\nconst kMinute = 60 * kSecond;\nconst kHour = 60 * kMinute;\n\nfunction formatTime(ms) {\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n\n  if (ms >= kSecond) {\n    if (ms >= kMinute) {\n      if (ms >= kHour) {\n        hours = MathFloor(ms / kHour);\n        ms = ms % kHour;\n      }\n      minutes = MathFloor(ms / kMinute);\n      ms = ms % kMinute;\n    }\n    seconds = ms / kSecond;\n  }\n\n  if (hours !== 0 || minutes !== 0) {\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\n      '.'\x2C\n      2\x2C\n    ));\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\n  }\n\n  if (seconds !== 0) {\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\n  }\n\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\n}\n\nfunction safeTraceLabel(label) {\n  return label.replaceAll('\\\\'\x2C '\\\\\\\\').replaceAll('"'\x2C '\\\\"');\n}\n\n/**\n * @typedef {(label: string\x2C timeFormatted: string\x2C args?: any[]) => void} LogImpl\n */\n\n/**\n * Returns true if label was found\n * @param {string} timesStore\n * @param {string} implementation\n * @param {LogImpl} logImp\n * @param {string} label\n * @param {any} args\n * @returns {void}\n */\nfunction timeLogImpl(timesStore\x2C implementation\x2C logImp\x2C label\x2C args) {\n  const time = timesStore.get(label);\n  if (time === undefined) {\n    process.emitWarning(`No such label '${label}' for ${implementation}`);\n    return;\n  }\n\n  const duration = process.hrtime(time);\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\n\n  const formatted = formatTime(ms);\n\n  if (args === undefined) {\n    logImp(label\x2C formatted);\n  } else {\n    logImp(label\x2C formatted\x2C args);\n  }\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {string} logLabel\n * @param {string} traceLabel\n * @returns {void}\n */\nfunction time(timesStore\x2C traceCategory\x2C implementation\x2C timerFlags\x2C logLabel = 'default'\x2C traceLabel = undefined) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if (timesStore.has(logLabel)) {\n    process.emitWarning(`Label '${logLabel}' already exists for ${implementation}`);\n    return;\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceBegin\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n\n  timesStore.set(logLabel\x2C process.hrtime());\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {LogImpl} logImpl\n * @param {string} logLabel\n * @param {string} traceLabel\n * @returns {void}\n */\nfunction timeEnd(\n  timesStore\x2C\n  traceCategory\x2C\n  implementation\x2C\n  timerFlags\x2C\n  logImpl\x2C\n  logLabel = 'default'\x2C\n  traceLabel = undefined\x2C\n) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if ((timerFlags & kSkipLog) === 0) {\n    timeLogImpl(timesStore\x2C implementation\x2C logImpl\x2C logLabel);\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceEnd\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n\n  timesStore.delete(logLabel);\n}\n\n/**\n * @param {SafeMap} timesStore\n * @param {string} traceCategory\n * @param {string} implementation\n * @param {number} timerFlags\n * @param {LogImpl} logImpl\n * @param {string} logLabel\n * @param {string} traceLabel\n * @param {any[]} args\n * @returns {void}\n */\nfunction timeLog(\n  timesStore\x2C\n  traceCategory\x2C\n  implementation\x2C\n  timerFlags\x2C\n  logImpl\x2C\n  logLabel = 'default'\x2C\n  traceLabel = undefined\x2C\n  args\x2C\n) {\n  // Coerces everything other than Symbol to a string\n  logLabel = `${logLabel}`;\n\n  if (traceLabel !== undefined) {\n    traceLabel = `${traceLabel}`;\n  } else {\n    traceLabel = logLabel;\n  }\n\n  if ((timerFlags & kSkipLog) === 0) {\n    timeLogImpl(timesStore\x2C implementation\x2C logImpl\x2C logLabel\x2C args);\n  }\n\n  if ((timerFlags & kSkipTrace) === 0) {\n    traceLabel = safeTraceLabel(traceLabel);\n    trace(kTraceInstant\x2C traceCategory\x2C traceLabel\x2C 0);\n  }\n}\n\n/**\n * @type {Record<string\x2C SafeMap>}\n */\nlet tracesStores;\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string) => void} TimerStart\n */\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string) => void} TimerEnd\n */\n\n/**\n * @typedef {(logLabel: string\x2C traceLabel?: string\x2C args?: any[]) => void} TimerLog\n */\n\n/**\n * Debuglog with time fns and support for trace\n * @param {string} set\n * @param {(startTimer: TimerStart\x2C endTimer: TimerEnd\x2C logTimer: TimerLog) => void} cb\n * @returns {{startTimer: TimerStart\x2C endTimer: TimerEnd\x2C logTimer: TimerLog}}\n */\nfunction debugWithTimer(set\x2C cb) {\n  set = StringPrototypeToUpperCase(set);\n\n  if (tracesStores === undefined) {\n    tracesStores = { __proto__: null };\n  }\n\n  /**\n   * @type {LogImpl}\n   */\n  function logImpl(label\x2C timeFormatted\x2C args) {\n    const pid = process.pid;\n    const colors = { colors: lazyUtilColors().shouldColorize(process.stderr) };\n    const coloredPID = inspect(pid\x2C colors);\n\n    if (args === undefined)\n      process.stderr.write(format('%s %s %s: %s\\n'\x2C set\x2C coloredPID\x2C label\x2C timeFormatted));\n    else\n      process.stderr.write(\n        format(\n          '%s %s %s: %s\\n'\x2C\n          set\x2C\n          coloredPID\x2C\n          label\x2C\n          timeFormatted\x2C\n          ...new SafeArrayIterator(args)\x2C\n        )\x2C\n      );\n  }\n\n  const traceCategory = `node\x2Cnode.${StringPrototypeToLowerCase(set)}`;\n  let traceCategoryBuffer;\n  let debugLogCategoryEnabled = false;\n  let timerFlags = kNone;\n\n  function ensureTimerFlagsAreUpdated() {\n    timerFlags &= ~kSkipTrace;\n\n    if (traceCategoryBuffer[0] === 0) {\n      timerFlags |= kSkipTrace;\n    }\n  }\n\n  /**\n   * @type {TimerStart}\n   */\n  function internalStartTimer(logLabel\x2C traceLabel) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    time(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.time'\x2C\n      timerFlags\x2C\n      logLabel\x2C\n      traceLabel\x2C\n    );\n  }\n\n  /**\n   * @type {TimerEnd}\n   */\n  function internalEndTimer(logLabel\x2C traceLabel) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    timeEnd(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.timeEnd'\x2C\n      timerFlags\x2C\n      logImpl\x2C\n      logLabel\x2C\n      traceLabel\x2C\n    );\n  }\n\n  /**\n   * @type {TimerLog}\n   */\n  function internalLogTimer(logLabel\x2C traceLabel\x2C args) {\n    ensureTimerFlagsAreUpdated();\n\n    if ((timerFlags & kShouldSkipAll) === kShouldSkipAll) {\n      return;\n    }\n\n    timeLog(\n      tracesStores[set]\x2C\n      traceCategory\x2C\n      'debuglog.timeLog'\x2C\n      timerFlags\x2C\n      logImpl\x2C\n      logLabel\x2C\n      traceLabel\x2C\n      args\x2C\n    );\n  }\n\n  function init() {\n    if (tracesStores[set] === undefined) {\n      tracesStores[set] = new SafeMap();\n    }\n    emitWarningIfNeeded(set);\n    debugLogCategoryEnabled = testEnabled(set);\n    traceCategoryBuffer = getCategoryEnabledBuffer(traceCategory);\n\n    timerFlags = kNone;\n\n    if (!debugLogCategoryEnabled) {\n      timerFlags |= kSkipLog;\n    }\n\n    if (traceCategoryBuffer[0] === 0) {\n      timerFlags |= kSkipTrace;\n    }\n\n    cb(internalStartTimer\x2C internalEndTimer\x2C internalLogTimer);\n  }\n\n  /**\n   * @type {TimerStart}\n   */\n  const startTimer = (logLabel\x2C traceLabel) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalStartTimer(logLabel\x2C traceLabel);\n  };\n\n  /**\n   * @type {TimerEnd}\n   */\n  const endTimer = (logLabel\x2C traceLabel) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalEndTimer(logLabel\x2C traceLabel);\n  };\n\n  /**\n   * @type {TimerLog}\n   */\n  const logTimer = (logLabel\x2C traceLabel\x2C args) => {\n    init();\n\n    if ((timerFlags & kShouldSkipAll) !== kShouldSkipAll)\n      internalLogTimer(logLabel\x2C traceLabel\x2C args);\n  };\n\n  return {\n    startTimer\x2C\n    endTimer\x2C\n    logTimer\x2C\n  };\n}\n\nmodule.exports = {\n  kNone\x2C\n  kSkipLog\x2C\n  kSkipTrace\x2C\n  formatTime\x2C\n  time\x2C\n  timeEnd\x2C\n  timeLog\x2C\n  debuglog\x2C\n  debugWithTimer\x2C\n  initializeDebugEnv\x2C\n};\n
code-source-info,0x1480075c0,19,1733,1741,,,
code-creation,JS,10,47666,0x148007620,200,canBeRequiredWithoutScheme node:internal/bootstrap/realm:295:36,0x3699125c48b8,^
code-source-info,0x148007620,6,9641,9709,,,
code-creation,JS,10,47666,0x148007720,384,set node:internal/streams/readable:131:8,0x32a18594c4a8,^
code-source-info,0x148007720,91,3861,3947,,,
code-creation,JS,10,47666,0x1480078c0,384,set node:internal/streams/writable:130:8,0x32a1859584b0,^
code-source-info,0x1480078c0,96,3942,4028,,,
code-creation,JS,10,47666,0x148007a60,536,ensureTimerFlagsAreUpdated node:internal/util/debuglog:384:38,0x3699125e6ca8,^
code-source-info,0x148007a60,19,9832,9950,,,
code-creation,JS,10,47708,0x148007ca0,680,normalizeRequirableId node:internal/bootstrap/realm:299:31,0x3699125c4978,^
code-source-info,0x148007ca0,6,9741,10065,,,
code-creation,JS,10,47708,0x148007f80,464,reportModuleToWatchMode node:internal/modules/cjs/loader:301:33,0x1f26757000d0,^
code-source-info,0x148007f80,65,8361,8485,,,
code-creation,JS,10,47708,0x148008180,2688,basename node:path:1433:11,0xb1c4a40ac18,^
code-source-info,0x148008180,37,44007,46429,,,
tick,0x1937c8b60,47708,0,0x0,9,0x3231531c640f,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531c5b7a,0x3231531c796c,0x3231531ce15f,0x3231531cb7b2,0x3231531cb48d,0x3231531cb0b8,0x277c96e814b5
code-creation,JS,11,47708,0x148008c20,2812,normalizeString node:path:89:25,0xb1c4a4098d0,+'
code-source-info,0x148008c20,37,2865,4781,,,
code-creation,Eval,9,47750,0x277c96e98c70,5, /opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js:1:1,0x1db37b2675b0,~
script-source,119,/opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js,'use strict'\n\nprocess.on('SIGINT'\x2C () => process.exit())\nprocess.on('SIGTERM'\x2C () => process.exit())\n
code-source-info,0x277c96e98c70,119,0,101,C0O0C4O101,,
code-creation,JS,9,47750,0x277c96e98d40,48, /opt/homebrew/lib/node_modules/0x/lib/preload/soft-exit.js:1:1,0x1db37b267680,~
code-source-info,0x277c96e98d40,119,0,101,C0O14C4O22C17O22C23O57C27O65C40O65C47O100,,
code-creation,Eval,9,48041,0x277c96e98ea8,5, /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:1:1,0x1db37b268738,~
script-source,120,/Users/zl/Desktop/learn/node-learn/node-day6/heavy.js,// heavy.js\nfunction heavy() {\n  let total = 0;\n  for (let i = 0; i < 1e9; i++) {\n    total += i;\n  }\n  return total;\n}\n\nconsole.time('heavy');\nconsole.log(heavy());\nconsole.timeEnd('heavy');
code-source-info,0x277c96e98ea8,120,0,191,C0O0C4O191,,
code-creation,JS,9,48041,0x277c96e98f60,59, /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:1:1,0x1db37b268808,~
code-source-info,0x277c96e98f60,120,0,191,C0O0C5O121C9O129C17O129C22O144C26O152C31O156C35O152C40O166C44O174C52O174C58O190,,
code-creation,JS,9,48083,0x277c96e99010,36,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,~
code-source-info,0x277c96e99010,120,26,119,C0O45C2O63C4O68C10O68C15O86C17O95C24O76C29O50C33O104C35O117,,
code-creation,JS,10,48166,0x148009800,264,setOwnProperty node:internal/util:736:24,0x3699125d9cb0,^
code-source-info,0x148009800,13,20504,20671,,,
code-creation,JS,10,48291,0x148009940,448,assertEncoding node:internal/fs/utils:153:24,0xb1c4a42a3f8,^
script-source,51,node:internal/fs/utils,'use strict';\n\nconst {\n  ArrayIsArray\x2C\n  BigInt\x2C\n  Date\x2C\n  DateNow\x2C\n  DatePrototypeGetTime\x2C\n  ErrorCaptureStackTrace\x2C\n  FunctionPrototypeCall\x2C\n  MathMin\x2C\n  MathRound\x2C\n  Number\x2C\n  NumberIsFinite\x2C\n  ObjectDefineProperties\x2C\n  ObjectDefineProperty\x2C\n  ObjectIs\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectApply\x2C\n  ReflectOwnKeys\x2C\n  RegExpPrototypeSymbolReplace\x2C\n  StringPrototypeEndsWith\x2C\n  StringPrototypeIncludes\x2C\n  Symbol\x2C\n  TypedArrayPrototypeAt\x2C\n  TypedArrayPrototypeIncludes\x2C\n} = primordials;\n\nconst { Buffer } = require('buffer');\nconst {\n  UVException\x2C\n  codes: {\n    ERR_FS_EISDIR\x2C\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_OUT_OF_RANGE\x2C\n  }\x2C\n  hideStackFrames\x2C\n} = require('internal/errors');\nconst {\n  isArrayBufferView\x2C\n  isBigInt64Array\x2C\n  isDate\x2C\n  isUint8Array\x2C\n} = require('internal/util/types');\nconst {\n  kEmptyObject\x2C\n  once\x2C\n  deprecate\x2C\n  isWindows\x2C\n} = require('internal/util');\nconst { toPathIfFileURL } = require('internal/url');\nconst {\n  validateAbortSignal\x2C\n  validateBoolean\x2C\n  validateFunction\x2C\n  validateInt32\x2C\n  validateInteger\x2C\n  validateObject\x2C\n  validateUint32\x2C\n} = require('internal/validators');\nconst pathModule = require('path');\nconst kType = Symbol('type');\nconst kStats = Symbol('stats');\nconst assert = require('internal/assert');\n\nconst {\n  fs: {\n    F_OK = 0\x2C\n    W_OK = 0\x2C\n    R_OK = 0\x2C\n    X_OK = 0\x2C\n    COPYFILE_EXCL\x2C\n    COPYFILE_FICLONE\x2C\n    COPYFILE_FICLONE_FORCE\x2C\n    O_APPEND\x2C\n    O_CREAT\x2C\n    O_EXCL\x2C\n    O_RDONLY\x2C\n    O_RDWR\x2C\n    O_SYNC\x2C\n    O_TRUNC\x2C\n    O_WRONLY\x2C\n    S_IFBLK\x2C\n    S_IFCHR\x2C\n    S_IFDIR\x2C\n    S_IFIFO\x2C\n    S_IFLNK\x2C\n    S_IFMT\x2C\n    S_IFREG\x2C\n    S_IFSOCK\x2C\n    UV_FS_SYMLINK_DIR\x2C\n    UV_FS_SYMLINK_JUNCTION\x2C\n    UV_DIRENT_UNKNOWN\x2C\n    UV_DIRENT_FILE\x2C\n    UV_DIRENT_DIR\x2C\n    UV_DIRENT_LINK\x2C\n    UV_DIRENT_FIFO\x2C\n    UV_DIRENT_SOCKET\x2C\n    UV_DIRENT_CHAR\x2C\n    UV_DIRENT_BLOCK\x2C\n  }\x2C\n  os: {\n    errno: {\n      EISDIR\x2C\n    }\x2C\n  }\x2C\n} = internalBinding('constants');\n\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\n// available on specific systems. They can be used in combination as well\n// (F_OK | R_OK | W_OK | X_OK).\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\n\nconst kDefaultCopyMode = 0;\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\nconst kMinimumCopyMode = MathMin(\n  kDefaultCopyMode\x2C\n  COPYFILE_EXCL\x2C\n  COPYFILE_FICLONE\x2C\n  COPYFILE_FICLONE_FORCE\x2C\n);\nconst kMaximumCopyMode = COPYFILE_EXCL |\n                         COPYFILE_FICLONE |\n                         COPYFILE_FICLONE_FORCE;\n\n// Most platforms don't allow reads or writes >= 2 GiB.\n// See https://github.com/libuv/libuv/pull/1501.\nconst kIoMaxLength = 2 ** 31 - 1;\n\n// Use 64kb in case the file type is not a regular file and thus do not know the\n// actual file size. Increasing the value further results in more frequent over\n// allocation for small files and consumes CPU time and memory that should be\n// used else wise.\n// Use up to 512kb per read otherwise to partition reading big files to prevent\n// blocking other threads in case the available threads are all in use.\nconst kReadFileUnknownBufferLength = 64 * 1024;\nconst kReadFileBufferLength = 512 * 1024;\n\nconst kWriteFileMaxChunkSize = 512 * 1024;\n\nconst kMaxUserId = 2 ** 32 - 1;\n\nlet fs;\nfunction lazyLoadFs() {\n  return fs ??= require('fs');\n}\n\nfunction assertEncoding(encoding) {\n  if (encoding && !Buffer.isEncoding(encoding)) {\n    const reason = 'is invalid encoding';\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C reason);\n  }\n}\n\nclass Dirent {\n  constructor(name\x2C type\x2C path) {\n    this.name = name;\n    this.parentPath = path;\n    this[kType] = type;\n  }\n\n  isDirectory() {\n    return this[kType] === UV_DIRENT_DIR;\n  }\n\n  isFile() {\n    return this[kType] === UV_DIRENT_FILE;\n  }\n\n  isBlockDevice() {\n    return this[kType] === UV_DIRENT_BLOCK;\n  }\n\n  isCharacterDevice() {\n    return this[kType] === UV_DIRENT_CHAR;\n  }\n\n  isSymbolicLink() {\n    return this[kType] === UV_DIRENT_LINK;\n  }\n\n  isFIFO() {\n    return this[kType] === UV_DIRENT_FIFO;\n  }\n\n  isSocket() {\n    return this[kType] === UV_DIRENT_SOCKET;\n  }\n}\n\nclass DirentFromStats extends Dirent {\n  constructor(name\x2C stats\x2C path) {\n    super(name\x2C null\x2C path);\n    this[kStats] = stats;\n  }\n}\n\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\n  if (name === 'constructor') {\n    continue;\n  }\n  DirentFromStats.prototype[name] = function() {\n    return this[kStats][name]();\n  };\n}\n\nfunction copyObject(source) {\n  const target = {};\n  for (const key in source)\n    target[key] = source[key];\n  return target;\n}\n\nconst bufferSep = Buffer.from(pathModule.sep);\n\nfunction join(path\x2C name) {\n  if ((typeof path === 'string' || isUint8Array(path)) &&\n      name === undefined) {\n    return path;\n  }\n\n  if (typeof path === 'string' && isUint8Array(name)) {\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\n    return Buffer.concat([pathBuffer\x2C name]);\n  }\n\n  if (typeof path === 'string' && typeof name === 'string') {\n    return pathModule.join(path\x2C name);\n  }\n\n  if (isUint8Array(path) && isUint8Array(name)) {\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\n  }\n\n  throw new ERR_INVALID_ARG_TYPE(\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\n}\n\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\n  let i;\n  if (typeof callback === 'function') {\n    const len = names.length;\n    let toFinish = 0;\n    callback = once(callback);\n    for (i = 0; i < len; i++) {\n      const type = types[i];\n      if (type === UV_DIRENT_UNKNOWN) {\n        const name = names[i];\n        const idx = i;\n        toFinish++;\n        let filepath;\n        try {\n          filepath = join(path\x2C name);\n        } catch (err) {\n          callback(err);\n          return;\n        }\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n          if (err) {\n            callback(err);\n            return;\n          }\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\n          if (--toFinish === 0) {\n            callback(null\x2C names);\n          }\n        });\n      } else {\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\n      }\n    }\n    if (toFinish === 0) {\n      callback(null\x2C names);\n    }\n  } else {\n    const len = names.length;\n    for (i = 0; i < len; i++) {\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\n    }\n    return names;\n  }\n}\n\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\n  if (typeof callback === 'function') {\n    if (type === UV_DIRENT_UNKNOWN) {\n      let filepath;\n      try {\n        filepath = join(path\x2C name);\n      } catch (err) {\n        callback(err);\n        return;\n      }\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\n        if (err) {\n          callback(err);\n          return;\n        }\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C path));\n      });\n    } else {\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\n    }\n  } else if (type === UV_DIRENT_UNKNOWN) {\n    const filepath = join(path\x2C name);\n    const stats = lazyLoadFs().lstatSync(filepath);\n    return new DirentFromStats(name\x2C stats\x2C path);\n  } else {\n    return new Dirent(name\x2C type\x2C path);\n  }\n}\n\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\n  if (options == null || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  if (typeof options === 'string') {\n    defaultOptions = { ...defaultOptions };\n    defaultOptions.encoding = options;\n    options = defaultOptions;\n  } else if (typeof options !== 'object') {\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\n  }\n\n  if (options.encoding !== 'buffer')\n    assertEncoding(options.encoding);\n\n  if (options.signal !== undefined) {\n    validateAbortSignal(options.signal\x2C 'options.signal');\n  }\n\n  return options;\n}\n\n/**\n * @param {InternalFSBinding.FSSyncContext} ctx\n */\nfunction handleErrorFromBinding(ctx) {\n  if (ctx.errno !== undefined) {  // libuv error numbers\n    const err = new UVException(ctx);\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\n    throw err;\n  }\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\n    // usually caused by memory problems. We need to figure out proper error\n    // code(s) for this.\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\n    throw ctx.error;\n  }\n}\n\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\n  if (!isWindows) {\n    // No preprocessing is needed on Unix.\n    return path;\n  }\n  path = '' + path;\n  if (type === 'junction') {\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\n    // A relative target is relative to the link's parent directory.\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\n    return pathModule.toNamespacedPath(path);\n  }\n  if (pathModule.isAbsolute(path)) {\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\n    return pathModule.toNamespacedPath(path);\n  }\n  // Windows symlinks don't tolerate forward slashes.\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\n}\n\n// Constructor for file stats.\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                   ino\x2C size\x2C blocks) {\n  this.dev = dev;\n  this.mode = mode;\n  this.nlink = nlink;\n  this.uid = uid;\n  this.gid = gid;\n  this.rdev = rdev;\n  this.blksize = blksize;\n  this.ino = ino;\n  this.size = size;\n  this.blocks = blocks;\n}\n\nStatsBase.prototype.isDirectory = function() {\n  return this._checkModeProperty(S_IFDIR);\n};\n\nStatsBase.prototype.isFile = function() {\n  return this._checkModeProperty(S_IFREG);\n};\n\nStatsBase.prototype.isBlockDevice = function() {\n  return this._checkModeProperty(S_IFBLK);\n};\n\nStatsBase.prototype.isCharacterDevice = function() {\n  return this._checkModeProperty(S_IFCHR);\n};\n\nStatsBase.prototype.isSymbolicLink = function() {\n  return this._checkModeProperty(S_IFLNK);\n};\n\nStatsBase.prototype.isFIFO = function() {\n  return this._checkModeProperty(S_IFIFO);\n};\n\nStatsBase.prototype.isSocket = function() {\n  return this._checkModeProperty(S_IFSOCK);\n};\n\nconst kNsPerMsBigInt = 1_000_000n;\nconst kNsPerSecBigInt = 1_000_000_000n;\nconst kMsPerSec = 1_000;\nconst kNsPerMs = 1_000_000;\nfunction msFromTimeSpec(sec\x2C nsec) {\n  return sec * kMsPerSec + nsec / kNsPerMs;\n}\n\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\n  return sec * kNsPerSecBigInt + nsec;\n}\n\n// The Date constructor performs Math.floor() on the absolute value\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\n// Since there may be a precision loss when the timestamp is\n// converted to a floating point number\x2C we manually round\n// the timestamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\n// Refs: https://github.com/nodejs/node/pull/43714\nfunction dateFromMs(ms) {\n  // Coercing to number\x2C ms can be bigint\n  return new Date(MathRound(Number(ms)));\n}\n\nconst lazyDateFields = {\n  __proto__: null\x2C\n  atime: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return this.atime = dateFromMs(this.atimeMs);\n    }\x2C\n    set(value) {\n      ObjectDefineProperty(this\x2C 'atime'\x2C { __proto__: null\x2C value\x2C writable: true });\n    }\x2C\n  }\x2C\n  mtime: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return this.mtime = dateFromMs(this.mtimeMs);\n    }\x2C\n    set(value) {\n      ObjectDefineProperty(this\x2C 'mtime'\x2C { __proto__: null\x2C value\x2C writable: true });\n    }\x2C\n  }\x2C\n  ctime: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return this.ctime = dateFromMs(this.ctimeMs);\n    }\x2C\n    set(value) {\n      ObjectDefineProperty(this\x2C 'ctime'\x2C { __proto__: null\x2C value\x2C writable: true });\n    }\x2C\n  }\x2C\n  birthtime: {\n    __proto__: null\x2C\n    enumerable: true\x2C\n    configurable: true\x2C\n    get() {\n      return this.birthtime = dateFromMs(this.birthtimeMs);\n    }\x2C\n    set(value) {\n      ObjectDefineProperty(this\x2C 'birthtime'\x2C { __proto__: null\x2C value\x2C writable: true });\n    }\x2C\n  }\x2C\n};\n\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                     ino\x2C size\x2C blocks\x2C\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n                                 ino\x2C size\x2C blocks]);\n\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\n  this.atimeNs = atimeNs;\n  this.mtimeNs = mtimeNs;\n  this.ctimeNs = ctimeNs;\n  this.birthtimeNs = birthtimeNs;\n}\n\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\nObjectDefineProperties(BigIntStats.prototype\x2C lazyDateFields);\n\nBigIntStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\n};\n\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\n               ino\x2C size\x2C blocks\x2C\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\n                        blksize\x2C ino\x2C size\x2C blocks);\n  this.atimeMs = atimeMs;\n  this.mtimeMs = mtimeMs;\n  this.ctimeMs = ctimeMs;\n  this.birthtimeMs = birthtimeMs;\n}\n\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\nObjectSetPrototypeOf(Stats\x2C StatsBase);\nObjectDefineProperties(Stats.prototype\x2C lazyDateFields);\n\nStats.prototype._checkModeProperty = function(property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\n    property === S_IFSOCK)) {\n    return false;  // Some types are not available on Windows\n  }\n  return (this.mode & S_IFMT) === property;\n};\n\n/**\n * @param {Float64Array | BigInt64Array} stats\n * @param {number} offset\n * @returns {BigIntStats | Stats}\n */\nfunction getStatsFromBinding(stats\x2C offset = 0) {\n  if (isBigInt64Array(stats)) {\n    return new BigIntStats(\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n      stats[9 + offset]\x2C\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\n    );\n  }\n  return new Stats(\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\n    stats[9 + offset]\x2C\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\n  );\n}\n\nclass StatFs {\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\n    this.type = type;\n    this.bsize = bsize;\n    this.blocks = blocks;\n    this.bfree = bfree;\n    this.bavail = bavail;\n    this.files = files;\n    this.ffree = ffree;\n  }\n}\n\nfunction getStatFsFromBinding(stats) {\n  return new StatFs(\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\n  );\n}\n\nfunction stringToFlags(flags\x2C name = 'flags') {\n  if (typeof flags === 'number') {\n    validateInt32(flags\x2C name);\n    return flags;\n  }\n\n  if (flags == null) {\n    return O_RDONLY;\n  }\n\n  switch (flags) {\n    case 'r' : return O_RDONLY;\n    case 'rs' : // Fall through.\n    case 'sr' : return O_RDONLY | O_SYNC;\n    case 'r+' : return O_RDWR;\n    case 'rs+' : // Fall through.\n    case 'sr+' : return O_RDWR | O_SYNC;\n\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\n    case 'wx' : // Fall through.\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\n\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\n    case 'wx+': // Fall through.\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\n\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\n    case 'ax' : // Fall through.\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\n    case 'as' : // Fall through.\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\n\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\n    case 'ax+': // Fall through.\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\n    case 'as+': // Fall through.\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\n}\n\nconst stringToSymlinkType = hideStackFrames((type) => {\n  switch (type) {\n    case undefined:\n    case null:\n    case 'file':\n      return 0;\n    case 'dir':\n      return UV_FS_SYMLINK_DIR;\n    case 'junction':\n      return UV_FS_SYMLINK_JUNCTION;\n  }\n});\n\n// converts Date or number to a fractional UNIX timestamp\nfunction toUnixTimestamp(time\x2C name = 'time') {\n  // eslint-disable-next-line eqeqeq\n  if (typeof time === 'string' && +time == time) {\n    return +time;\n  }\n  if (NumberIsFinite(time)) {\n    if (time < 0) {\n      return DateNow() / 1000;\n    }\n    return time;\n  }\n  if (isDate(time)) {\n    // Convert to 123.456 UNIX timestamp\n    return DatePrototypeGetTime(time) / 1000;\n  }\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\n}\n\nconst validateOffsetLengthRead = hideStackFrames(\n  (offset\x2C length\x2C bufferLength) => {\n    if (offset < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\n    }\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n    if (offset + length > bufferLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\n                                                      `<= ${bufferLength - offset}`\x2C length);\n    }\n  }\x2C\n);\n\nconst validateOffsetLengthWrite = hideStackFrames(\n  (offset\x2C length\x2C byteLength) => {\n    if (offset > byteLength) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\n    }\n\n    if (length > byteLength - offset) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\n    }\n\n    if (length < 0) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\n    }\n\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\n  }\x2C\n);\n\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\n  if (typeof path !== 'string' && !isUint8Array(path)) {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\n  }\n\n  const pathIsString = typeof path === 'string';\n  const pathIsUint8Array = isUint8Array(path);\n\n  // We can only perform meaningful checks on strings and Uint8Arrays.\n  if ((!pathIsString && !pathIsUint8Array) ||\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\n    return;\n  }\n\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\n    propName\x2C\n    path\x2C\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\n  );\n});\n\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\n  const path = toPathIfFileURL(fileURLOrPath);\n  validatePath(path\x2C propName);\n  return path;\n});\n\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\n  if (ObjectIs(fd\x2C -0)) {\n    return 0;\n  }\n\n  validateInt32(fd\x2C propName\x2C 0);\n\n  return fd;\n});\n\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\n  if (!ArrayIsArray(buffers))\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n\n  for (let i = 0; i < buffers.length; i++) {\n    if (!isArrayBufferView(buffers[i]))\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\n  }\n\n  return buffers;\n});\n\nlet nonPortableTemplateWarn = true;\n\nfunction warnOnNonPortableTemplate(template) {\n  // Template strings passed to the mkdtemp() family of functions should not\n  // end with 'X' because they are handled inconsistently across platforms.\n  if (nonPortableTemplateWarn &&\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\n                        'For details see: https://nodejs.org/api/fs.html');\n    nonPortableTemplateWarn = false;\n  }\n}\n\nconst defaultCpOptions = {\n  dereference: false\x2C\n  errorOnExist: false\x2C\n  filter: undefined\x2C\n  force: true\x2C\n  preserveTimestamps: false\x2C\n  recursive: false\x2C\n  verbatimSymlinks: false\x2C\n};\n\nconst defaultRmOptions = {\n  recursive: false\x2C\n  force: false\x2C\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n};\n\nconst defaultRmdirOptions = {\n  retryDelay: 100\x2C\n  maxRetries: 0\x2C\n  recursive: false\x2C\n};\n\nconst validateCpOptions = hideStackFrames((options) => {\n  if (options === undefined)\n    return { ...defaultCpOptions };\n  validateObject(options\x2C 'options');\n  options = { ...defaultCpOptions\x2C ...options };\n  validateBoolean(options.dereference\x2C 'options.dereference');\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\n  validateBoolean(options.force\x2C 'options.force');\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\n  validateBoolean(options.recursive\x2C 'options.recursive');\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\n  if (options.dereference === true && options.verbatimSymlinks === true) {\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\n  }\n  if (options.filter !== undefined) {\n    validateFunction(options.filter\x2C 'options.filter');\n  }\n  return options;\n});\n\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\n  validateBoolean(options.force\x2C 'options.force');\n\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\n    if (err) {\n      if (options.force && err.code === 'ENOENT') {\n        return cb(null\x2C options);\n      }\n      return cb(err\x2C options);\n    }\n\n    if (expectDir && !stats.isDirectory()) {\n      return cb(false);\n    }\n\n    if (stats.isDirectory() && !options.recursive) {\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n\n      return cb(err);\n    }\n    return cb(null\x2C options);\n  });\n});\n\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\n\n  if (!options.force || expectDir || !options.recursive) {\n    const isDirectory = lazyLoadFs()\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\n\n    if (expectDir && !isDirectory) {\n      return false;\n    }\n\n    if (isDirectory && !options.recursive) {\n      throw new ERR_FS_EISDIR.HideStackFramesError({\n        code: 'EISDIR'\x2C\n        message: 'is a directory'\x2C\n        path\x2C\n        syscall: 'rm'\x2C\n        errno: EISDIR\x2C\n      });\n    }\n  }\n\n  return options;\n});\n\nlet recursiveRmdirWarned;\nfunction emitRecursiveRmdirWarning() {\n  if (recursiveRmdirWarned === undefined) {\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\n    recursiveRmdirWarned = process.noDeprecation;\n  }\n  if (!recursiveRmdirWarned) {\n    process.emitWarning(\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\n      'DeprecationWarning'\x2C\n      'DEP0147'\x2C\n    );\n    recursiveRmdirWarned = true;\n  }\n}\n\nconst validateRmdirOptions = hideStackFrames(\n  (options\x2C defaults = defaultRmdirOptions) => {\n    if (options === undefined)\n      return defaults;\n    validateObject.withoutStackTrace(options\x2C 'options');\n\n    options = { ...defaults\x2C ...options };\n\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\n\n    return options;\n  });\n\nconst getValidMode = hideStackFrames((mode\x2C type) => {\n  let min = kMinimumAccessMode;\n  let max = kMaximumAccessMode;\n  let def = F_OK;\n  if (type === 'copyFile') {\n    min = kMinimumCopyMode;\n    max = kMaximumCopyMode;\n    def = mode || kDefaultCopyMode;\n  } else {\n    assert(type === 'access');\n  }\n  if (mode == null) {\n    return def;\n  }\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\n  return mode;\n});\n\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\n  if (typeof buffer !== 'string') {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\n      name\x2C\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\n      buffer\x2C\n    );\n  }\n});\n\nconst validatePosition = hideStackFrames((position\x2C name\x2C length) => {\n  if (typeof position === 'number') {\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\n  } else if (typeof position === 'bigint') {\n    const maxPosition = 2n ** 63n - 1n - BigInt(length);\n    if (!(position >= -1n && position <= maxPosition)) {\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\n                                                      `>= -1 && <= ${maxPosition}`\x2C\n                                                      position);\n    }\n  } else {\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\n  }\n});\n\nmodule.exports = {\n  constants: {\n    kIoMaxLength\x2C\n    kMaxUserId\x2C\n    kReadFileBufferLength\x2C\n    kReadFileUnknownBufferLength\x2C\n    kWriteFileMaxChunkSize\x2C\n  }\x2C\n  assertEncoding\x2C\n  BigIntStats\x2C  // for testing\n  copyObject\x2C\n  Dirent\x2C\n  DirentFromStats\x2C\n  emitRecursiveRmdirWarning\x2C\n  getDirent\x2C\n  getDirents\x2C\n  getOptions\x2C\n  getValidatedFd\x2C\n  getValidatedPath\x2C\n  handleErrorFromBinding\x2C\n  preprocessSymlinkDestination\x2C\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\n  getStatFsFromBinding\x2C\n  getStatsFromBinding\x2C\n  stringToFlags\x2C\n  stringToSymlinkType\x2C\n  Stats: deprecate(Stats\x2C 'fs.Stats constructor is deprecated.'\x2C 'DEP0180')\x2C\n  toUnixTimestamp\x2C\n  validateBufferArray\x2C\n  validateCpOptions\x2C\n  validateOffsetLengthRead\x2C\n  validateOffsetLengthWrite\x2C\n  validatePath\x2C\n  validatePosition\x2C\n  validateRmOptions\x2C\n  validateRmOptionsSync\x2C\n  validateRmdirOptions\x2C\n  validateStringAfterArrayBufferView\x2C\n  warnOnNonPortableTemplate\x2C\n};\n
code-source-info,0x148009940,51,3551,3728,,,
code-creation,JS,10,48958,0x148009b20,1088,getOptions node:internal/fs/utils:318:20,0xb1c4a42b380,^
code-source-info,0x148009b20,51,7355,7962,,,
tick,0x1937c8a24,48958,0,0x0,9,0x277c96e9902d,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,JS,10,49208,0x148009f80,424,isURL node:internal/url:778:15,0xb1c4a40e5a0,^
script-source,38,node:internal/url,'use strict';\n\nconst {\n  Array\x2C\n  ArrayIsArray\x2C\n  ArrayPrototypeJoin\x2C\n  ArrayPrototypeMap\x2C\n  ArrayPrototypePush\x2C\n  ArrayPrototypeReduce\x2C\n  ArrayPrototypeSlice\x2C\n  Boolean\x2C\n  Int8Array\x2C\n  IteratorPrototype\x2C\n  Number\x2C\n  ObjectDefineProperties\x2C\n  ObjectSetPrototypeOf\x2C\n  ReflectGetOwnPropertyDescriptor\x2C\n  ReflectOwnKeys\x2C\n  SafeMap\x2C\n  SafeSet\x2C\n  StringPrototypeCharAt\x2C\n  StringPrototypeCharCodeAt\x2C\n  StringPrototypeCodePointAt\x2C\n  StringPrototypeIncludes\x2C\n  StringPrototypeIndexOf\x2C\n  StringPrototypeSlice\x2C\n  StringPrototypeStartsWith\x2C\n  StringPrototypeToWellFormed\x2C\n  Symbol\x2C\n  SymbolIterator\x2C\n  SymbolToStringTag\x2C\n  TypedArrayPrototypeGetBuffer\x2C\n  TypedArrayPrototypeGetByteLength\x2C\n  TypedArrayPrototypeGetByteOffset\x2C\n  decodeURIComponent\x2C\n} = primordials;\n\nconst { URLPattern } = internalBinding('url_pattern');\nconst { inspect } = require('internal/util/inspect');\nconst {\n  encodeStr\x2C\n  hexTable\x2C\n  isHexTable\x2C\n} = require('internal/querystring');\n\nconst {\n  getConstructorOf\x2C\n  removeColors\x2C\n  kEnumerableProperty\x2C\n  kEmptyObject\x2C\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\n  isWindows\x2C\n} = require('internal/util');\n\nconst {\n  platform\x2C\n} = require('internal/process/per_thread');\n\nconst {\n  markTransferMode\x2C\n} = require('internal/worker/js_transferable');\n\nconst {\n  codes: {\n    ERR_ARG_NOT_ITERABLE\x2C\n    ERR_INVALID_ARG_TYPE\x2C\n    ERR_INVALID_ARG_VALUE\x2C\n    ERR_INVALID_FILE_URL_HOST\x2C\n    ERR_INVALID_FILE_URL_PATH\x2C\n    ERR_INVALID_THIS\x2C\n    ERR_INVALID_TUPLE\x2C\n    ERR_INVALID_URL\x2C\n    ERR_INVALID_URL_SCHEME\x2C\n    ERR_MISSING_ARGS\x2C\n    ERR_NO_CRYPTO\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  CHAR_AMPERSAND\x2C\n  CHAR_BACKWARD_SLASH\x2C\n  CHAR_EQUAL\x2C\n  CHAR_FORWARD_SLASH\x2C\n  CHAR_LOWERCASE_A\x2C\n  CHAR_LOWERCASE_Z\x2C\n  CHAR_PERCENT\x2C\n  CHAR_PLUS\x2C\n  CHAR_COLON\x2C\n} = require('internal/constants');\nconst path = require('path');\nconst { Buffer } = require('buffer');\n\nconst {\n  validateFunction\x2C\n} = require('internal/validators');\n\nconst { percentDecode } = require('internal/data_url');\n\nconst querystring = require('querystring');\n\nconst bindingUrl = internalBinding('url');\n\nconst FORWARD_SLASH = /\\//g;\n\nconst contextForInspect = Symbol('context');\n\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\n// deliberately moved to `internal/url` rather than `url`.\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\n// is not initialized on bootstrap. This case breaks the\n// test-require-delete-array-iterator test.\n\n// Protocols that can allow "unsafe" and "unwise" chars.\nconst unsafeProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that never have a hostname.\nconst hostlessProtocol = new SafeSet([\n  'javascript'\x2C\n  'javascript:'\x2C\n]);\n// Protocols that always contain a // bit.\nconst slashedProtocol = new SafeSet([\n  'http'\x2C\n  'http:'\x2C\n  'https'\x2C\n  'https:'\x2C\n  'ftp'\x2C\n  'ftp:'\x2C\n  'gopher'\x2C\n  'gopher:'\x2C\n  'file'\x2C\n  'file:'\x2C\n  'ws'\x2C\n  'ws:'\x2C\n  'wss'\x2C\n  'wss:'\x2C\n]);\n\nconst updateActions = {\n  kProtocol: 0\x2C\n  kHost: 1\x2C\n  kHostname: 2\x2C\n  kPort: 3\x2C\n  kUsername: 4\x2C\n  kPassword: 5\x2C\n  kPathname: 6\x2C\n  kSearch: 7\x2C\n  kHash: 8\x2C\n  kHref: 9\x2C\n};\nlet blob;\nlet cryptoRandom;\n\nfunction lazyBlob() {\n  blob ??= require('internal/blob');\n  return blob;\n}\n\nfunction lazyCryptoRandom() {\n  try {\n    cryptoRandom ??= require('internal/crypto/random');\n  } catch {\n    // If Node.js built without crypto support\x2C we'll fall\n    // through here and handle it later.\n  }\n  return cryptoRandom;\n}\n\n// This class provides the internal state of a URL object. An instance of this\n// class is stored in every URL object and is accessed internally by setters\n// and getters. It roughly corresponds to the concept of a URL record in the\n// URL Standard\x2C with a few differences. It is also the object transported to\n// the C++ binding.\n// Refs: https://url.spec.whatwg.org/#concept-url\nclass URLContext {\n  // This is the maximum value uint32_t can get.\n  // Ada uses uint32_t(-1) for declaring omitted values.\n  static #omitted = 4294967295;\n\n  href = '';\n  protocol_end = 0;\n  username_end = 0;\n  host_start = 0;\n  host_end = 0;\n  pathname_start = 0;\n  search_start = 0;\n  hash_start = 0;\n  port = 0;\n  /**\n   * Refers to `ada::scheme::type`\n   *\n   * enum type : uint8_t {\n   *   HTTP = 0\x2C\n   *   NOT_SPECIAL = 1\x2C\n   *   HTTPS = 2\x2C\n   *   WS = 3\x2C\n   *   FTP = 4\x2C\n   *   WSS = 5\x2C\n   *   FILE = 6\n   * };\n   * @type {number}\n   */\n  scheme_type = 1;\n\n  get hasPort() {\n    return this.port !== URLContext.#omitted;\n  }\n\n  get hasSearch() {\n    return this.search_start !== URLContext.#omitted;\n  }\n\n  get hasHash() {\n    return this.hash_start !== URLContext.#omitted;\n  }\n}\n\nlet setURLSearchParamsModified;\nlet setURLSearchParamsContext;\nlet getURLSearchParamsList;\nlet setURLSearchParams;\n\nclass URLSearchParamsIterator {\n  #target;\n  #kind;\n  #index;\n\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\n  constructor(target\x2C kind) {\n    this.#target = target;\n    this.#kind = kind;\n    this.#index = 0;\n  }\n\n  next() {\n    if (typeof this !== 'object' || this === null || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const len = values.length;\n    if (index >= len) {\n      return {\n        value: undefined\x2C\n        done: true\x2C\n      };\n    }\n\n    const name = values[index];\n    const value = values[index + 1];\n    this.#index = index + 2;\n\n    let result;\n    if (this.#kind === 'key') {\n      result = name;\n    } else if (this.#kind === 'value') {\n      result = value;\n    } else {\n      result = [name\x2C value];\n    }\n\n    return {\n      value: result\x2C\n      done: false\x2C\n    };\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (!this || typeof this !== 'object' || !(#target in this))\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const index = this.#index;\n    const values = getURLSearchParamsList(this.#target);\n    const output = ArrayPrototypeReduce(\n      ArrayPrototypeSlice(values\x2C index)\x2C\n      (prev\x2C cur\x2C i) => {\n        const key = i % 2 === 0;\n        if (this.#kind === 'key' && key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'value' && !key) {\n          ArrayPrototypePush(prev\x2C cur);\n        } else if (this.#kind === 'key+value' && !key) {\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\n        }\n        return prev;\n      }\x2C\n      []\x2C\n    );\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\n    let outputStr;\n    if (breakLn) {\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\n    } else {\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\n    }\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\n  }\n}\n\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\ndelete URLSearchParamsIterator.prototype.constructor;\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\n\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\n  next: kEnumerableProperty\x2C\n});\n\n\nclass URLSearchParams {\n  #searchParams = [];\n\n  // "associated url object"\n  #context;\n\n  static {\n    setURLSearchParamsContext = (obj\x2C ctx) => {\n      obj.#context = ctx;\n    };\n    getURLSearchParamsList = (obj) => obj.#searchParams;\n    setURLSearchParams = (obj\x2C query) => {\n      if (query === undefined) {\n        obj.#searchParams = [];\n      } else {\n        obj.#searchParams = parseParams(query);\n      }\n    };\n  }\n\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\n  // accordance with Web IDL spec.\n  constructor(init = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (init == null) {\n      // Do nothing\n    } else if (typeof init === 'object' || typeof init === 'function') {\n      const method = init[SymbolIterator];\n      if (method === this[SymbolIterator] && #searchParams in init) {\n        // While the spec does not have this branch\x2C we can use it as a\n        // shortcut to avoid having to go through the costly generic iterator.\n        const childParams = init.#searchParams;\n        this.#searchParams = childParams.slice();\n      } else if (method != null) {\n        // Sequence<sequence<USVString>>\n        if (typeof method !== 'function') {\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\n        }\n\n        // The following implementation differs from the URL specification:\n        // Sequences must first be converted from ECMAScript objects before\n        // and operations are done on them\x2C and the operation of converting\n        // the sequences would first exhaust the iterators. If the iterator\n        // returns something invalid in the middle\x2C whether it would be called\n        // after that would be an observable change to the users.\n        // Exhausting the iterator and later converting them to USVString comes\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\n        // creation duration\x2C Node.js merges the iteration and converting\n        // iterations into a single iteration.\n        for (const pair of init) {\n          if (pair == null) {\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n          } else if (ArrayIsArray(pair)) {\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (pair.length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n            // Append (innerSequence[0]\x2C innerSequence[1]) to query's list.\n            ArrayPrototypePush(\n              this.#searchParams\x2C\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\n            );\n          } else {\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\n                typeof pair[SymbolIterator] !== 'function')) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n\n            let length = 0;\n\n            for (const element of pair) {\n              length++;\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\n            }\n\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\n            if (length !== 2) {\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\n            }\n          }\n        }\n      } else {\n        // Record<USVString\x2C USVString>\n        // Need to use reflection APIs for full spec compliance.\n        const visited = new SafeMap();\n        const keys = ReflectOwnKeys(init);\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i];\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\n          if (desc !== undefined && desc.enumerable) {\n            const typedKey = StringPrototypeToWellFormed(key);\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\n\n            // Two different keys may become the same USVString after normalization.\n            // In that case\x2C we retain the later one. Refer to WPT.\n            const keyIdx = visited.get(typedKey);\n            if (keyIdx !== undefined) {\n              this.#searchParams[keyIdx] = typedValue;\n            } else {\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\n                                                       typedKey\x2C\n                                                       typedValue) - 1);\n            }\n          }\n        }\n      }\n    } else {\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\n      init = StringPrototypeToWellFormed(`${init}`);\n      this.#searchParams = init ? parseParams(init) : [];\n    }\n  }\n\n  [inspect.custom](recurseTimes\x2C ctx) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\n      return ctx.stylize('[Object]'\x2C 'special');\n\n    const separator = '\x2C ';\n    const innerOpts = { ...ctx };\n    if (recurseTimes !== null) {\n      innerOpts.depth = recurseTimes - 1;\n    }\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\n\n    const list = this.#searchParams;\n    const output = [];\n    for (let i = 0; i < list.length; i += 2)\n      ArrayPrototypePush(\n        output\x2C\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\n\n    const length = ArrayPrototypeReduce(\n      output\x2C\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\n      -separator.length\x2C\n    );\n    if (length > ctx.breakLength) {\n      return `${this.constructor.name} {\\n` +\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\n    } else if (output.length) {\n      return `${this.constructor.name} { ` +\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\n    }\n    return `${this.constructor.name} {}`;\n  }\n\n  get size() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n    return this.#searchParams.length / 2;\n  }\n\n  append(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  delete(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name && list[i + 1] === value) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    } else {\n      for (let i = 0; i < list.length;) {\n        if (list[i] === name) {\n          list.splice(i\x2C 2);\n        } else {\n          i += 2;\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  get(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        return list[i + 1];\n      }\n    }\n    return null;\n  }\n\n  getAll(name) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    const values = [];\n    name = StringPrototypeToWellFormed(`${name}`);\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        values.push(list[i + 1]);\n      }\n    }\n    return values;\n  }\n\n  has(name\x2C value = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 1) {\n      throw new ERR_MISSING_ARGS('name');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n\n    if (value !== undefined) {\n      value = StringPrototypeToWellFormed(`${value}`);\n    }\n\n    for (let i = 0; i < list.length; i += 2) {\n      if (list[i] === name) {\n        if (value === undefined || list[i + 1] === value) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  set(name\x2C value) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    if (arguments.length < 2) {\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\n    }\n\n    const list = this.#searchParams;\n    name = StringPrototypeToWellFormed(`${name}`);\n    value = StringPrototypeToWellFormed(`${value}`);\n\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\n    // the value of the first such name-value pair to `value` and remove the\n    // others.\n    let found = false;\n    for (let i = 0; i < list.length;) {\n      const cur = list[i];\n      if (cur === name) {\n        if (!found) {\n          list[i + 1] = value;\n          found = true;\n          i += 2;\n        } else {\n          list.splice(i\x2C 2);\n        }\n      } else {\n        i += 2;\n      }\n    }\n\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\n    // is `value`\x2C to `list`.\n    if (!found) {\n      ArrayPrototypePush(list\x2C name\x2C value);\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  sort() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    const a = this.#searchParams;\n    const len = a.length;\n\n    if (len <= 2) {\n      // Nothing needs to be done.\n    } else if (len < 100) {\n      // 100 is found through testing.\n      // Simple stable in-place insertion sort\n      // Derived from v8/src/js/array.js\n      for (let i = 2; i < len; i += 2) {\n        const curKey = a[i];\n        const curVal = a[i + 1];\n        let j;\n        for (j = i - 2; j >= 0; j -= 2) {\n          if (a[j] > curKey) {\n            a[j + 2] = a[j];\n            a[j + 3] = a[j + 1];\n          } else {\n            break;\n          }\n        }\n        a[j + 2] = curKey;\n        a[j + 3] = curVal;\n      }\n    } else {\n      // Bottom-up iterative stable merge sort\n      const lBuffer = new Array(len);\n      const rBuffer = new Array(len);\n      for (let step = 2; step < len; step *= 2) {\n        for (let start = 0; start < len - 2; start += 2 * step) {\n          const mid = start + step;\n          let end = mid + step;\n          end = end < len ? end : len;\n          if (mid > end)\n            continue;\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\n        }\n      }\n    }\n\n    if (this.#context) {\n      setURLSearchParamsModified(this.#context);\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterators\n  // Define entries here rather than [Symbol.iterator] as the function name\n  // must be set to `entries`.\n  entries() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key+value');\n  }\n\n  forEach(callback\x2C thisArg = undefined) {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    validateFunction(callback\x2C 'callback');\n\n    let list = this.#searchParams;\n\n    let i = 0;\n    while (i < list.length) {\n      const key = list[i];\n      const value = list[i + 1];\n      callback.call(thisArg\x2C value\x2C key\x2C this);\n      // In case the URL object's `search` is updated\n      list = this.#searchParams;\n      i += 2;\n    }\n  }\n\n  // https://heycam.github.io/webidl/#es-iterable\n  keys() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'key');\n  }\n\n  values() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return new URLSearchParamsIterator(this\x2C 'value');\n  }\n\n  // https://heycam.github.io/webidl/#es-stringifier\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\n  toString() {\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\n      throw new ERR_INVALID_THIS('URLSearchParams');\n\n    return serializeParams(this.#searchParams);\n  }\n}\n\nObjectDefineProperties(URLSearchParams.prototype\x2C {\n  append: kEnumerableProperty\x2C\n  delete: kEnumerableProperty\x2C\n  get: kEnumerableProperty\x2C\n  getAll: kEnumerableProperty\x2C\n  has: kEnumerableProperty\x2C\n  set: kEnumerableProperty\x2C\n  size: kEnumerableProperty\x2C\n  sort: kEnumerableProperty\x2C\n  entries: kEnumerableProperty\x2C\n  forEach: kEnumerableProperty\x2C\n  keys: kEnumerableProperty\x2C\n  values: kEnumerableProperty\x2C\n  toString: kEnumerableProperty\x2C\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\n\n  // https://heycam.github.io/webidl/#es-iterable-entries\n  [SymbolIterator]: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    value: URLSearchParams.prototype.entries\x2C\n  }\x2C\n});\n\n/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n * @param {*} self\n * @returns {self is URL}\n */\nfunction isURL(self) {\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\n}\n\n/**\n * A unique symbol used as a private identifier to safely invoke the URL constructor\n * with a special parsing behavior. When passed as the third argument to the URL\n * constructor\x2C it signals that the constructor should not throw an exception\n * for invalid URL inputs.\n */\nconst kParseURLSymbol = Symbol('kParseURL');\nconst kCreateURLFromPosixPathSymbol = Symbol('kCreateURLFromPosixPath');\nconst kCreateURLFromWindowsPathSymbol = Symbol('kCreateURLFromWindowsPath');\n\nclass URL {\n  #context = new URLContext();\n  #searchParams;\n  #searchParamsModified;\n\n  static {\n    setURLSearchParamsModified = (obj) => {\n      // When URLSearchParams changes\x2C we lazily update URL on the next read/write for performance.\n      obj.#searchParamsModified = true;\n\n      // If URL has an existing search\x2C remove it without cascading back to URLSearchParams.\n      // Do this to avoid any internal confusion about whether URLSearchParams or URL is up-to-date.\n      if (obj.#context.hasSearch) {\n        obj.#updateContext(bindingUrl.update(obj.#context.href\x2C updateActions.kSearch\x2C ''));\n      }\n    };\n  }\n\n  constructor(input\x2C base = undefined\x2C parseSymbol = undefined) {\n    markTransferMode(this\x2C false\x2C false);\n\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    // StringPrototypeToWellFormed is not needed.\n    input = `${input}`;\n\n    if (base !== undefined) {\n      base = `${base}`;\n    }\n\n    let href;\n    if (arguments.length < 3) {\n      href = bindingUrl.parse(input\x2C base\x2C true);\n    } else {\n      const raiseException = parseSymbol !== kParseURLSymbol;\n      const interpretAsWindowsPath = parseSymbol === kCreateURLFromWindowsPathSymbol;\n      const pathToFileURL = interpretAsWindowsPath || (parseSymbol === kCreateURLFromPosixPathSymbol);\n      href = pathToFileURL ?\n        bindingUrl.pathToFileURL(input\x2C interpretAsWindowsPath\x2C base) :\n        bindingUrl.parse(input\x2C base\x2C raiseException);\n    }\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  static parse(input\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n    const parsedURLObject = new URL(input\x2C base\x2C kParseURLSymbol);\n    return parsedURLObject.href ? parsedURLObject : null;\n  }\n\n  [inspect.custom](depth\x2C opts) {\n    if (typeof depth === 'number' && depth < 0)\n      return this;\n\n    const constructor = getConstructorOf(this) || URL;\n    const obj = { __proto__: { constructor } };\n\n    obj.href = this.href;\n    obj.origin = this.origin;\n    obj.protocol = this.protocol;\n    obj.username = this.username;\n    obj.password = this.password;\n    obj.host = this.host;\n    obj.hostname = this.hostname;\n    obj.port = this.port;\n    obj.pathname = this.pathname;\n    obj.search = this.search;\n    obj.searchParams = this.searchParams;\n    obj.hash = this.hash;\n\n    if (opts.showHidden) {\n      obj[contextForInspect] = this.#context;\n    }\n\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\n  }\n\n  #getSearchFromContext() {\n    if (!this.#context.hasSearch) return '';\n    let endsAt = this.#context.href.length;\n    if (this.#context.hasHash) endsAt = this.#context.hash_start;\n    if (endsAt - this.#context.search_start <= 1) return '';\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\n  }\n\n  #getSearchFromParams() {\n    if (!this.#searchParams?.size) return '';\n    return `?${this.#searchParams}`;\n  }\n\n  #ensureSearchParamsUpdated() {\n    // URL is updated lazily to greatly improve performance when URLSearchParams is updated repeatedly.\n    // If URLSearchParams has been modified\x2C reflect that back into URL\x2C without cascading back.\n    if (this.#searchParamsModified) {\n      this.#searchParamsModified = false;\n      this.#updateContext(bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C this.#getSearchFromParams()));\n    }\n  }\n\n  /**\n   * Update the internal context state for URL.\n   * @param {string} href New href string from `bindingUrl.update`.\n   * @param {boolean} [shouldUpdateSearchParams] If the update has potential to update search params (href/search).\n   */\n  #updateContext(href\x2C shouldUpdateSearchParams = false) {\n    const previousSearch = shouldUpdateSearchParams && this.#searchParams &&\n      (this.#searchParamsModified ? this.#getSearchFromParams() : this.#getSearchFromContext());\n\n    this.#context.href = href;\n\n    const {\n      0: protocol_end\x2C\n      1: username_end\x2C\n      2: host_start\x2C\n      3: host_end\x2C\n      4: port\x2C\n      5: pathname_start\x2C\n      6: search_start\x2C\n      7: hash_start\x2C\n      8: scheme_type\x2C\n    } = bindingUrl.urlComponents;\n\n    this.#context.protocol_end = protocol_end;\n    this.#context.username_end = username_end;\n    this.#context.host_start = host_start;\n    this.#context.host_end = host_end;\n    this.#context.port = port;\n    this.#context.pathname_start = pathname_start;\n    this.#context.search_start = search_start;\n    this.#context.hash_start = hash_start;\n    this.#context.scheme_type = scheme_type;\n\n    if (this.#searchParams) {\n      // If the search string has updated\x2C URL becomes the source of truth\x2C and we update URLSearchParams.\n      // Only do this when we're expecting it to have changed\x2C otherwise a change to hash etc.\n      // would incorrectly compare the URLSearchParams state to the empty URL search state.\n      if (shouldUpdateSearchParams) {\n        const currentSearch = this.#getSearchFromContext();\n        if (previousSearch !== currentSearch) {\n          setURLSearchParams(this.#searchParams\x2C currentSearch);\n          this.#searchParamsModified = false;\n        }\n      }\n\n      // If we have a URLSearchParams\x2C ensure that URL is up-to-date with any modification to it.\n      this.#ensureSearchParamsUpdated();\n    }\n  }\n\n  toString() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  get href() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  set href(value) {\n    value = `${value}`;\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\n    if (!href) { throw new ERR_INVALID_URL(value); }\n    this.#updateContext(href\x2C true);\n  }\n\n  // readonly\n  get origin() {\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n\n    // Check if scheme_type is not `NOT_SPECIAL`\n    if (this.#context.scheme_type !== 1) {\n      // Check if scheme_type is `FILE`\n      if (this.#context.scheme_type === 6) {\n        return 'null';\n      }\n      return `${protocol}//${this.host}`;\n    }\n\n    if (protocol === 'blob:') {\n      const path = this.pathname;\n      if (path.length > 0) {\n        try {\n          const out = new URL(path);\n          // Only return origin of scheme is `http` or `https`\n          // Otherwise return a new opaque origin (null).\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\n            return `${out.protocol}//${out.host}`;\n          }\n        } catch {\n          // Do nothing.\n        }\n      }\n    }\n\n    return 'null';\n  }\n\n  get protocol() {\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\n  }\n\n  set protocol(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get username() {\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\n    }\n    return '';\n  }\n\n  set username(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get password() {\n    if (this.#context.host_start - this.#context.username_end > 0) {\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\n    }\n    return '';\n  }\n\n  set password(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get host() {\n    let startsAt = this.#context.host_start;\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    // If we have an empty host\x2C then the space between components.host_end and\n    // components.pathname_start may be occupied by /.\n    if (startsAt === this.#context.host_end) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\n  }\n\n  set host(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get hostname() {\n    let startsAt = this.#context.host_start;\n    // host_start might be "@" if the URL has credentials\n    if (this.#context.href[startsAt] === '@') {\n      startsAt++;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\n  }\n\n  set hostname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get port() {\n    if (this.#context.hasPort) {\n      return `${this.#context.port}`;\n    }\n    return '';\n  }\n\n  set port(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get pathname() {\n    let endsAt;\n    if (this.#context.hasSearch) {\n      endsAt = this.#context.search_start;\n    } else if (this.#context.hasHash) {\n      endsAt = this.#context.hash_start;\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\n  }\n\n  set pathname(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  get search() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#getSearchFromContext();\n  }\n\n  set search(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\n    if (href) {\n      this.#updateContext(href\x2C true);\n    }\n  }\n\n  // readonly\n  get searchParams() {\n    // Create URLSearchParams on demand to greatly improve the URL performance.\n    if (this.#searchParams == null) {\n      this.#searchParams = new URLSearchParams(this.#getSearchFromContext());\n      setURLSearchParamsContext(this.#searchParams\x2C this);\n      this.#searchParamsModified = false;\n    }\n    return this.#searchParams;\n  }\n\n  get hash() {\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\n      return '';\n    }\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\n  }\n\n  set hash(value) {\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\n    if (href) {\n      this.#updateContext(href);\n    }\n  }\n\n  toJSON() {\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\n    this.#ensureSearchParamsUpdated();\n    return this.#context.href;\n  }\n\n  static canParse(url\x2C base = undefined) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    url = `${url}`;\n\n    if (base !== undefined) {\n      return bindingUrl.canParse(url\x2C `${base}`);\n    }\n\n    // It is important to differentiate the canParse call statements\n    // since they resolve into different v8 fast api overloads.\n    return bindingUrl.canParse(url);\n  }\n}\n\nObjectDefineProperties(URL.prototype\x2C {\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\n  toString: kEnumerableProperty\x2C\n  href: kEnumerableProperty\x2C\n  origin: kEnumerableProperty\x2C\n  protocol: kEnumerableProperty\x2C\n  username: kEnumerableProperty\x2C\n  password: kEnumerableProperty\x2C\n  host: kEnumerableProperty\x2C\n  hostname: kEnumerableProperty\x2C\n  port: kEnumerableProperty\x2C\n  pathname: kEnumerableProperty\x2C\n  search: kEnumerableProperty\x2C\n  searchParams: kEnumerableProperty\x2C\n  hash: kEnumerableProperty\x2C\n  toJSON: kEnumerableProperty\x2C\n});\n\nObjectDefineProperties(URL\x2C {\n  canParse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n  parse: {\n    __proto__: null\x2C\n    configurable: true\x2C\n    writable: true\x2C\n    enumerable: true\x2C\n  }\x2C\n});\n\nfunction installObjectURLMethods() {\n  const bindingBlob = internalBinding('blob');\n\n  function createObjectURL(obj) {\n    const cryptoRandom = lazyCryptoRandom();\n    if (cryptoRandom === undefined)\n      throw new ERR_NO_CRYPTO();\n\n    const blob = lazyBlob();\n    if (!blob.isBlob(obj))\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\n\n    const id = cryptoRandom.randomUUID();\n\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\n\n    return `blob:nodedata:${id}`;\n  }\n\n  function revokeObjectURL(url) {\n    if (arguments.length === 0) {\n      throw new ERR_MISSING_ARGS('url');\n    }\n\n    bindingBlob.revokeObjectURL(`${url}`);\n  }\n\n  ObjectDefineProperties(URL\x2C {\n    createObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: createObjectURL\x2C\n    }\x2C\n    revokeObjectURL: {\n      __proto__: null\x2C\n      configurable: true\x2C\n      writable: true\x2C\n      enumerable: true\x2C\n      value: revokeObjectURL\x2C\n    }\x2C\n  });\n}\n\n// application/x-www-form-urlencoded parser\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\nfunction parseParams(qs) {\n  const out = [];\n  let seenSep = false;\n  let buf = '';\n  let encoded = false;\n  let encodeCheck = 0;\n  let i = qs[0] === '?' ? 1 : 0;\n  let pairStart = i;\n  let lastPos = i;\n  for (; i < qs.length; ++i) {\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\n\n    // Try matching key/value pair separator\n    if (code === CHAR_AMPERSAND) {\n      if (pairStart === i) {\n        // We saw an empty substring between pair separators\n        lastPos = pairStart = i + 1;\n        continue;\n      }\n\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      // If `buf` is the key\x2C add an empty value.\n      if (!seenSep)\n        out.push('');\n\n      seenSep = false;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = pairStart = i + 1;\n      continue;\n    }\n\n    // Try matching key/value separator (e.g. '=') if we haven't already\n    if (!seenSep && code === CHAR_EQUAL) {\n      // Key/value separator match!\n      if (lastPos < i)\n        buf += qs.slice(lastPos\x2C i);\n      if (encoded)\n        buf = querystring.unescape(buf);\n      out.push(buf);\n\n      seenSep = true;\n      buf = '';\n      encoded = false;\n      encodeCheck = 0;\n      lastPos = i + 1;\n      continue;\n    }\n\n    // Handle + and percent decoding.\n    if (code === CHAR_PLUS) {\n      if (lastPos < i)\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n      buf += ' ';\n      lastPos = i + 1;\n    } else if (!encoded) {\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\n      // calls to string decoding functions\n      if (code === CHAR_PERCENT) {\n        encodeCheck = 1;\n      } else if (encodeCheck > 0) {\n        if (isHexTable[code] === 1) {\n          if (++encodeCheck === 3) {\n            encoded = true;\n          }\n        } else {\n          encodeCheck = 0;\n        }\n      }\n    }\n  }\n\n  // Deal with any leftover key or value data\n\n  // There is a trailing &. No more processing is needed.\n  if (pairStart === i)\n    return out;\n\n  if (lastPos < i)\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\n  if (encoded)\n    buf = querystring.unescape(buf);\n  ArrayPrototypePush(out\x2C buf);\n\n  // If `buf` is the key\x2C add an empty value.\n  if (!seenSep)\n    ArrayPrototypePush(out\x2C '');\n\n  return out;\n}\n\n// Adapted from querystring's implementation.\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\nconst noEscape = new Int8Array([\n/*\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\n*/\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\n]);\n\n// Special version of hexTable that uses `+` for U+0020 SPACE.\nconst paramHexTable = hexTable.slice();\nparamHexTable[0x20] = '+';\n\n// application/x-www-form-urlencoded serializer\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\nfunction serializeParams(array) {\n  const len = array.length;\n  if (len === 0)\n    return '';\n\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\n\n  for (let i = 2; i < len; i += 2) {\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\n    output += `&${encodedParam}=${encodedValue}`;\n  }\n\n  return output;\n}\n\n// for merge sort\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\n  const sizeLeft = mid - start;\n  const sizeRight = end - mid;\n  let l\x2C r\x2C o;\n\n  for (l = 0; l < sizeLeft; l++)\n    lBuffer[l] = out[start + l];\n  for (r = 0; r < sizeRight; r++)\n    rBuffer[r] = out[mid + r];\n\n  l = 0;\n  r = 0;\n  o = start;\n  while (l < sizeLeft && r < sizeRight) {\n    if (lBuffer[l] <= rBuffer[r]) {\n      out[o++] = lBuffer[l++];\n      out[o++] = lBuffer[l++];\n    } else {\n      out[o++] = rBuffer[r++];\n      out[o++] = rBuffer[r++];\n    }\n  }\n  while (l < sizeLeft)\n    out[o++] = lBuffer[l++];\n  while (r < sizeRight)\n    out[o++] = rBuffer[r++];\n}\n\nfunction domainToASCII(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToASCII(`${domain}`);\n}\n\nfunction domainToUnicode(domain) {\n  if (arguments.length < 1)\n    throw new ERR_MISSING_ARGS('domain');\n\n  // StringPrototypeToWellFormed is not needed.\n  return bindingUrl.domainToUnicode(`${domain}`);\n}\n\n/**\n * Utility function that converts a URL object into an ordinary options object\n * as expected by the `http.request` and `https.request` APIs.\n * @param {URL} url\n * @returns {Record<string\x2C unknown>}\n */\nfunction urlToHttpOptions(url) {\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\n  const options = {\n    __proto__: null\x2C\n    ...url\x2C // In case the url object was extended by the user.\n    protocol: url.protocol\x2C\n    hostname: hostname && hostname[0] === '[' ?\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\n      hostname\x2C\n    hash: url.hash\x2C\n    search: search\x2C\n    pathname: pathname\x2C\n    path: `${pathname || ''}${search || ''}`\x2C\n    href: url.href\x2C\n  };\n  if (port !== '') {\n    options.port = Number(port);\n  }\n  if (username || password) {\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\n  }\n  return options;\n}\n\nfunction getPathFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded \\\\ or / characters'\x2C\n        );\n      }\n    }\n  }\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n  pathname = decodeURIComponent(pathname);\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== ':')) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n  return StringPrototypeSlice(pathname\x2C 1);\n}\n\nfunction getPathBufferFromURLWin32(url) {\n  const hostname = url.hostname;\n  let pathname = url.pathname;\n  // In the getPathFromURLWin32 variant\x2C we scan the input for backslash (\\)\n  // and forward slash (/) characters\x2C specifically looking for the ASCII/UTF8\n  // encoding these and forbidding their use. This is a bit tricky\n  // because these may conflict with non-UTF8 encodings. For instance\x2C\n  // in shift-jis\x2C %5C identifies the symbol for the Japanese Yen and not the\n  // backslash. If we have a url like file:///foo/%5c/bar\x2C then we really have\n  // no way of knowing if that %5c is meant to be a backslash \\ or a yen sign.\n  // Passing in an encoding option does not help since our Buffer encoding only\n  // knows about certain specific text encodings and a single file path might\n  // actually contain segments that use multiple encodings. It's tricky! So\x2C\n  // for this variation where we are producing a buffer\x2C we won't scan for the\n  // slashes at all\x2C and instead will decode the bytes literally into the\n  // returned Buffer. That said\x2C that can also be tricky because\x2C on windows\x2C\n  // the file path separator *is* the ASCII backslash. This is a known issue\n  // on windows specific to the Shift-JIS encoding that we're not really going\n  // to solve here. Instead\x2C we're going to do the best we can and just\n  // interpret the input url as a sequence of bytes.\n\n  // Because we are converting to a Windows file path here\x2C we need to replace\n  // the explicit forward slash separators with backslashes. Note that this\n  // intentionally disregards any percent-encoded forward slashes in the path.\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\n\n  // Now\x2C let's start to build our Buffer. We will initially start with a\n  // Buffer allocated to fit in the entire string. Worst case there are no\n  // percent encoded characters and we take the string as is. Any invalid\n  // percent encodings\x2C e.g. `%ZZ` are ignored and are passed through\n  // literally.\n  const decodedu8 = percentDecode(Buffer.from(pathname\x2C 'utf8'));\n  const decodedPathname = Buffer.from(TypedArrayPrototypeGetBuffer(decodedu8)\x2C\n                                      TypedArrayPrototypeGetByteOffset(decodedu8)\x2C\n                                      TypedArrayPrototypeGetByteLength(decodedu8));\n  if (hostname !== '') {\n    // If hostname is set\x2C then we have a UNC path\n    // Pass the hostname through domainToUnicode just in case\n    // it is an IDN using punycode encoding. We do not need to worry\n    // about percent encoding because the URL parser will have\n    // already taken care of that for us. Note that this only\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\n\n    // This is a bit tricky because of the need to convert to a Buffer\n    // followed by concatenation of the results.\n    const prefix = Buffer.from('\\\\\\\\'\x2C 'ascii');\n    const domain = Buffer.from(domainToUnicode(hostname)\x2C 'utf8');\n\n    return Buffer.concat([prefix\x2C domain\x2C decodedPathname]);\n  }\n  // Otherwise\x2C it's a local path that requires a drive letter\n  // In this case we're only going to pay attention to the second and\n  // third bytes in the decodedPathname. If first byte is either an ASCII\n  // uppercase letter between 'A' and 'Z' or lowercase letter between\n  // 'a' and 'z'\x2C and the second byte must be an ASCII `:` or the\n  // operation will fail.\n\n  const letter = decodedPathname[1] | 0x20;\n  const sep = decodedPathname[2];\n\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\n      (sep !== CHAR_COLON)) {\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\n  }\n\n  // Now\x2C we'll just return everything except the first byte of\n  // decodedPathname\n  return decodedPathname.subarray(1);\n}\n\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n  for (let n = 0; n < pathname.length; n++) {\n    if (pathname[n] === '%') {\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\n      if (pathname[n + 1] === '2' && third === 102) {\n        throw new ERR_INVALID_FILE_URL_PATH(\n          'must not include encoded / characters'\x2C\n        );\n      }\n    }\n  }\n  return decodeURIComponent(pathname);\n}\n\nfunction getPathBufferFromURLPosix(url) {\n  if (url.hostname !== '') {\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\n  }\n  const pathname = url.pathname;\n\n  // In the getPathFromURLPosix variant\x2C we scan the input for forward slash\n  // (/) characters\x2C specifically looking for the ASCII/UTF8 and forbidding\n  // its use. This is a bit tricky because these may conflict with non-UTF8\n  // encodings. Passing in an encoding option does not help since our Buffer\n  // encoding only knows about certain specific text encodings and a single\n  // file path might actually contain segments that use multiple encodings.\n  // It's tricky! So\x2C for this variation where we are producing a buffer\x2C we\n  // won't scan for the slashes at all\x2C and instead will decode the bytes\n  // literally into the returned Buffer. We're going to do the best we can and\n  // just interpret the input url as a sequence of bytes.\n  const u8 = percentDecode(Buffer.from(pathname\x2C 'utf8'));\n  return Buffer.from(TypedArrayPrototypeGetBuffer(u8)\x2C\n                     TypedArrayPrototypeGetByteOffset(u8)\x2C\n                     TypedArrayPrototypeGetByteLength(u8));\n}\n\nfunction fileURLToPath(path\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if (typeof path === 'string')\n    path = new URL(path);\n  else if (!isURL(path))\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  if (path.protocol !== 'file:')\n    throw new ERR_INVALID_URL_SCHEME('file');\n  return (windows ?? isWindows) ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\n}\n\n// An alternative to fileURLToPath that outputs a Buffer\n// instead of a string. The other fileURLToPath does not\n// handle non-UTF8 encoded percent encodings at all\x2C so\n// converting to a Buffer is necessary in cases where the\n// to string conversion would fail.\nfunction fileURLToPathBuffer(path\x2C options = kEmptyObject) {\n  const windows = options?.windows;\n  if (typeof path === 'string') {\n    path = new URL(path);\n  } else if (!isURL(path)) {\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\n  }\n  if (path.protocol !== 'file:') {\n    throw new ERR_INVALID_URL_SCHEME('file');\n  }\n  return (windows ?? isWindows) ? getPathBufferFromURLWin32(path) : getPathBufferFromURLPosix(path);\n}\n\nfunction pathToFileURL(filepath\x2C options = kEmptyObject) {\n  const windows = options?.windows ?? isWindows;\n  const isUNC = windows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\');\n  let resolved = isUNC ?\n    filepath :\n    (windows ? path.win32.resolve(filepath) : path.posix.resolve(filepath));\n  if (isUNC || (windows && StringPrototypeStartsWith(resolved\x2C '\\\\\\\\'))) {\n    // UNC path format: \\\\server\\share\\resource\n    // Handle extended UNC path and standard UNC path\n    // "\\\\?\\UNC\\" path prefix should be ignored.\n    // Ref: https://learn.microsoft.com/en-us/windows/win32/fileio/maximum-file-path-limitation\n    const isExtendedUNC = StringPrototypeStartsWith(resolved\x2C '\\\\\\\\?\\\\UNC\\\\');\n    const prefixLength = isExtendedUNC ? 8 : 2;\n    const hostnameEndIndex = StringPrototypeIndexOf(resolved\x2C '\\\\'\x2C prefixLength);\n    if (hostnameEndIndex === -1) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        resolved\x2C\n        'Missing UNC resource path'\x2C\n      );\n    }\n    if (hostnameEndIndex === 2) {\n      throw new ERR_INVALID_ARG_VALUE(\n        'path'\x2C\n        resolved\x2C\n        'Empty UNC servername'\x2C\n      );\n    }\n    const hostname = StringPrototypeSlice(resolved\x2C prefixLength\x2C hostnameEndIndex);\n    return new URL(StringPrototypeSlice(resolved\x2C hostnameEndIndex)\x2C hostname\x2C kCreateURLFromWindowsPathSymbol);\n  }\n  // path.resolve strips trailing slashes so we must add them back\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\n                                                 filepath.length - 1);\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\n       ((windows ?? isWindows) && filePathLast === CHAR_BACKWARD_SLASH)) &&\n      resolved[resolved.length - 1] !== path.sep)\n    resolved += '/';\n\n  return new URL(resolved\x2C undefined\x2C windows ? kCreateURLFromWindowsPathSymbol : kCreateURLFromPosixPathSymbol);\n}\n\nfunction toPathIfFileURL(fileURLOrPath) {\n  if (!isURL(fileURLOrPath))\n    return fileURLOrPath;\n  return fileURLToPath(fileURLOrPath);\n}\n\n/**\n * This util takes a string containing a URL and return the URL origin\x2C\n * its meant to avoid calls to `new URL` constructor.\n * @param {string} url\n * @returns {URL['origin']}\n */\nfunction getURLOrigin(url) {\n  return bindingUrl.getOrigin(url);\n}\n\nmodule.exports = {\n  fileURLToPath\x2C\n  fileURLToPathBuffer\x2C\n  pathToFileURL\x2C\n  toPathIfFileURL\x2C\n  installObjectURLMethods\x2C\n  URL\x2C\n  URLPattern\x2C\n  URLSearchParams\x2C\n  URLParse: URL.parse\x2C\n  domainToASCII\x2C\n  domainToUnicode\x2C\n  urlToHttpOptions\x2C\n  encodeStr\x2C\n  isURL\x2C\n\n  urlUpdateActions: updateActions\x2C\n  getURLOrigin\x2C\n  unsafeProtocol\x2C\n  hostlessProtocol\x2C\n  slashedProtocol\x2C\n};\n
code-source-info,0x148009f80,38,22114,22225,,,
tick,0x1014d1e20,50375,0,0x0,9,0x277c96e9902d,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,JS,10,50416,0x14800a160,192,isUint8Array node:internal/util/types:13:22,0x3699125dc090,^
script-source,15,node:internal/util/types,'use strict';\n\nconst {\n  ArrayBufferIsView\x2C\n  ObjectDefineProperties\x2C\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\n} = primordials;\n\nfunction isTypedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\n}\n\nfunction isUint8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\n}\n\nfunction isUint8ClampedArray(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\n}\n\nfunction isUint16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\n}\n\nfunction isUint32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\n}\n\nfunction isInt8Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\n}\n\nfunction isInt16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\n}\n\nfunction isInt32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\n}\n\nfunction isFloat16Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float16Array';\n}\n\nfunction isFloat32Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\n}\n\nfunction isFloat64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\n}\n\nfunction isBigInt64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\n}\n\nfunction isBigUint64Array(value) {\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\n}\n\nmodule.exports = {\n  ...internalBinding('types')\x2C\n  isArrayBufferView: ArrayBufferIsView\x2C\n  isTypedArray\x2C\n  isUint8Array\x2C\n  isUint8ClampedArray\x2C\n  isUint16Array\x2C\n  isUint32Array\x2C\n  isInt8Array\x2C\n  isInt16Array\x2C\n  isInt32Array\x2C\n  isFloat16Array\x2C\n  isFloat32Array\x2C\n  isFloat64Array\x2C\n  isBigInt64Array\x2C\n  isBigUint64Array\x2C\n};\n\nlet isCryptoKey;\nlet isKeyObject;\n\nObjectDefineProperties(module.exports\x2C {\n  isKeyObject: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isKeyObject) {\n        ({ isKeyObject } = require('internal/crypto/keys'));\n      }\n\n      return isKeyObject(obj);\n    }\x2C\n  }\x2C\n  isCryptoKey: {\n    __proto__: null\x2C\n    configurable: false\x2C\n    enumerable: true\x2C\n    value(obj) {\n      if (!process.versions.openssl) {\n        return false;\n      }\n\n      if (!isCryptoKey) {\n        ({ isCryptoKey } = require('internal/crypto/keys'));\n      }\n\n      return isCryptoKey(obj);\n    }\x2C\n  }\x2C\n});\n
code-source-info,0x14800a160,15,257,342,,,
code-creation,JS,10,50458,0x14800a240,400,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,^
code-source-info,0x14800a240,120,26,119,,,
code-creation,JS,11,50458,0x14800a400,1084,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,+
code-source-info,0x14800a400,120,26,119,,,
new,MemoryChunk,0x25fd84a80000,262144
new,MemoryChunk,0x280c198c0000,262144
new,MemoryChunk,0x27c7cff00000,262144
new,MemoryChunk,0x13d418100000,262144
tick,0x101b9e680,51291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,JS,12,51375,0x14800a8c0,564,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,*
code-source-info,0x14800a8c0,120,26,119,C40O26C56O68C84O117C116O95C144O76C152O50C160O68C176O95C184O76C192O50C192O68C200O95C208O76C216O50C216O68C224O95C232O76C240O50C240O68C248O95C256O76C264O50C276O117C308O26C356O50,,
new,MemoryChunk,0x148040000,262144
code-creation,JS,11,51458,0x148040040,1132,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,+
code-source-info,0x148040040,120,26,119,,,
code-creation,JS,12,51916,0x14800ab40,672,heavy /Users/zl/Desktop/learn/node-learn/node-day6/heavy.js:2:15,0x1db37b268878,*
code-source-info,0x14800ab40,120,26,119,C40O26C56O68C84O117C116O95C176O76C184O95C188O50C196O68C212O95C216O76C224O95C228O50C228O68C236O95C240O76C248O95C252O50C252O68C260O95C264O76C272O95C276O50C276O68C284O95C288O76C296O95C300O50C312O117C400O26C448O50C552O117,,
tick,0x14800ac5c,52541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,53791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,55041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,56291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,57541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,58791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,60083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,61333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,62583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,63833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,65083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,66333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac10,67625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,68875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,70125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,71375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,72625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,73875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,75166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,76416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac58,77666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,78916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac40,80166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,81416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,82708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,83958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,85208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,86458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,87708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,88958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,90208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,91500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac1c,92750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,94000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,95250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,96541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,97791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,99041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,100291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,101541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,102791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,104041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,105291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,106583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,107833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,109083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,110333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,111583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac54,112833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,114083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,115333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,116625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,117875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,119125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,120375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,121625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,122875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,124166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,125416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,126666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,127916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,129166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,130416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,131666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,132958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,134208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,135458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,136708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,137958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,139250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,140500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,141750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,143000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,144250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,145500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,146541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,147833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,149083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,150333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,151583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,152833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,154083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,155333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,156625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,157875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,159125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,160375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,161625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,162875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,164166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,165416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,166666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,167916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,169166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,170416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,171708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,172958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,174208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,175458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,176708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,177958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,179250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,180500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,181750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,183000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,184250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,185500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,186541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,187791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,189083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,190333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,191583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,192833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,194083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,195333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,196625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,197875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,199125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,200375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,201625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,202916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,204166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,205416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,206666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,207916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,209166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,210458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,211708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,212958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac1c,214208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac28,215458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,216708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,218000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,219250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,220500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,221750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,223000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,224250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,225541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,226541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,227791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,229083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,230333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,231583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,232833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,234083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,235333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,236625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,237875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,239125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,240375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,241625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,242875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,244125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,245416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,246666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,247916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,249166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,250416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,251666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,252958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,254208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,255458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,256708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,257958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,259208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,260500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,261750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,263000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,264250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,265500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,266750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,268041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,269291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,270541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,271791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,273041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,274291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,275541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,276833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,278083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,279333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,280583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,281833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,283083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,284375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac1c,285625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,286875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,288125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,289125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,290416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,291666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,292916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,294166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,295416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,296666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,297958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,299208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,300458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,301708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,302958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,304208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,305458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,306750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,308000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,309250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,310500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,311750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,313000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,314250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,315541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,316791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,318041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,319291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,320541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac34,321791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,323083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,324333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,325583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,326833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,328083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,329333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,330625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,331875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,333125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,334166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,335416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,336666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,337916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,339166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,340416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,341666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac18,342958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac3c,344208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,345458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,346708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,347958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,349208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,350500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,351750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,353000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,354250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,355500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,356750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,358041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,359291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac1c,360541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,361791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac54,363041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,364291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,365583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,366833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,368083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,369333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,370583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac4c,371833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,373125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,374375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,375625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,376875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,378125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,379416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,380666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,381916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,383166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,384416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,385666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac24,386916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,388208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,389458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,390708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,391958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,393250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,394500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,395750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,397000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,398250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,399500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,400750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,402041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,403291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,404541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,405791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,407041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac58,408291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,409541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,410833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,412083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,413333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,414583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,415833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,417083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,418333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,419625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,420875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac40,422125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,423375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,424625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac4c,425875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,427166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,428416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,429666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,430916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,432166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,433458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,434708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,435958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,437208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,438458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,439708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,441000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,442250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,443500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,444750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,446000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,447250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,448541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,449791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,451041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,452291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,453541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,454791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,456041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,457333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,458583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,459833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,461083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,462333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,463625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,464875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,466125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,467375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,468625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,469875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,471166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,472416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,473666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,474916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,476166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,477416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,478708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,479958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac28,481208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac28,482458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,483708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,484958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,486250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,487500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,488750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,490000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,491250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,492500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,493791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,495041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,496291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,497541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,498791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,500041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,501291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,502583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,503833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,505083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,506333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,507583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,508875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,510125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,511375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,512625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,513875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,515125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,516375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,517666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,518916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,520166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,521416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,522666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,523958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,525208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,526458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,527708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,528958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,530208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,531500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,532750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,534000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,535250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,536500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,537750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,539041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,540291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,541541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,542791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,544041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac40,545291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,546583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,547833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,549083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,550333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,551583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,552833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,554083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,555333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,556625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,557875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,559125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,560375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,561625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,562875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,564125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,565416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,566666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,567916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,569166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,570416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac4c,571708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,572958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,574208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,575458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,576708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,577958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,579250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,580500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac20,581750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac24,583000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,584250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,585500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,586791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,588041,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,589291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,590541,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,591791,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,593083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,594333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,595583,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,596833,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,598083,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,599333,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,600625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,601875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,603125,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,604375,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,605625,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,606875,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,608166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac2c,609416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac6c,610666,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,611916,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,613166,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,614416,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,615708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,616958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,618208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,619458,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac50,620708,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,621958,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac5c,623208,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,624500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac14,625750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac0c,627000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,628250,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac44,629500,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac68,630750,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac74,632000,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
tick,0x14800ac38,633291,0,0x0,0,0x277c96e98f7f,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,Eval,9,634416,0x277c96e99998,5, node:internal/util/colors:1:1,0x1db37b26e780,~
script-source,121,node:internal/util/colors,'use strict';\n\nlet internalTTy;\nfunction lazyInternalTTY() {\n  internalTTy ??= require('internal/tty');\n  return internalTTy;\n}\n\nmodule.exports = {\n  blue: ''\x2C\n  green: ''\x2C\n  white: ''\x2C\n  red: ''\x2C\n  gray: ''\x2C\n  clear: ''\x2C\n  reset: ''\x2C\n  hasColors: false\x2C\n  shouldColorize(stream) {\n    if (process.env.FORCE_COLOR !== undefined) {\n      return lazyInternalTTY().getColorDepth() > 2;\n    }\n    return stream?.isTTY && (\n      typeof stream.getColorDepth === 'function' ?\n        stream.getColorDepth() > 2 : true);\n  }\x2C\n  refresh() {\n    if (module.exports.shouldColorize(process.stderr)) {\n      module.exports.blue = '\\u001b[34m';\n      module.exports.green = '\\u001b[32m';\n      module.exports.white = '\\u001b[39m';\n      module.exports.yellow = '\\u001b[33m';\n      module.exports.red = '\\u001b[31m';\n      module.exports.gray = '\\u001b[90m';\n      module.exports.clear = '\\u001bc';\n      module.exports.reset = '\\u001b[0m';\n      module.exports.hasColors = true;\n    } else {\n      module.exports.blue = '';\n      module.exports.green = '';\n      module.exports.white = '';\n      module.exports.yellow = '';\n      module.exports.red = '';\n      module.exports.gray = '';\n      module.exports.clear = '';\n      module.exports.reset = '';\n      module.exports.hasColors = false;\n    }\n  }\x2C\n};\n\nmodule.exports.refresh();\n
code-source-info,0x277c96e99998,121,0,1321,C0O0C4O1321,,
code-creation,JS,9,634458,0x277c96e99a90,78, node:internal/util/colors:1:1,0x1db37b26e8a0,~
code-source-info,0x277c96e99a90,121,0,1321,C0O0C26O19C27O19C29O129C37O257C45O521C55O144C59O1295C62O1302C67O1310C72O1310C77O1320,,
code-creation,JS,9,634500,0x277c96e99c08,282,refresh node:internal/util/colors:26:10,0x1db37b26e9a0,~
code-source-info,0x277c96e99c08,121,528,1289,C0O537C3O548C8O556C16O579C21O556C28O596C31O603C38O616C42O638C45O645C52O659C56O681C59O688C66O702C70O724C73O731C80O746C84O768C87O775C94O787C98O809C101O816C108O829C112O851C115O858C122O872C126O891C129O898C136O912C140O933C143O940C149O958C155O985C158O992C165O1005C169O1017C172O1024C179O1038C183O1050C186O1057C193O1071C197O1083C200O1090C207O1105C211O1117C214O1124C221O1136C225O1148C228O1155C235O1168C239O1180C242O1187C249O1201C253O1213C256O1220C263O1234C267O1246C270O1253C276O1271C281O1288,,
tick,0x101296d00,634541,0,0x0,9,0x277c96e99ad8,0x148000610,0x1480002b4,0x621fa6700ee,0x621fa671062,0x621fa67118d,0x621fa671608,0x101b2e818,0x277c96e98f83,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,Eval,9,634625,0x277c96e99e10,5, node:tty:1:1,0x1db37b26f910,~
script-source,122,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\n//\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\n// copy of this software and associated documentation files (the\n// "Software")\x2C to deal in the Software without restriction\x2C including\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\n// persons to whom the Software is furnished to do so\x2C subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nconst {\n  NumberIsInteger\x2C\n  ObjectSetPrototypeOf\x2C\n} = primordials;\n\nconst net = require('net');\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\nconst {\n  ErrnoException\x2C\n  codes: {\n    ERR_INVALID_FD\x2C\n    ERR_TTY_INIT_FAILED\x2C\n  }\x2C\n} = require('internal/errors');\nconst {\n  getColorDepth\x2C\n  hasColors\x2C\n} = require('internal/tty');\n\n// Lazy loaded for startup performance.\nlet readline;\n\nfunction isatty(fd) {\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\n         isTTY(fd);\n}\n\nfunction ReadStream(fd\x2C options) {\n  if (!(this instanceof ReadStream))\n    return new ReadStream(fd\x2C options);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\x2C\n    ...options\x2C\n  });\n\n  this.isRaw = false;\n  this.isTTY = true;\n}\n\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\n\nReadStream.prototype.setRawMode = function(flag) {\n  flag = !!flag;\n  const err = this._handle?.setRawMode(flag);\n  if (err) {\n    this.emit('error'\x2C new ErrnoException(err\x2C 'setRawMode'));\n    return this;\n  }\n  this.isRaw = flag;\n  return this;\n};\n\nfunction WriteStream(fd) {\n  if (!(this instanceof WriteStream))\n    return new WriteStream(fd);\n  if (fd >> 0 !== fd || fd < 0)\n    throw new ERR_INVALID_FD(fd);\n\n  const ctx = {};\n  const tty = new TTY(fd\x2C ctx);\n  if (ctx.code !== undefined) {\n    throw new ERR_TTY_INIT_FAILED(ctx);\n  }\n\n  net.Socket.call(this\x2C {\n    readableHighWaterMark: 0\x2C\n    handle: tty\x2C\n    manualStart: true\x2C\n  });\n\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\n  // this behavior has become expected due historical functionality on OS X\x2C\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\n  this._handle.setBlocking(true);\n\n  const winSize = [0\x2C 0];\n  const err = this._handle.getWindowSize(winSize);\n  if (!err) {\n    this.columns = winSize[0];\n    this.rows = winSize[1];\n  }\n}\n\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\n\nWriteStream.prototype.isTTY = true;\n\nWriteStream.prototype.getColorDepth = getColorDepth;\n\nWriteStream.prototype.hasColors = hasColors;\n\nWriteStream.prototype._refreshSize = function() {\n  const oldCols = this.columns;\n  const oldRows = this.rows;\n  const winSize = [0\x2C 0];\n  const err = this._handle.getWindowSize(winSize);\n  if (err) {\n    this.emit('error'\x2C new ErrnoException(err\x2C 'getWindowSize'));\n    return;\n  }\n  const { 0: newCols\x2C 1: newRows } = winSize;\n  if (oldCols !== newCols || oldRows !== newRows) {\n    this.columns = newCols;\n    this.rows = newRows;\n    this.emit('resize');\n  }\n};\n\n// Backwards-compat\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\n};\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\n};\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearLine(this\x2C dir\x2C callback);\n};\nWriteStream.prototype.clearScreenDown = function(callback) {\n  if (readline === undefined) readline = require('readline');\n  return readline.clearScreenDown(this\x2C callback);\n};\nWriteStream.prototype.getWindowSize = function() {\n  return [this.columns\x2C this.rows];\n};\n\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\n
code-source-info,0x277c96e99e10,122,0,5045,C0O0C4O5045,,
code-creation,JS,9,634750,0x277c96e9a0a8,419, node:tty:1:1,0x1db37b26fa90,~
code-source-info,0x277c96e9a0a
code-creation,Eval,9,634875,0x277c96e9a370,5, node:internal/tty:1:1,0x1db37b270fb8,~
script-source,123,node:internal/tty,// MIT License\n\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\n// of this software and associated documentation files (the "Software")\x2C to deal\n// in the Software without restriction\x2C including without limitation the rights\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\n// copies of the Software\x2C and to permit persons to whom the Software is\n// furnished to do so\x2C subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\n'use strict';\n\nconst {\n  ArrayPrototypeSome\x2C\n  ObjectEntries\x2C\n  ObjectPrototypeHasOwnProperty: hasOwn\x2C\n  RegExpPrototypeExec\x2C\n  SafeMap\x2C\n  StringPrototypeSplit\x2C\n  StringPrototypeToLowerCase\x2C\n} = primordials;\n\nconst { validateInteger } = require('internal/validators');\n\nlet OSRelease;\n\nconst COLORS_2 = 1;\nconst COLORS_16 = 4;\nconst COLORS_256 = 8;\nconst COLORS_16m = 24;\n\n// Some entries were taken from `dircolors`\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\n// support more than 16 colors\x2C but this was not tested for.\n//\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\n// distribution of this file\x2C with or without modification\x2C are permitted\n// provided the copyright notice and this notice are preserved.\nconst TERM_ENVS = {\n  'eterm': COLORS_16\x2C\n  'cons25': COLORS_16\x2C\n  'console': COLORS_16\x2C\n  'cygwin': COLORS_16\x2C\n  'dtterm': COLORS_16\x2C\n  'gnome': COLORS_16\x2C\n  'hurd': COLORS_16\x2C\n  'jfbterm': COLORS_16\x2C\n  'konsole': COLORS_16\x2C\n  'kterm': COLORS_16\x2C\n  'mlterm': COLORS_16\x2C\n  'mosh': COLORS_16m\x2C\n  'putty': COLORS_16\x2C\n  'st': COLORS_16\x2C\n  // http://lists.schmorp.de/pipermail/rxvt-unicode/2016q2/002261.html\n  'rxvt-unicode-24bit': COLORS_16m\x2C\n  // https://bugs.launchpad.net/terminator/+bug/1030562\n  'terminator': COLORS_16m\x2C\n  'xterm-kitty': COLORS_16m\x2C\n};\n\nconst CI_ENVS_MAP = new SafeMap(ObjectEntries({\n  APPVEYOR: COLORS_256\x2C\n  BUILDKITE: COLORS_256\x2C\n  CIRCLECI: COLORS_16m\x2C\n  DRONE: COLORS_256\x2C\n  GITEA_ACTIONS: COLORS_16m\x2C\n  GITHUB_ACTIONS: COLORS_16m\x2C\n  GITLAB_CI: COLORS_256\x2C\n  TRAVIS: COLORS_256\x2C\n}));\n\nconst TERM_ENVS_REG_EXP = [\n  /ansi/\x2C\n  /color/\x2C\n  /linux/\x2C\n  /direct/\x2C\n  /^con[0-9]*x[0-9]/\x2C\n  /^rxvt/\x2C\n  /^screen/\x2C\n  /^xterm/\x2C\n  /^vt100/\x2C\n  /^vt220/\x2C\n];\n\nlet warned = false;\nfunction warnOnDeactivatedColors(env) {\n  if (warned)\n    return;\n  let name = '';\n  if (env.NODE_DISABLE_COLORS !== undefined && env.NODE_DISABLE_COLORS !== '')\n    name = 'NODE_DISABLE_COLORS';\n  if (env.NO_COLOR !== undefined && env.NO_COLOR !== '') {\n    if (name !== '') {\n      name += "' and '";\n    }\n    name += 'NO_COLOR';\n  }\n\n  if (name !== '') {\n    process.emitWarning(\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\n      'Warning'\x2C\n    );\n    warned = true;\n  }\n}\n\n// The `getColorDepth` API got inspired by multiple sources such as\n// https://github.com/chalk/supports-color\x2C\n// https://github.com/isaacs/color-support.\nfunction getColorDepth(env = process.env) {\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\n  // consistency throughout the ecosystem.\n  if (env.FORCE_COLOR !== undefined) {\n    switch (env.FORCE_COLOR) {\n      case '':\n      case '1':\n      case 'true':\n        warnOnDeactivatedColors(env);\n        return COLORS_16;\n      case '2':\n        warnOnDeactivatedColors(env);\n        return COLORS_256;\n      case '3':\n        warnOnDeactivatedColors(env);\n        return COLORS_16m;\n      default:\n        return COLORS_2;\n    }\n  }\n\n  if ((env.NODE_DISABLE_COLORS !== undefined && env.NODE_DISABLE_COLORS !== '') ||\n      // See https://no-color.org/\n      (env.NO_COLOR !== undefined && env.NO_COLOR !== '') ||\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\n      // ANSI color control codes.\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\n      env.TERM === 'dumb') {\n    return COLORS_2;\n  }\n\n  if (process.platform === 'win32') {\n    // Lazy load for startup performance.\n    if (OSRelease === undefined) {\n      const { release } = require('os');\n      OSRelease = StringPrototypeSplit(release()\x2C '.'\x2C 3);\n    }\n    // Windows 10 build 10586 is the first Windows release that supports 256\n    // colors. Windows 10 build 14931 is the first release that supports\n    // 16m/TrueColor.\n    if (+OSRelease[0] >= 10) {\n      const build = +OSRelease[2];\n      if (build >= 14931)\n        return COLORS_16m;\n      if (build >= 10586)\n        return COLORS_256;\n    }\n\n    return COLORS_16;\n  }\n\n  if (env.TMUX) {\n    return COLORS_16m;\n  }\n\n  // Azure DevOps\n  if (hasOwn(env\x2C 'TF_BUILD') && hasOwn(env\x2C 'AGENT_NAME')) {\n    return COLORS_16;\n  }\n\n  if (hasOwn(env\x2C 'CI')) {\n    for (const { 0: envName\x2C 1: colors } of CI_ENVS_MAP) {\n      if (hasOwn(env\x2C envName)) {\n        return colors;\n      }\n    }\n    if (env.CI_NAME === 'codeship') {\n      return COLORS_256;\n    }\n    return COLORS_2;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\n      COLORS_16 : COLORS_2;\n  }\n\n  switch (env.TERM_PROGRAM) {\n    case 'iTerm.app':\n      if (!env.TERM_PROGRAM_VERSION ||\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\n      ) {\n        return COLORS_256;\n      }\n      return COLORS_16m;\n    case 'HyperTerm':\n    case 'MacTerm':\n      return COLORS_16m;\n    case 'Apple_Terminal':\n      return COLORS_256;\n  }\n\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\n    return COLORS_16m;\n  }\n\n  if (env.TERM) {\n    if (RegExpPrototypeExec(/truecolor/\x2C env.TERM) !== null) {\n      return COLORS_16m;\n    }\n\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\n      return COLORS_256;\n    }\n\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\n\n    if (TERM_ENVS[termEnv]) {\n      return TERM_ENVS[termEnv];\n    }\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\n      return COLORS_16;\n    }\n  }\n  // Move 16 color COLORTERM below 16m and 256\n  if (env.COLORTERM) {\n    return COLORS_16;\n  }\n  return COLORS_2;\n}\n\nfunction hasColors(count\x2C env) {\n  if (env === undefined &&\n      (count === undefined || (typeof count === 'object' && count !== null))) {\n    env = count;\n    count = 16;\n  } else {\n    validateInteger(count\x2C 'count'\x2C 2);\n  }\n\n  return count <= 2 ** getColorDepth(env);\n}\n\nmodule.exports = {\n  getColorDepth\x2C\n  hasColors\x2C\n};\n
code-source-info,0x277c96e9a370,123,0,7150,C0O0C4O7150,,
code-creation,JS,9,635041,0x277c96e9a5e0,485, node:internal/tty:1:1,0x1db37b2711b8,~
code-source-info,0x277c96e9a5e
code-creation,JS,9,635125,0x277c96e9ac90,181,WriteStream node:tty:88:21,0x1db37b26fb90,~
code-source-info,0x277c96e9ac90,122,2503,3449,C0O2512C2O2523C7O2552C12O2559C17O2579C18O2582C20O2589C26O2594C32O2607C37O2616C44O2622C49O2616C50O2661C52O2679C65O2679C71O2707C77O2733C84O2739C89O2733C90O2776C95O2780C100O2787C112O2842C116O2787C122O3266C127O3274C134O3274C139O3312C144O3339C149O3347C154O3347C160O3373C162O3389C163O3411C166O3402C170O3420C172O3439C175O3430C180O3448,,
tick,0x1938fd614,635791,1,0x102294660,6,0x0,0x277c96e9acd1,0x621fa67ccdc,0x621fa67d547,0x277c96e99c18,0x277c96e99ad8,0x148000610,0x1480002b4,0x621fa6700ee,0x621fa671062,0x621fa67118d,0x621fa671608,0x101b2e818,0x277c96e98f83,0x3231531c6577,0x3231531c6e3a,0x3231531c5a07,0x3231531c4d5c,0x2347af07f498,0x3231531c150b,0x3231531cf287,0x277c96e814e8
code-creation,JS,9,636041,0x277c96e9ae20,80,shouldColorize node:internal/util/colors:18:17,0x1db37b26e958,~
code-source-info,0x277c96e9ae20,121,271,517,C0O286C3O298C8O302C14O337C17O344C21O361C26O362C33O378C36O382C37O393C44O406C53O439C61O485C66O485C73O501C79O513,,
code-creation,JS,9,636125,0x277c96e9b100,840,getColorDepth node:internal/tty:123:23,0x1db37b271270,~
code-source-info,0x277c96e9b
code-creation,JS,9,636208,0x277c96e9b5d8,42,Writable.write node:internal/streams/writable:502:36,0x32a185955ec8,~
code-source-info,0x277c96e9b5d8,96,15383,15566,C0O15409C11O15471C14O15490C17O15514C32O15521C41O15564,,
code-creation,JS,9,636250,0x277c96e9b758,401,_write node:internal/streams/writable:451:16,0x32a185955510,~
code-source-info,0x277c96e9b
code-creation,JS,9,636291,0x277c96e9bad8,436,writeOrBuffer node:internal/streams/writable:546:23,0x32a185955558,~
code-source-info,0x277c96e9bad
code-creation,JS,9,636333,0x277c96e9bde0,61,set node:internal/streams/writable:260:8,0x32a185955b88,~
code-source-info,0x277c96e9bde0,96,8339,8500,C0O8355C2O8360C7O8375C11O8390C15O8411C17O8416C26O8427C31O8424C37O8460C39O8465C48O8477C50O8476C55O8473C60O8499,,
code-creation,JS,9,636375,0x277c96e9beb0,26,Socket._write node:net:977:35,0x7143c2e338,~
code-source-info,0x277c96e9beb0,81,25520,25593,C0O25550C19O25550C25O25592,,
code-creation,JS,9,636375,0x277c96e9c008,217,Socket._writeGeneric node:net:935:42,0x7143c2e208,~
code-source-info,0x277c96e9c008,81,24479,25383,C0O24479C21O24681C37O24699C41O24717C45O24729C49O24751C53O24772C66O24772C72O24998C83O24998C89O25026C90O25033C91O25040C92O25058C96O25068C98O25090C102O25109C108O25124C115O25131C118O25127C124O25124C128O25157C129O25170C130O25183C135O25183C139O25205C141O25212C145O25228C161O25234C169O25276C188O25282C194O25332C200O25343C204O25348C207O25375C211O25369C216O25382,,
code-creation,JS,9,636416,0x277c96e9c1b8,44,_unrefTimer node:net:520:52,0x7143c2d4b8,~
code-source-info,0x277c96e9c1b8,81,14395,14505,C0O14415C5O14423C9O14454C11O14460C13O14459C18O14477C20O14478C24O14489C29O14489C33O14439C38O14402C43O14504,,
code-creation,JS,9,636416,0x277c96e9c270,55,writeGeneric node:internal/stream_base_commons:146:22,0x32a185966d78,~
code-source-info,0x277c96e9c270,101,3551,3735,C0O3594C5O3615C7O3614C11O3594C17O3644C29O3644C35O3684C47O3684C52O3722C54O3733,,
code-creation,JS,9,636458,0x277c96e9c360,47,createWriteWrap node:internal/stream_base_commons:108:25,0x32a185966ce8,~
code-source-info,0x277c96e9c360,101,2673,2887,C0O2708C5O2708C11O2728C13O2739C17O2751C19O2766C23O2787C24O2797C28O2808C29O2818C33O2825C34O2836C38O2846C40O2859C44O2874C46O2885,,
code-creation,JS,9,636458,0x277c96e9c4b8,215,handleWriteReq node:internal/stream_base_commons:46:24,0x32a185966c58,~
code-source-info,0x277c96e9c4b8,101,1224,2056,C0O1258C5O1277C80O1347C85O1347C92O1377C99O1397C101O1396C106O1426C108O1437C112O1451C114O1462C115O1527C120O1527C126O1556C127O1612C132O1612C138O1639C139O1678C144O1678C150O1706C151O1803C156O1803C162O1830C163O1871C168O1878C173O1878C180O1925C185O1925C192O1957C199O1977C201O1976C206O2006C208O2017C212O2033C214O2044,,
code-creation,JS,9,636500,0x277c96e9c690,91,afterWriteDispatched node:internal/stream_base_commons:154:30,0x32a185966dc0,~
code-source-info,0x277c96e9c690,101,3766,4044,C0O3785C2O3797C7O3813C9O3812C12O3795C16O3831C21O3861C23O3860C27O3841C31O3885C32O3893C37O3904C39O3918C45O3951C55O3914C61O3911C65O3959C66O3972C72O3992C80O4027C85O4027C90O4043,,
code-creation,JS,9,636541,0x277c96e9c890,728,onwrite node:internal/streams/writable:613:17,0x32a185955630,~
code-source-info,0x277c96e9c
code-creation,JS,9,636625,0x277c96e9cd68,118,Readable.removeListener node:internal/streams/readable:1162:45,0x32a185946e50,~
code-source-info,0x277c96e9cd68,91,36162,36861,C0O36194C5O36225C10O36232C15O36242C20O36257C34O36257C40O36331C42O36338C47O36688C50O36696C58O36696C66O36746C68O36753C73O36772C81O36772C88O36794C93O36807C95O36813C104O36825C106O36824C111O36821C115O36848C117O36859,,
code-creation,JS,9,636708,0x277c96e9ceb0,73,afterWriteTick node:internal/streams/writable:691:24,0x32a185955678,~
code-source-info,0x277c96e9ceb0,96,21183,21347,C0O21186C5O21194C10O21201C15O21208C20O21218C22O21224C31O21236C33O21235C38O21232C42O21259C44O21265C48O21291C52O21301C67O21308C72O21345,,
code-creation,JS,9,636750,0x277c96e9cfd0,198,afterWrite node:internal/streams/writable:697:20,0x32a1859556c0,~
code-source-info,0x277c96e9cfd0,96,21368,21857,C0O21399C2O21405C11O21417C13O21416C18O21413C22O21458C24O21464C30O21476C35O21486C37O21484C43O21499C45O21497C48O21473C54O21512C59O21536C65O21543C69O21552C71O21573C74O21579C80O21590C85O21587C89O21614C97O21614C102O21651C112O21651C117O21662C123O21677C127O21685C129O21685C133O21636C137O21702C139O21712C145O21721C150O21735C155O21748C158O21748C162O21775C164O21785C170O21794C175O21805C180O21818C191O21818C197O21856,,
new,MemoryChunk,0x27e674000000,262144
tick,0x10177d380,637041,0,0x0,8
profiler,end
delete,MemoryChunk,0x10802aa00
delete,MemoryChunk,0x108029800
delete,MemoryChunk,0x108028600
delete,MemoryChunk,0x108027400
delete,MemoryChunk,0x107821400
delete,MemoryChunk,0x107820200
delete,MemoryChunk,0x10781f000
delete,MemoryChunk,0x10781de00
delete,MemoryChunk,0x107822600
delete,MemoryChunk,0x107825c00
delete,MemoryChunk,0x107837000
delete,MemoryChunk,0x107849000
delete,MemoryChunk,0x12d024400
delete,MemoryChunk,0x12d031e00
delete,MemoryChunk,0x12d041c00
delete,MemoryChunk,0x12d03ea00
delete,MemoryChunk,0x12d02e400
delete,MemoryChunk,0x12d04f000
delete,MemoryChunk,0x12d036a00
delete,MemoryChunk,0x12c021400
delete,MemoryChunk,0x12d078000
delete,MemoryChunk,0x12d066a00
delete,MemoryChunk,0x10800e400
delete,MemoryChunk,0x12d067c00
delete,MemoryChunk,0x107823800
delete,MemoryChunk,0x10783a200
delete,MemoryChunk,0x10783b400
delete,MemoryChunk,0x12d035800
delete,MemoryChunk,0x10800d200
delete,LargeObjectChunk,0x2bf7581c0000
delete,MemoryChunk,0x107824a00
